{"version":3,"sources":["stores/PreferencesStore.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/EdgesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/panels/SelectionActionPanel.jsx","components/panels/ZoomPanel.jsx","components/FloatingCards.jsx","app.jsx","index.js","services/AlgorithmUtils.js","constants/index.js","ipc/client.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/src/select.js","graph-frontend/index.js","images/new_argologo_dark.svg","images/new_argologo_light.svg","notifications/client.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["PreferencesStore","requestLoadUserConfig","userConfig","darkMode","this","workspace","workspacePath","requestSaveUserConfig","isRenderOptionsCardHidden","minimapShowing","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","appState","graph","frame","hideMiniMap","console","log","showMiniMap","observable","IS_IFRAME_WIDGET","GraphStore","ref","initialGlobalConfig","nodes","colorBy","color","scale","from","to","sizeBy","size","min","max","labelBy","shape","labelSize","labelLength","edges","_lastSelectedSingleNode","nodesShowingLabels","hasGraphLoaded","selectedNodeId","setOfNeighborIds","Set","rawGraph","forEach","e","source","source_id","toString","target","target_id","add","filter","node","has","id","nodeids","runInAction","map","n","includes","isHidden","removeNodesByIds","overrides","positions","getPositions","pinnedNodes","Array","getPinnedNodes","metadata","global","optionalConfig","snapshot","getSnapshot","noPosition","undefined","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","parse","savedOverrides","Map","Object","entries","k","v","clear","merge","initialNodesShowingLabels","runActiveLayout","paused","smartPause","defaultActive","isActive","startTime","Date","now","smartPaused","nodesToPin","that","process","forEachNode","push","setPinnedNodes","graphFrame","Frame","computedGraph","init","display","ee","on","selectedNodes","data","menu","MenuFactory","children","MenuItemFactory","onClick","toggleSelectedLabels","text","key","unpinSelectedNodes","pinSelectedNodes","rightClickedNode","rightClickedNodeId","neighbors","getNeighborNodesFromRawGraph","sort","n1","n2","ids","i","length","showNodes","ContextMenu","show","left","pageX","top","pageY","uniq","nodeProperties","nodeComputed","ret","p","Number","MAX_VALUE","MIN_VALUE","Math","scales","domain","minMax","range","createGraph","override","get","addNode","label","nodeSizeScale","nodeColorScale","hasNode","addLink","averageClusteringCoefficient","connectedComponents","graphDensity","averageDegree","exactGraphDiameter","duration","interactingWithGraph","computed","fullNodes","fullEdges","edgeProperties","snapshotName","action","ImportStore","postImportFilteringOptions","sortedList","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","nodeFile","path","topN","hasColumns","ready","columns","mapping","delimiter","edgeFile","fromId","toId","createMissing","ProjectStore","SearchStore","AppState","preferences","import","search","project","window","loadAndDisplaySnapshotFromStrapi","uuid","url","BACKEND_URL","fetch","method","mode","then","response","json","body","catch","error","toaster","message","intent","Intent","DANGER","timeout","loadSnapshotFromStrapi","snapshotString","loadImmediateStates","loadAndDisplaySnapshotFromURL","loadSnapshotFromURL","split","pop","loadInitialSampleGraph","a","location","hash","substring","startsWith","decodeURIComponent","alert","SAMPLE_GRAPH_SNAPSHOTS","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","pinNodes","updatePositions","showLabels","searchStr","runSearch","panelOpen","candidates","splice","highlightNodeIds","file","selectedEdgeFileFromInput","hasHeader","importConfig","reader","FileReader","readAsText","onload","lines","result","topLinesAsString","l","trim","join","it","comment","auto_parse","skip_empty_lines","keys","onerror","selectedNodeFileFromInput","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","dialogOpen","onClose","title","checked","onChange","saveUserConfig","toggleDark","PRIMARY","React","Component","name","onToggle","LARGE","FILL","MINIMAL","rightIconName","handleClick","item","ACTIVE","items","onSelect","value","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","ONLY_EDGE_FILE","setState","available","canImport","state","NODE_AND_EDGE_FILE","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","INPUT_GROUP","type","DISABLED","files","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","loading","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","requestCreateNewProject","newProjectName","createdDate","toLocaleString","requestImportGraphFromCSV","turnOffLabelCSSRenderer","GEXFImportDialog","selectedGexfFileFromInput","requestImportGraphFromGexf","gexfDialogOpen","renderImportButton","OpenDialog","GRAPH_AND_STATE_FILE","stateFile","graphFile","renderSelectGraph","INPUT","placeholder","readOnly","requestChooseGraphFile","renderSelectState","requestChooseStateFile","ONLY_GRAPH_FILE","selectedGraph","selectedState","openDialogOpen","requestOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","requestDelete","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","require","ShareDialog","isShared","isFetching","sharedURL","selectedContinue","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","style","width","marginRight","marginBottom","marginTop","overflow","resize","readonly","position","dangerouslySetInnerHTML","__html","StatisticsDialog","statisticsDialogOpen","TABLE","degree","density","diameter","averageClustering","components","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","isNaN","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","neighborDialogOpen","minWidth","numberToShow","attributeName","hiddenNodes","showNMoreByAttribute","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","Dialogs","RenameSnapshotDialog","RegularNavbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","href","LOGO_URL","src","argologo_dark","argologo_light","height","NAVBAR_HEADING","content","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","Position","BOTTOM","pauseLayout","forceUpdate","sortedNodeList","NAVBAR_DIVIDER","self","setInterval","timeNow","resumeLayout","ALIGN_RIGHT","turnOnMinimalMode","GITHUB_URL","fontSize","textDecoration","icon","faGithub","MinimalNavbar","backgroundColor","role","turnOffMinimalMode","Navbar","WorkspaceView","textAlign","ThreeJSVis","setUpFrame","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","float","placement","modifiers","preventOverflow","enabled","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","EdgesPanel","directionOptionOpen","red","THREE","Color","r","blue","g","green","renderData","linecolor","onHover","class","directedOrNot","LabelsPanel","hideAllLabels","showAllLabels","marginLeft","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","padding","whiteSpace","nodeAttributeValue","num","parseFloat","toPrecision","formatLongFloat","visibility","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","cx","cy","StatusBar","numHiddenNodes","SelectionActionPanel","numHiddenNeighbor","WARNING","getSelectedIds","ZoomPanel","controls","dollyIn","reset","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","sideButtonInv","toggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","searchOrder","INTERACTIVE","userSelect","onMouseOver","node_id","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","currentlyHovered","registerIPC","FocusStyleManager","onlyShowFocusOnTabs","fetchWorkspaceProjects","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","innerWidth","MOBILE_WIDTH_CUTOFF","innerHeight","MOBILE_HEIGHT_CUTOFF","setTimeout","App","keydown","which","ReactDOM","render","jsnx","jsgraphs","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","convertToJsnx","ConnectedComponents","idDict","addEdge","convertToJSGraph","componentCount","nodeCount","sum","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","f","hasPathTo","pathLength","pathTo","parent","FRONTEND_URL","SCALE_LINEAR","SCALE_LOG","LOAD_USER_CONFIG","LOADED_USER_CONFIG","SAVE_USER_CONFIG","SAVED_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATE_NEW_PROJECT","CREATED_NEW_PROJECT","DELETE_FILE","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOOSE_GRAPH_FILE","CHOSEN_GRAPH_FILE","CHOOSE_STATE_FILE","CHOSEN_STATE_FILE","IMPORT_GRAPH","IMPORTED_GRAPH","OPEN_GRAPH","OPENED_GRAPH","SEARCH_REQUEST","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","ADD_NODE","GET_NEIGHBORS","ipcRenderer","eventString","filePath","hasNodeFile","toJS","importGraphFromCSV","postImportFilter","importGraphFromGexf","readCSV","fileObject","Promise","resolve","reject","err","msg","parseGEXF","parser","DOMParser","xmlDoc","parseFromString","xmlEdges","getElementsByTagName","xmlNodes","xmlAttri","nodeAttri","edgesArr","nodesArr","nodeAttriOrdered","curr","getAttribute","currEdge","s","t","currNode","nodeAttvalues","nodeAttvalue","pagerank","j","attributes","attributeIdElementAttribute","attributeId","currAttri","readGEXF","config","parseInt","degreeDict","edgesSet","edgeKey","rank","pageRank","gexfParsed","projectMetadata","$","Node","index","in","out","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","memcpy","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","vertices","z","Float32Array","compareV3","aa","ab","copyV3","w","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","create","constructor","copy","def","default","OrbitControls","d3","module","selectNode","dragging","selection","isSelected","updateSelection","mouseX","mouseY","clearSelection","NODE_NO_HIGHLIGHT","draw_object","visible","textHolder","element","hideme","diffx","diffy","clickedNode","pinnedx","pinnedy","fx","fy","hcolor","checkSelection","mouseEnd","Vector3","mouseStart","right","npos","options","layout","force","getNodePosition","insideBox","posx","posy","balancedBinTree","Argo","Toaster","TOP","STATS","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","spawn","inGraph","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","fov","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","appendChild","dom","begin","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","clientWidth","bottom","warn","dollyScale","mousePos","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","exec","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","zIndex","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","directedArrows","arrowMaterial","MeshBasicMaterial","arrow","Mesh","arrowPositions","arrowColors","drawCount","selectBox","Line","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","coords","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","drawNode","links","removeNode","removeGraphEdges","undrawEdges","undrawNode","nodeLinks","getLinks","removeLink","hidden","killed","drawEdge","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","isHighlighted","setRGB","op","ctrl","leftMouseDown","lastHover","endTime","oldStartTime","clickDifference","doubleClicked","newNodeIds","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","transparent","highlight","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMiniMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","setDrawRange","total","arrowPosition","midPointX","midPointY","dX","dY","radianDegree","atan","tempXCorner","cos","tempYCorner","sin","degreeDifference","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","newNode","childNodes","innerText"],"mappings":"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KhC,MAAOnT,KAAK41B,SAClCC,WAAY,CAAE1gB,KAAM,KAAMhC,MAAOnT,KAAK61B,YACtCE,gBAAiB,CAAE5gB,KAAM,IAAKhC,MAAOnT,KAAK+1B,iBAC1CC,KAAM,CAAE7gB,KAAM,IAAKhC,MAAOnT,KAAKg2B,MAC/BC,IAAK,CAAE9gB,KAAM,IAAKhC,MAAOnT,KAAKi2B,KAC9BC,UAAW,CACT/gB,KAAM,KACNhC,MAAO,IAAIoQ,EAAMuS,QAAQ91B,KAAKk2B,UAAU,GAAIl2B,KAAKk2B,UAAU,KAE7DC,QAAS,CAAEhhB,KAAM,IAAKhC,MAAOnT,KAAKm2B,SAClClR,WAAY,CAAE9P,KAAM,IAAKhC,MAAOnT,KAAKilB,YACrCmR,UAAW,CAAEjhB,KAAM,IAAKhC,MAAOnT,KAAKo2B,YAEtCI,aA9JuB,CACvB,yBACA,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiC1lB,KAAK,QACtC2lB,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqC3lB,KAAK,UAoB5C,cAjBOukB,EAAWK,iBACXL,EAAW5xB,WACX4xB,EAAWM,cACXN,EAAW9zB,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","file":"static/js/main.55b005eb.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\nimport { IS_IFRAME_WIDGET } from \"../constants\";\n\nexport default class PreferencesStore {\n  @observable dialogOpen = false;\n\n  @observable openDialogOpen = false;\n  @observable openSnapshotDialogOpen = false;\n  @observable shareDialogOpen = false;\n  @observable statisticsDialogOpen = false;\n  @observable helpDialogOpen = false;\n  @observable neighborDialogOpen = false;\n  @observable dataSheetDialogOpen = false;\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\n\n  // The following fields are asynchronously loaded.\n  // Any writes to these fields through saveUserConfig\n  // won't be active until the app exits and starts\n  // next time.\n\n  @observable darkMode = true;\n  @observable minimapShowing = !IS_IFRAME_WIDGET;\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\n\n  @observable workspacePath = '';\n\n  // This is called at the beginning of the app.\n  loadUserConfig() {\n    requestLoadUserConfig();\n  }\n\n  saveUserConfig() {\n    const userConfig = {\n      darkMode: this.darkMode,\n      workspace: this.workspacePath,\n    }\n\n    requestSaveUserConfig(userConfig);\n  }\n\n  turnOnMinimalMode() {\n    this.isRenderOptionsCardHidden = true;\n    this.minimapShowing = false;\n    this.isStatusBarShowing = false;\n    this.isNavbarInMinimalMode = true;\n    this.isLegendShowing = false;\n    if (appState.graph.frame) {\n      appState.graph.frame.hideMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n    \n  }\n\n  turnOffMinimalMode() {\n    this.isRenderOptionsCardHidden = false;\n    this.minimapShowing = true;\n    this.isStatusBarShowing = true;\n    this.isNavbarInMinimalMode = false;\n    this.isLegendShowing = true;\n    if (appState.graph.frame) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n  }\n}","import { observable, computed, action, runInAction } from \"mobx\";\nimport createGraph from \"ngraph.graph\";\nimport { scales } from \"../constants/index\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient, connectedComponents, graphDensity, averageDegree, exactGraphDiameter } from \"../services/AlgorithmUtils\";\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\nimport { Frame } from \"../graph-frontend\";\n\nexport default class GraphStore {\n\n  initialGlobalConfig = {\n    nodes: {\n      colorBy: \"pagerank\",\n      color: {\n        scale: \"Linear Scale\",\n        from: \"#448AFF\",\n        to: \"#E91E63\"\n      },\n      sizeBy: \"pagerank\",\n      size: {\n        min: 2,\n        max: 10,\n        scale: \"Linear Scale\"\n      },\n      labelBy: \"node_id\",\n      shape: \"circle\",\n      labelSize: 1,\n      labelLength: 10\n    },\n    edges: {\n      color: \"#7f7f7f\"\n    }\n  }\n\n  @observable nodes = this.initialGlobalConfig.nodes;\n  @observable edges = this.initialGlobalConfig.edges\n\n  @observable enableDegree = true;\n  @observable enableDensity = true;\n  @observable enableDiameter = false;\n  @observable enableCoefficient = true;\n  @observable enableComponent = true;\n\n  //access to process.js \"self\"\n  @observable process = undefined;\n\n  // Updated by frame event\n  @observable selectedNodes = [];\n\n  // Currently hovered node\n  @observable currentlyHovered = undefined;\n\n\n  /**\n   * Stores data relevant to smart pause feature\n   */\n  @observable smartPause = {\n    defaultActive: { //data for when graph layout is resumed and smart pause is not in effect \n      isActive: true, //true when layout is resumed and smart pause is not in effect\n      startTime: Date.now(), //keeps track of most recent time graph was unpaused\n      duration: 10000, //duration of resumed layout\n    },\n    //lastUnpaused: undefined, //old code using lastUnpaused\n    smartPaused: false, //true when resumed, but graph layout is paused due to inactivity\n    interactingWithGraph: false, //true when node is clicked or dragged. TODO: refactor to more understandable name\n  }\n\n  // Directed or not\n  @observable directedOrNot = false;\n\n  // Cache the single node that's been selected last time\n  // and will not update unless exactly one node is selected again\n  // useful for NeighborDialog\n  _lastSelectedSingleNode = null;\n  @computed\n  get lastSelectedSingleNode() {\n    if (this.selectedNodes.length === 1) {\n      this._lastSelectedSingleNode = this.selectedNodes[0];\n    }\n    return this._lastSelectedSingleNode;\n  }\n  // Updated by frame event. Not being listened, only used to save label visibility.\n  nodesShowingLabels = [];\n  // Used by autorun during snapshot loading.\n  @observable initialNodesShowingLabels = [];\n\n  @observable\n  overrideConfig = {\n    color: \"#000\",\n    size: 5,\n    label: \"\",\n    shape: \"circle\"\n  };\n\n  @observable\n  rawGraph = {\n    nodes: [],\n    edges: []\n  };\n\n  //saved states from loaded graph snapshot\n  @observable savedStates = null;\n\n  @observable\n  metadata = {\n    fullNodes: 0,\n    fullEdges: 0,\n    nodeProperties: [],\n    nodeComputed: [\"pagerank\", \"degree\"],\n    edgeProperties: [],\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\n  };\n\n  // used for listing all the properties, either original or computed\n  @computed\n  get allPropertiesKeyList() {\n    return uniq([\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]).filter(k => k !== 'id'); // since node_id is already present\n  }\n\n  @observable.ref frame = null;\n  @observable.ref positions = null;\n  @observable pinnedNodes = null;\n\n  @observable overrides = new Map();\n  @observable searchOrder = \"degree\";\n\n  hasGraphLoaded = false;\n\n  @computed\n  get hasGraph() {\n    if (this.rawGraph.nodes.length > 0) {\n      this.hasGraphLoaded = true;\n    }\n    return this.hasGraphLoaded;\n  }\n\n  @computed\n  get minMax() {\n    const ret = {};\n    for (const p of [\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]) {\n      let min = Number.MAX_VALUE;\n      let max = Number.MIN_VALUE;\n\n      for (const n of this.rawGraph.nodes) {\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\n        max = Math.max(max, n[p]);\n      }\n\n      ret[p] = [min, max];\n    }\n    return ret;\n  }\n\n  @computed\n  get nodeSizeScale() {\n    return scales[this.nodes.size.scale]()\n      .domain(this.minMax[this.nodes.sizeBy])\n      .range([this.nodes.size.min, this.nodes.size.max]);\n  }\n\n  @computed\n  get nodeColorScale() {\n    return scales[this.nodes.color.scale]()\n      .domain(this.minMax[this.nodes.colorBy])\n      .range([this.nodes.color.from, this.nodes.color.to]);\n  }\n\n  // Return raw graph nodes that is neighbor with the selected node,\n  // excluding the node itself.\n  getNeighborNodesFromRawGraph(selectedNodeId) {\n    const setOfNeighborIds = new Set();\n    this.rawGraph.edges.forEach(e => {\n      const source = e.source_id.toString();\n      const target = e.target_id.toString();\n      if (source === selectedNodeId && target !== selectedNodeId) {\n        setOfNeighborIds.add(target);\n      }\n      if (target === selectedNodeId && source !== selectedNodeId) {\n        setOfNeighborIds.add(source);\n      }\n    });\n    return this.rawGraph.nodes.filter(node => setOfNeighborIds.has(node.id.toString()));\n  }\n\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\n  @computed\n  get computedGraph() {\n    const graph = createGraph();\n    this.rawGraph.nodes.forEach(n => {\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\n      if (n.isHidden) {\n        return;\n      }\n      const override = this.overrides.get(n.id.toString());\n      graph.addNode(n.id.toString(), {\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\n        size:\n          (override && override.get(\"size\")) ||\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\n        color:\n          (override && override.get(\"color\")) ||\n          this.nodeColorScale(n[this.nodes.colorBy]),\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\n        ref: n\n      });\n    });\n\n    this.rawGraph.edges.forEach(e => {\n      // If isHidden flag is defined and true on an associated node,\n      // leave out its related edges.\n      if (graph.hasNode(e.source_id.toString()) && graph.hasNode(e.target_id.toString())) {\n        graph.addLink(e.source_id.toString(), e.target_id.toString());\n      }\n    });\n\n    return graph;\n  }\n\n  @computed\n  get numHiddenNodes() {\n    return this.rawGraph.nodes.filter(n => n.isHidden).length;\n  }\n\n  showNodes(nodeids) {\n    runInAction('show hidden nodes by ids', () => {\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: false };\n        }\n        return n;\n      });\n    });\n  }\n\n  hideNodes(nodeids) {\n    runInAction('hide nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: true };\n        }\n        return n;\n      });\n    });\n  }\n\n  removeNodes(nodeids) {\n    runInAction('remove nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\n        n => !nodeids.includes(n.id)\n      );\n      this.rawGraph.edges = this.rawGraph.edges.filter(\n        e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\n      );\n    });\n  }\n\n  getSnapshot() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n      overrides: this.overrides,\n      nodesShowingLabels: this.nodesShowingLabels,\n      positions: this.frame.getPositions(),\n      pinnedNodes: Array.from(this.frame.getPinnedNodes()),\n      metadata: this.metadata,\n      global: {\n        nodes: this.nodes,\n        edges: this.edges,\n      },\n    };\n    return snapshot;\n  }\n\n  /**\n   * [Argo-lite] Saves graph snapshot as String\n   * \n   * Note that Argo-lite snapshot contains all graph data\n   * and metadata except nodes/edges deleted by users.\n   * This is different from Argo-electron snapshot.\n   */\n  saveImmediateStates(optionalConfig) {\n    const snapshot = this.getSnapshot();\n    // TODO: add corresponding options on frontend\n    // The optional options allows users to leave out\n    // certain app state when saving snapshot\n    if (optionalConfig) {\n      if (optionalConfig.noPosition) {\n        snapshot.positions = undefined;\n      }\n      if (optionalConfig.noGlobal) {\n        snapshot.global = undefined;\n      }\n      if (optionalConfig.noOverride) {\n        snapshot.overrides = undefined;\n      }\n    }\n    return JSON.stringify(snapshot);\n  }\n\n  @action\n  loadImmediateStates(savedStatesStr) {\n    const savedStates = JSON.parse(savedStatesStr);\n    this.savedStates = savedStates;\n    if (!savedStates) {\n      return;\n    }\n    const savedOverrides = new Map(\n      Object.entries(savedStates.overrides).map(([k, v]) => [\n        k,\n        new Map(Object.entries(v))\n      ])\n    );\n    this.overrides.clear();\n    this.overrides.merge(savedOverrides);\n\n    if (savedStates.metadata) {\n      this.metadata = savedStates.metadata;\n    }\n    if (savedStates.global) {\n      this.nodes = savedStates.global.nodes;\n      this.edges = savedStates.global.edges ? savedStates.global.edges : this.edges;\n    }\n    // The following lines trigger autoruns.\n    this.rawGraph = savedStates.rawGraph;\n    if (savedStates.positions) {\n      this.positions = savedStates.positions;\n    }\n    if (savedStates.nodesShowingLabels) {\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\n    }\n\n    //stores data pinned nodes in appState\n    if (savedStates.pinnedNodes) {\n      this.pinnedNodes = new Set(savedStates.pinnedNodes);\n    }\n\n\n    this.runActiveLayout();\n  }\n\n\n  //resumes graph layout for a set duration before smart-pausing\n  runActiveLayout() {\n    if(this.frame) {\n      this.frame.paused = false;\n    } \n    this.smartPause.defaultActive.isActive = true;\n    this.smartPause.defaultActive.startTime = Date.now();\n    this.smartPause.smartPaused = false;\n  }\n\n  //selects which nodes should be pinned based on saved state of loaded snapshot\n  pinNodes() {\n    if (this.pinnedNodes) {\n      let nodesToPin = [];\n      let that = this; //\"this\" will not work inside of forEach, so it needs to be stored\n      this.process.graph.forEachNode(function (n) {\n        if (that.pinnedNodes.has(n.id)) {\n          nodesToPin.push(n);\n        }\n      });\n      this.frame.setPinnedNodes(nodesToPin);\n    }\n  }\n\n  setUpFrame() {\n    const graphFrame = new Frame(this.computedGraph);\n    graphFrame.init();\n    graphFrame.display();\n    this.frame = graphFrame;\n    graphFrame.ee.on(\"select-nodes\", nodes => {\n      this.selectedNodes = nodes;\n    });\n    graphFrame.ee.on(\"show-node-label\", nodes => {\n      this.nodesShowingLabels = nodes;\n    });\n    graphFrame.ee.on(\"right-click\", data => {\n      const menu = MenuFactory({\n        children: [\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.toggleSelectedLabels();\n            },\n            text: 'Toggle Labels',\n            key: 'Toggle Labels'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.unpinSelectedNodes();\n            },\n            text: 'Unpin Selected',\n            key: 'Unpin Selected'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.pinSelectedNodes();\n            },\n            text: 'Pin Selected',\n            key: 'Pin Selected'\n          }),\n          this.frame.rightClickedNode && MenuItemFactory({\n            onClick: () => {\n              if (this.frame.rightClickedNode) {\n                const rightClickedNodeId = this.frame.rightClickedNode.data.ref.id.toString();\n                const neighbors = this.getNeighborNodesFromRawGraph(rightClickedNodeId);\n                neighbors.sort((n1, n2) => {\n                  if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                    return n2[\"pagerank\"] - n1[\"pagerank\"];\n                  }\n                  return 0;\n                });\n                const ids = [];\n                for (let i = 0; i < 5 && i < neighbors.length; i++) {\n                  ids.push(neighbors[i].id);\n                }\n                this.showNodes(ids);\n              }\n            },\n            text: 'Show 5 Neighbors with Highest PageRank',\n            key: 'Show 5 Neighbors with Highest PageRank'\n          }),\n        ]\n      });\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\n        // onMenuClose\n        console.log(\"ContextMenu closed\");\n      });\n    });\n  }\n\n  /*\n   * Graph algorithms used in StatisticsDialog.\n   */\n\n  get averageClustering() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageClusteringCoefficient(snapshot);\n  }\n\n\n  get components() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return connectedComponents(snapshot);\n  }\n\n  @computed\n  get density() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return graphDensity(snapshot);\n  }\n\n  @computed\n  get degree() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageDegree(snapshot);\n  }\n\n  @computed\n  get diameter() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return exactGraphDiameter(snapshot);\n  }\n}","import { observable } from \"mobx\";\n\nexport default class ImportStore {\n  @observable graphFile = \"\";\n  @observable stateFile = \"\";\n\n  @observable dialogOpen = false;\n  @observable gexfDialogOpen = false;\n\n  @observable loading = false;\n\n  // Argo-lite specific: File object selected via the file input.\n  @observable selectedEdgeFileFromInput = null;\n  @observable selectedNodeFileFromInput = null;\n\n  @observable selectedGexfFileFromInput = null;\n\n  @observable\n  importConfig = {\n    nodeFile: {\n      path: \"\",\n      topN: [],\n      hasColumns: true,\n      ready: false, // whether the topN is ready to display\n      columns: [],\n      mapping: {\n        id: \"<UNK>\"\n      },\n      delimiter: \",\"\n    },\n    edgeFile: {\n      path: \"\",\n      ready: false,\n      hasColumns: true,\n      columns: [],\n      topN: [],\n      mapping: {\n        fromId: \"<UNK>\",\n        toId: \"<UNK>\"\n      },\n      createMissing: true,\n      delimiter: \",\"\n    }\n  };\n\n  /*\n    Post Import Filtering related options.\n  */\n\n  postImportFilteringOptions = {\n    \"top 10 nodes with highest PageRank scores\": (rawGraph) => {\n      const sortedList = [...rawGraph.nodes];\n      sortedList.sort((n1, n2) => {\n          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n              return n2[\"pagerank\"] - n1[\"pagerank\"];\n          }\n          return 0;\n      });\n      const setIds = new Set();\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\n        setIds.add(sortedList[i].id);\n      }\n      rawGraph.nodes = rawGraph.nodes.map(n => {\n        if (setIds.has(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    },\n    \"All Nodes\": (rawGraph) => {\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\n    },\n  };\n\n  defaultPostImportFilteringOption = \"top 10 nodes with highest PageRank scores\";\n  \n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\n\n  postImportFilter(rawGraph) {\n    // Hide all nodes by default, use filtering option to show them.\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\n    // Run the selected post import filtering option.\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\n  }\n\n\n}\n","import { observable } from \"mobx\";\n\nexport default class ProjectStore {\n \n  @observable projects = [];\n\n  /*\n   * Active project and snapshot\n   */\n  @observable currentProject = null;\n  // @observable currentProjectName = null;\n  // @observable currentProjectPath = null;\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\n\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\n  @observable stringCopyOfSnapshot = 'Loading';\n  \n  /*\n   * Dialogs and UI\n   */\n  @observable isNewProjectDialogOpen = false;\n  @observable isProjectDetailDialogOpen = false;\n  @observable isSaveSnapshotDialogOpen = false;\n  @observable isRenameSnapshotDialogOpen = false;\n  // when the ipc returns the projects data for the first time\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\n  // Also used when refreshing WorkspaceView\n  @observable isFetching = true;\n\n  /*\n   * New project creation and import\n   */\n  @observable newProjectName = '';\n}\n","import { observable } from \"mobx\";\n\nexport default class SearchStore {\n  @observable searchStr = \"\";\n  @observable candidates = [];\n  @observable numCandidates = 0;\n  @observable panelOpen = false;\n}\n","import { autorun, runInAction } from \"mobx\";\nimport { Intent } from \"@blueprintjs/core\";\n\nimport PreferencesStore from \"./PreferencesStore\";\nimport GraphStore from \"./GraphStore\";\nimport ImportStore from \"./ImportStore\";\nimport ProjectStore from \"./ProjectStore\";\n// import { peakCSV } from \"../services/CSVUtils\";\nimport parse from \"csv-parse/lib/sync\";\nimport SearchStore from \"./SearchStore\";\nimport { runSearch } from \"../ipc/client\";\n\nimport { BACKEND_URL, SAMPLE_GRAPH_SNAPSHOTS} from \"../constants\";\nimport { toaster } from '../notifications/client';\n\nexport class AppState {\n  constructor() {\n    this.preferences = new PreferencesStore();\n    this.graph = new GraphStore();\n    this.import = new ImportStore();\n    this.search = new SearchStore();\n    this.project = new ProjectStore();\n  }\n}\n\nconst appState = new AppState();\n\nwindow.appState = appState;\n\nconst loadSnapshotFromURL = (url) => {\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.text()).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadSnapshotFromStrapi = (uuid) => {\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadAndDisplaySnapshotFromURL = (url) => {\n  loadSnapshotFromURL(url).then(snapshotString => {\n    // use filename/last segment of URL as title in Navbar\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\n    // TODO: use more sensible snapshot name\n    appState.graph.metadata.snapshotName = 'Shared';\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\n\nwindow.loadInitialSampleGraph = async () => {\n  // default fallback url\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\n\n  // check url hash\n  if (window.location.hash) {\n    const hash = window.location.hash.substring(1);\n    // If the hash component begins with http.\n    if (hash.length >= 4 && hash.startsWith('http')) {\n      try {\n        url = decodeURIComponent(hash);\n      } catch (e) {\n        console.error(e);\n        alert('Provided URL is not valid.');\n      }\n    } else {\n      // If the hash component does not begin with http\n      // treat it as a uuid in strapi.\n      loadAndDisplaySnapshotFromStrapi(hash);\n      return;\n    }\n    \n  }\n  // loadAndDisplaySnapshotFromURL(url)\n  loadAndDisplaySnapshotFromStrapi(SAMPLE_GRAPH_SNAPSHOTS[0][1]);\n};\n\nwindow.saveSnapshotToString = () => {\n  const snapshotString = appState.graph.saveImmediateStates();\n  return snapshotString;\n};\n\n// Load initial sample graph when Argo Lite is ready\nwindow.addEventListener('load', (event) => {\n  window.loadInitialSampleGraph();\n});\n\nconst updateTimeout = null;\n\n// Load graph on frontend once the rawGraph has been returned from IPC\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\nautorun(() => {\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\n    appState.graph.hasGraph = true;\n  }\n}) \n\nautorun(() => {\n  if (appState.graph.frame) {\n    appState.graph.frame.updateGraph(appState.graph.computedGraph); //loads nodes on screen when snapshot loaded\n    appState.graph.frame.setAllNodesShapeWithOverride(appState.graph.nodes.shape, appState.graph.overrides);\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\n  }\n\n  //pins nodes only after nodes are loaded\n  appState.graph.pinNodes();\n});\n\nautorun(() => {\n  if (appState.graph.frame && appState.graph.positions) {\n    // If positions are saved in a snapshot, pause layout upon loading.\n    appState.graph.frame.updatePositions(appState.graph.positions);\n    appState.graph.positions = null;\n    console.log('[autorun] Positions updated.');\n\n  }\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\n    appState.graph.initialNodesShowingLabels = null;\n  }\n});\n\nautorun(() => {\n  const searchStr = appState.search.searchStr;\n  if (searchStr.length >= 3) {\n    runSearch(searchStr);\n  } else {\n    appState.search.panelOpen = false;\n    appState.search.candidates.splice(0, appState.search.candidates.length);\n    if (appState.graph.frame) {\n      appState.graph.frame.highlightNodeIds([], true);\n    }\n  }\n});\n\n// Argo-lite specific: extract CSV from File object and update related fields.\nautorun(() => {\n  const file = appState.import.selectedEdgeFileFromInput;\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n      runInAction(\"preview top N lines of edge file\", () => {\n        appState.import.importConfig.edgeFile.topN = it;\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[1];\n        appState.import.importConfig.edgeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to parse file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nautorun(() => {\n  const file = appState.import.selectedNodeFileFromInput;\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n\n      runInAction(\"preview top N lines of node file\", () => {\n        appState.import.importConfig.nodeFile.topN = it;\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.nodeFile.mapping.id = appState.import.importConfig.nodeFile.columns[0];\n        appState.import.importConfig.nodeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to open file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nexport default appState;\n","import React from \"react\";\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { requestChangeWorkspace } from \"../ipc/client\";\n\n@observer\nclass PreferencesDialog extends React.Component {\n  render() {\n    return (\n      <Dialog\n        iconName=\"cog\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.dialogOpen}\n        onClose={() => {\n          appState.preferences.dialogOpen = false;\n        }}\n        title=\"Preferences\"\n      >\n        <div className=\"pt-dialog-body\">\n          <Switch\n            label=\"Dark Mode\"\n            checked={appState.preferences.darkMode}\n            onChange={() => {\n              appState.preferences.darkMode = !appState.preferences.darkMode;\n              appState.preferences.saveUserConfig();\n              if (appState.graph.frame) {\n                appState.graph.frame.toggleDark();\n              }\n            }}\n          />\n          \n          <Switch\n           label=\"Minimap\"\n           checked={appState.preferences.minimapShowing}\n           onChange={() => {\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\n            appState.preferences.saveUserConfig();\n            if (appState.graph.frame) {\n              if (appState.preferences.minimapShowing) {\n                appState.graph.frame.showMiniMap();\n              } else {\n                appState.graph.frame.hideMiniMap();\n              }\n            } else {\n              console.log(\"Frame not ready when trying to toggle minimap.\");\n            }\n           }}\n          />\n        </div>\n        <div className=\"pt-dialog-footer\">\n          <div className=\"pt-dialog-footer-actions\">\n            <Button\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.preferences.dialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default PreferencesDialog;","import React from \"react\";\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Button\n      className={classnames(Classes.LARGE, Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\n      onClick={onToggle}\n    >\n      {name}\n    </Button>\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\n\nexport default ({ handleClick, item, isActive }) => (\n  <MenuItem\n    className={isActive ? Classes.ACTIVE : \"\"}\n    key={item}\n    onClick={handleClick}\n    text={item}\n  />\n);\n","import React from \"react\";\nimport { Button, Classes } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport CommonItemRenderer from \"./CommonItemRenderer\";\n\nexport default ({ items, onSelect, value, fill = false }) => (\n  <Select\n    items={items}\n    itemRenderer={CommonItemRenderer}\n    filterable={false}\n    onItemSelect={onSelect}\n  >\n    <Button className={fill ? Classes.FILL : null} text={value} />\n  </Select>\n);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass PostImportOptions extends React.Component {\n  render() {\n    return (\n      <div>\n            After import, show:\n            <SimpleSelect\n                items={Object.keys(appState.import.postImportFilteringOptions)}\n                value={appState.import.selectedPostImportFilteringOption}\n                onSelect={(selected) => {\n                    appState.import.selectedPostImportFilteringOption = selected;\n                }}\n            />\n      </div>\n    );\n  }\n}\n\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseEdgeFile,\n  requestChooseNodeFile,\n  requestImportGraphFromCSV,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport Collapsable from \"./utils/Collapsable\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass PreviewTable extends React.Component {\n  render() {\n    const file = this.props.file;\n    return (\n      <Table\n        className=\"import-preview-table\"\n        numRows={file.topN.length}\n        selectedRegions={Object.values(file.mapping)\n          .map(it => file.columns.indexOf(it))\n          .map(it => ({ rows: null, cols: [it, it] }))}\n      >\n        {file.columns.map(it => (\n          <Column\n            key={it}\n            name={it}\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\n          />\n        ))}\n      </Table>\n    );\n  }\n}\n\n@observer\nclass ImportDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_EDGE_FILE,\n      nodesOpen: true,\n      edgesOpen: true,\n      delimiter: ','\n    };\n  }\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  canImport = () => {\n    if (this.state.available === NODE_AND_EDGE_FILE) {\n      return (\n        appState.import.importConfig.edgeFile.ready &&\n        appState.import.importConfig.nodeFile.ready\n      );\n    } else if (this.state.available === ONLY_EDGE_FILE) {\n      return appState.import.importConfig.edgeFile.ready;\n    }\n    return false;\n  };\n\n  renderNodesSelection = () => {\n    const nodeFile = appState.import.importConfig.nodeFile;\n    if (this.state.available === ONLY_EDGE_FILE) {\n      return null;\n    }\n    return (\n      <Collapsable\n        name=\"Nodes\"\n        isOpen={this.state.nodesOpen}\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={nodeFile.hasColumns}\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\n        />\n        {nodeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={nodeFile} />\n            Column for Node ID:\n            <SimpleSelect\n              items={nodeFile.columns}\n              value={nodeFile.mapping.id}\n              onSelect={it => (nodeFile.mapping.id = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  renderEdgesSelection = () => {\n    const edgeFile = appState.import.importConfig.edgeFile;\n    return (\n      <Collapsable\n        name=\"Edges\"\n        isOpen={this.state.edgesOpen}\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={edgeFile.hasColumns}\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\n        />\n        <Switch\n          label=\"Create Missing Nodes\"\n          checked={edgeFile.createMissing}\n          disabled={this.state.available === ONLY_EDGE_FILE}\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\n        />\n        {edgeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={edgeFile} />\n            Column for Source ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.fromId}\n              onSelect={it => (edgeFile.mapping.fromId = it)}\n            />{\" \"}\n            <br />\n            Column for Target ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.toId}\n              onSelect={it => (edgeFile.mapping.toId = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  updateDelimiter (newDelimiter) {\n    this.setState({delimiter: newDelimiter});\n\n    if (newDelimiter == \"\\\\t\") {\n      newDelimiter = \"\\t\"\n    }\n\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\n  }\n\n  renderDelimiterSelection() {\n    return (\n      <div className=\"column-selection\">\n        Selected Delimiter\n        <SimpleSelect\n          items={[\",\", \"\\\\t\", \";\"]}\n          value={this.state.delimiter}\n          onSelect={it => { this.updateDelimiter(it) }}\n        />{\" \"}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.dialogOpen}\n        onClose={() => {\n          appState.import.dialogOpen = false;\n        }}\n        title=\"Import CSV\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderNodesSelection()}\n              {this.renderEdgesSelection()}\n              {this.renderDelimiterSelection()}\n              <hr />\n              <PostImportOptions />\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // TODO: this might be unsafe, check if there's racing condition\n\n                    //active layout when new graph imported\n                    appState.graph.runActiveLayout();\n\n                    requestCreateNewProject({\n                      name: appState.project.newProjectName,\n                      createdDate: new Date().toLocaleString(),\n                    });\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\n                    );\n\n                    // Importing a graph means no label would be shown by default,\n                    // thus turn off label CSSRenderer for better performance.\n                    appState.graph.frame.turnOffLabelCSSRenderer();\n                  }}\n                  text=\"Import\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestImportGraphFromGexf\n} from \"../ipc/client\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass GEXFImportDialog extends React.Component {\n\n  renderImportButton() {\n    return (\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            className={classnames({\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\n            })}\n            intent={Intent.PRIMARY}\n            onClick={() => {\n              // Temp\n              \n               //active layout when new graph imported\n               appState.graph.runActiveLayout();\n\n              appState.import.loading = true;\n              requestImportGraphFromGexf();\n            }}\n            text=\"Import\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.gexfDialogOpen}\n        onClose={() => {\n          appState.import.gexfDialogOpen = false;\n          appState.import.loading = false;\n        }}\n        title=\"Import GEXF\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n            <div>\n              <div className={classnames(Classes.CONTROL_GROUP)}>\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\n                  }}\n                />\n              </div>\n            </div>\n            <hr />\n            <PostImportOptions />\n          </div>\n            {this.renderImportButton()}\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\n\n/**\n * [Deprecated] This dialog is only used to open SQlite-based\n * graph file and optionally along with a snapshot file.\n * \n * For Argo-lite, which only has the JSON snapshot file,\n * use OpenSnapshotDialog.\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseGraphFile,\n  requestChooseStateFile,\n  requestOpen\n} from \"../ipc/client\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport {\n  GRAPH_AND_STATE_FILE,\n  ONLY_EDGE_FILE,\n  ONLY_GRAPH_FILE\n} from \"../constants\";\n\n@observer\nclass OpenDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_GRAPH_FILE,\n      selectedGraph: null,\n      selectedState: null\n    };\n  }\n\n  canImport = () => {\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\n      return appState.import.stateFile && appState.import.graphFile;\n    } else {\n      return appState.import.graphFile;\n    }\n    return false;\n  };\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  renderSelectGraph = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select graph file\"\n            readOnly\n            value={appState.import.graphFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  renderSelectState = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select snapshot file\"\n            readOnly\n            value={appState.import.stateFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openDialogOpen}\n        onClose={() => {\n          appState.preferences.openDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderSelectGraph()}\n              {this.state.available === GRAPH_AND_STATE_FILE &&\n                this.renderSelectState()}\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    appState.preferences.openDialogOpen = false;\n                    requestOpen();\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass NewProjectDialog extends React.Component {\n  \n  render() {\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\n  \n    return (\n      <Dialog\n        iconName=\"projects\"\n        isOpen={appState.project.isNewProjectDialogOpen}\n        onClose={() => {\n          appState.project.isNewProjectDialogOpen = false;\n        }}\n        title=\"Create New Project\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <label className=\"pt-label .modifier\">\n            Project Name\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"New Project\"\n              dir=\"auto\"\n              value={appState.project.newProjectName}\n              onChange={event => {\n                appState.project.newProjectName = event.target.value;\n              }}\n            />\n          </label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !isValidated\n              })}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                if (isValidated) {\n                  appState.project.isNewProjectDialogOpen = false;\n                  appState.import.dialogOpen = true;\n                }\n              }}\n              text=\"Next\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewProjectDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestOpen, requestDelete } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass ProjectDetailDialog extends React.Component {\n  render() {\n    return (\n      appState.project.currentProject && (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isProjectDetailDialogOpen}\n          onClose={() => {\n            appState.project.isProjectDetailDialogOpen = false;\n          }}\n          title={`Load ${appState.project.currentProject.name} Project`}\n        >\n          {appState.project.currentProject.hasGraphData ? (\n            <div className={Classes.DIALOG_BODY}>\n              <Card\n                interactive={true}\n                elevation={Card.ELEVATION_TWO}\n                onClick={() => {\n                  appState.import.graphFile =\n                    appState.project.currentProject.graphDataPath;\n                  appState.project.isProjectDetailDialogOpen = false;\n                  requestOpen();\n                }}\n              >\n                <Icon iconName=\"graph\" /> Start fresh from original graph\n              </Card>\n              <hr />\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\n              <div>\n                {appState.project.currentProject.snapshotPaths.map(\n                  snapshotPath => {\n                    return (\n                      <div key={snapshotPath}>\n                        <Card\n                          interactive={false}\n                          elevation={Card.ELEVATION_TWO}\n                        >\n                          {/* <Icon iconName=\"layout\" /> */}\n                          <h5>\n                            {snapshotPath\n                              .replace(/^.*[\\\\\\/]/, \"\")\n                              .replace(/\\.[^/.]+$/, \"\")}\n                          </h5>\n                          <Button\n                            className={classnames([\n                              Classes.BUTTON,\n                              Classes.INTENT_PRIMARY\n                            ])}\n                            onClick={() => {\n                              appState.import.graphFile =\n                                appState.project.currentProject.graphDataPath;\n                              appState.import.stateFile = snapshotPath;\n                              appState.project.currentSnapshotName = snapshotPath\n                                .replace(/^.*[\\\\\\/]/, \"\")\n                                .replace(/\\.[^/.]+$/, \"\");\n                              appState.project.isProjectDetailDialogOpen = false;\n                              requestOpen();\n                            }}\n                          >\n                            Load Snapshot\n                          </Button>\n                          <Button\n                            className={classnames([Classes.BUTTON])}\n                            onClick={() => {\n                                requestDelete(snapshotPath);\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\n                                  path => path !== snapshotPath\n                                );\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Card>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>\n              Error: Cannot find .argograph file in this project directory.\n            </div>\n          )}\n        </Dialog>\n      )\n    );\n  }\n}\n\nexport default ProjectDetailDialog;","/**\n * [Argo-lite Modified]\n * In electron Argo, snapshots are saved to the active project folder.\n * In Argo-lite, snapshots are saved as a file download.\n * Sometimes, it's tricky to let browser download something without a backend\n * hosting the file. Thus we also allow user to copy paste from\n * a text area containing our snapshot JSON.\n * \n * Remember to change appState.project.stringCopyOfSnapshot\n * before showing the dialog.\n */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestSaveSnapshot } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"Quick Save\",\n  //   };\n  // }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isSaveSnapshotDialogOpen = false;\n          }}\n          title={`Save Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            {/* <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label> */}\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\n            <button\n              onClick={() => {\n                document.getElementById('snapshot-textarea').select();\n                document.execCommand(\"copy\");\n              }}\n            >\n              Copy to Clipboard\n            </button>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                // className={classnames({\n                //   [Classes.DISABLED]: !this.state.name\n                // })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.project.isSaveSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n    Button,\n    Classes,\n    Card,\n    Icon,\n    Dialog,\n    Intent,\n    Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\nimport * as Blueprint from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShared: false,\n            isFetching: false,\n            sharedURL: 'Error: Sharing failed',\n            selectedContinue: false,\n        };\n\n        this.handleRequest = this.handleRequest.bind(this);\n    }\n\n\n\n\n    async handleRequest(uuid) {\n        // return await new Promise(resolve => setTimeout(resolve, 2000));\n        const backendURL = `${BACKEND_URL}/snapshots`;\n        // TODO: add better error handling\n        return await fetch(backendURL, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            referrer: 'no-referrer',\n            body: JSON.stringify({\n                uuid,\n                body: window.saveSnapshotToString()\n            }),\n        }).then(response => response.ok).catch(error => {\n            toaster.show({\n                message: 'Failed to publish to sharing server. Unexpected error.',\n                intent: Intent.DANGER,\n                timeout: -1\n            });\n        });\n    }\n\n    render() {\n\n\n\n        return (\n            <Dialog\n                iconName=\"projects\"\n                isOpen={appState.preferences.shareDialogOpen}\n                onClose={() => {\n                    appState.preferences.shareDialogOpen = false;\n                    this.setState({\n                        ...this.state,\n                        selectedContinue: false,\n                    });\n                }}\n                title={`Share Graph Snapshot`}\n                style={{ width: !this.state.selectedContinue ? 735 : 580 }}\n            >\n                <div className={classnames(Classes.DIALOG_BODY)}>\n                    {\n                        !this.state.selectedContinue && (\n                            <div>\n                                <p style={{ display: \"inline\", marginRight: \"20px\" }}>You can share your snapshot as\n                        <b> a public URL</b>, an <b> HTML iframe</b>, or a <b>Jupyter Notebook IFrame</b></p>\n                                {\n                                    !this.state.selectedContinue && (\n                                        <Button\n                                            className={classnames({\n                                                [Classes.DISABLED]: this.state.isFetching\n                                            })}\n                                            intent={Intent.PRIMARY}\n                                            onClick={async () => {\n                                                this.setState({ isFetching: true });\n                                                // Generate a random UUID\n                                                const uuid = uuidv4();\n                                                // Generate URL corresponding to the UUID\n                                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                                // Wait for backend response\n                                                const requestSuccess = await this.handleRequest(uuid);\n                                                // Update local state\n                                                if (requestSuccess) {\n                                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                                } else {\n                                                    // request fails, toast fires\n                                                    this.setState({ isFetching: false, isShared: false });\n                                                    toaster.show({\n                                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                                        intent: Intent.DANGER,\n                                                        timeout: -1\n                                                    });\n                                                }\n                                                this.setState({\n                                                    ...this.state,\n                                                    selectedContinue: true,\n                                                });\n                                            }}\n                                            text=\"Continue\"\n                                        />\n                                    )\n                                }\n                                <hr />\n                                {/**pt-callout pt-intent-primary .modifier */}\n                                <div className=\"pt-callout pt-intent-warning\" style={{marginBottom: \"20px\",}}>\n                                    <p className=\"pt-callout-title\">This snapshot is “static”, like taking a photo of your visualization. This means that if your graph is changed in any ways (e.g., move nodes around) after creating a URL and you want to re-share those updates, you will need to create a new URL by selecting <b>Share Again to a new URL</b> in the next window.</p>\n                                </div>\n                                <div className=\"pt-callout pt-intent-danger\">\n                                    <p className=\"pt-callout-title \"><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data (>400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                    {\n                        this.state.isFetching && (\n                            <p style={{marginTop: \"10px\"}}><b>Sharing in progress. Please wait...</b></p>\n                        )\n                    }\n                    {\n                        this.state.selectedContinue && (\n                            <div>\n                                {/** graph URL */}\n                        Your current snapshot has been shared to\n                                <br />\n                                <input\n                                    id=\"snapshot-textarea\"\n                                    type=\"textarea\"\n                                    value={this.state.sharedURL}\n                                    readOnly\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('snapshot-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as HTML iframe */}\n                        Embed as an <b>HTML iframe</b>:\n                                <br />\n                                <input\n                                    id=\"iframe-html-textarea\"\n                                    type=\"textarea\"\n                                    value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                    readOnly\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-html-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as Jupyter Notebook IFrame */}\n                        Embed as a <b>Jupyter Notebook IFrame</b>:\n                                <br />\n                                <textarea\n                                    id=\"iframe-jupyter-textarea\"\n                                    rows=\"2\"\n                                    cols=\"60\"\n                                    style={{\n                                        overflow: \"hidden\",\n                                        marginTop: \"5px\",\n                                        width: \"400px\",\n                                        resize: \"none\"\n                                    }}\n                                    readonly=\"true\"\n                                    value={`from IPython.display import IFrame` + \"\\n\" + `IFrame(\"${this.state.sharedURL}\", width=700, height=350)`} />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-jupyter-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                    style={{\n                                        position: \"absolute\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    Copy to Clipboard\n                        </button>\n                            </div>\n                        )\n                    }\n                </div>\n\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                        {\n                            this.state.selectedContinue && (\n\n\n                                <Button\n                                    className={classnames({\n                                        [Classes.DISABLED]: this.state.isFetching\n                                    })}\n                                    intent={Intent.PRIMARY}\n                                    onClick={async () => {\n                                        this.setState({ isFetching: true, isShared: false });\n                                        // Generate a random UUID\n                                        const uuid = uuidv4();\n                                        // Generate URL corresponding to the UUID\n                                        const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                        // Wait for backend response\n                                        const requestSuccess = await this.handleRequest(uuid);\n                                        // Update local state\n                                        if (requestSuccess) {\n                                            this.setState({ isFetching: false, isShared: true, sharedURL });\n                                        } else {\n                                            // request fails, toast fires\n                                            this.setState({ isFetching: false, isShared: false });\n                                            toaster.show({\n                                                message: 'Failed to publish to sharing server. Please try again later.',\n                                                intent: Intent.DANGER,\n                                                timeout: -1\n                                            });\n                                        }\n\n                                    }}\n                                    text=\"Share Snapshot as New URL\"\n                                />\n                            )\n                        }\n\n                    </div>\n                </div>\n\n\n                <style dangerouslySetInnerHTML={{\n                    __html:\n                        `\n                    .copy-to-clipboard{\n                        margin-top: 5px;\n                        margin-left: 5px;\n                        border-style: solid;\n                    }\n                    \n            `}} />\n            </Dialog>\n        );\n    }\n}\n\nexport default ShareDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass StatisticsDialog extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.preferences.statisticsDialogOpen}\n          onClose={() => {\n            appState.preferences.statisticsDialogOpen = false;\n          }}\n          title={`Statistics`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <table className={Classes.TABLE} style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Statistics</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td># Nodes</td>\n                        <td>{appState.graph.metadata.fullNodes}</td>\n                    </tr>\n                    <tr>\n                        <td># Edges</td>\n                        <td>{appState.graph.metadata.fullEdges}</td>\n                    </tr>\n                    <tr>\n                        <td>Average Degree</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Density</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Diameter</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Clustering Coefficient</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\n                    </tr>\n                    <tr>\n                        <td>Connected Component</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\n\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.statisticsDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default StatisticsDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass HelpDialog extends React.Component {\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"help\"\n          isOpen={appState.preferences.helpDialogOpen}\n          onClose={() => {\n            appState.preferences.helpDialogOpen = false;\n          }}\n          title={`Help`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            Argo supports both mouse/trackpad and touchscreen.\n            <div className=\"argo-table-container\">\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                <thead>\n                  <tr>\n                    <th>Basic Operation</th>\n                    <th>Mouse</th>\n                    <th>Touchscreen</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Zoom</td>\n                    <td>Mouse wheel</td>\n                    <td>2 finger zoom gesture</td>\n                  </tr>\n                  <tr>\n                    <td>Pan</td>\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\n                    <td>Drag with 3 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select single node (view details)</td>\n                    <td>Single Click</td>\n                    <td>Tap with 1 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select multiple nodes</td>\n                    <td>Drag left mouse button from empty area</td>\n                    <td>Drag 1 finger from empty area</td>\n                  </tr>\n                  <tr>\n                    <td>Drag nodes</td>\n                    <td>Drag with left mouse button down</td>\n                    <td>Drag with 1 finger</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.helpDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default HelpDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Switch,\n  ButtonGroup\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NodeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: 'pagerank',\n            sortOrder: 'descending', // or 'ascending'\n        };\n    }\n\n  render() {\n    let filteredNodes = this.props.nodes;\n    \n    filteredNodes.sort((n1, n2) => {\n        const n1val = n1[this.state.sortBy];\n        const n2val = n2[this.state.sortBy];\n        if (n1val && n2val) {\n            // Check if these are numerical fields, if so sort by number.\n            const n1valAsNum = Number(n1val);\n            const n2valAsNum = Number(n2val);\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\n                // both values are numeric, compare by their value.\n                if (this.state.sortOrder === 'descending') {\n                    return n2valAsNum - n1valAsNum;\n                }\n                return n1valAsNum - n2valAsNum;\n            } else {\n                // not all values are numeric, sort by string order.\n                const n1valAsString = n1val.toString();\n                const n2valAsString = n2val.toString();\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\n            }\n        }\n        return 0;\n    });\n\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\n    \n    return (\n            <div className=\"argo-table-container\">\n                Sort By {' '}\n                <SimpleSelect\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\n                    value={this.state.sortBy}\n                    onSelect={(selected) => {\n                        this.setState({sortBy: selected});\n                    }}\n                />\n                <SimpleSelect\n                    items={['descending', 'ascending']}\n                    value={this.state.sortOrder}\n                    onSelect={(selected) => {\n                        this.setState({sortOrder: selected});\n                    }}\n                />\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                    <thead>\n                        <tr>\n                            <th><b>Show</b></th>\n                            <th><b>Node ID</b></th>\n                            {\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\n                                    if (it !== 'id') {\n                                        return <th key={`${it}-${i}`}>{it}</th>;\n                                    }\n                                    return null;\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredNodes.map((node) => (\n                                <tr key={node.id}>\n                                    <td>\n                                        <Switch\n                                            checked={!node.isHidden}\n                                            onChange={() => {\n                                                if (node.isHidden) {\n                                                    appState.graph.showNodes([node.id]);\n                                                } else {\n                                                    appState.graph.hideNodes([node.id]);\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                    <td>{node.id}</td>\n                                    {\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\n                                            if (it !== 'id') {\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n    );\n  }\n}\n\nexport default NodeTable;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NeighborDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    // Compare function for nodes used for sorting descendingly.\n    const compareByPageRank = (n1, n2) => {\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\n        }\n        return 0;\n    };\n\n    let filteredNodes = [];\n    // When only one node is selected, show the neighbors of this selected node.\n    if (appState.graph.lastSelectedSingleNode) {\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\n\n        // Sort by pagerank if available.\n        filteredNodes.sort(compareByPageRank);\n    }\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"graph\"\n          isOpen={appState.preferences.neighborDialogOpen}\n          onClose={() => {\n            appState.preferences.neighborDialogOpen = false;\n          }}\n          title='Neighbors'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.neighborDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default NeighborDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n\n@observer\nclass DataSheetDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"database\"\n          isOpen={appState.preferences.dataSheetDialogOpen}\n          onClose={() => {\n            appState.preferences.dataSheetDialogOpen = false;\n          }}\n          title='Data Sheet'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.dataSheetDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default DataSheetDialog;","import React from \"react\";\nimport PreferencesDialog from \"./PreferencesDialog\";\nimport ImportDialog from \"./ImportDialog\";\nimport GEXFImportDialog from \"./GEXFImportDialog\"\nimport OpenDialog from \"./OpenDialog\";\nimport NewProjectDialog from \"./NewProjectDialog\";\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\nimport ShareDialog from './ShareDialog';\nimport StatisticsDialog from './StatisticsDialog';\nimport HelpDialog from './HelpDialog';\nimport NeighborDialog from './NeighborDialog';\nimport DataSheetDialog from './DataSheetDialog';\n\nexport default class Dialogs extends React.Component {\n  render() {\n    return (\n      <div style={{ display: \"none\" }}>\n        <PreferencesDialog />\n        <ImportDialog />\n        <GEXFImportDialog />\n        <OpenDialog />\n        <OpenSnapshotDialog />\n        <NewProjectDialog />\n        <ProjectDetailDialog />\n        <SaveSnapshotDialog />\n        <RenameSnapshotDialog />\n        <ShareDialog />\n        <StatisticsDialog />\n        <HelpDialog />\n        <NeighborDialog />\n        <DataSheetDialog />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nimport appState from \"../stores/index\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport argologo_dark from '../images/new_argologo_dark.svg';\nimport argologo_light from '../images/new_argologo_light.svg';\nimport { toaster } from '../notifications/client';\nimport { LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS } from '../constants';\n\n@observer\nclass RegularNavbar extends React.Component {\n  render() {\n    return (\n      <nav className={classnames([Classes.NAVBAR])}>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <a href={LOGO_URL} target=\"_blank\">\n            <img title=\"Argo Lite\" id=\"Argo logo\" \n            src={appState.preferences.darkMode ? argologo_dark : argologo_light}\n            height=\"28\"></img>\n          </a>\n          <div className={classnames([Classes.NAVBAR_HEADING])}></div>\n          {/* <a\n            href=\"https://poloclub.github.io/argo-graph/\"\n            target='_blank'\n            style={{\n              padding: '6px 10px 6px 10px',\n              backgroundColor: 'pink',\n              color: 'white',\n              borderRadius: '4px',\n              textDecoration: 'none'\n            }}\n          >\n            Learn more about Argo\n          </a> */}\n          <Popover\n            content={\n              <Menu>\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\n                  {\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\n                      const sampleSnapshotTitle = sample[0];\n                      const sampleSnapshotStrapiUuid = sample[1];\n\n                      return (\n                        <MenuItem\n                          key={sampleSnapshotTitle}\n                          iconName=\"graph\"\n                          text={sampleSnapshotTitle}\n                          onClick={() => {\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\n                          }}\n                        />\n                      );\n                    })\n                  }\n\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from CSV...\"\n                  onClick={() => (appState.import.dialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from GEXF...\"\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-open\"\n                  text=\"Open Snapshot\"\n                  onClick={() => { appState.preferences.openSnapshotDialogOpen = true }}\n                />\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"download\"\n                  text=\"Save Snapshot\"\n                  onClick={() => {\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\n                    appState.project.isSaveSnapshotDialogOpen = true\n                  }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-share\"\n                  text=\"Publish and Share Snapshot\"\n                  onClick={() => { appState.preferences.shareDialogOpen = true }}\n                />\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"document\"\n            >\n              Graph\n            </Button>\n          </Popover>\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"Data Sheet\"\n                  iconName=\"pt-icon-database\"\n                  onClick={() => {\n                    appState.graph.frame.pauseLayout();\n                    appState.preferences.dataSheetDialogOpen = true;\n                    this.forceUpdate();\n                  }}\n                />\n                <MenuItem\n                  text=\"Statistics\"\n                  iconName=\"pt-icon-timeline-bar-chart\"\n                  onClick={() => { appState.preferences.statisticsDialogOpen = true }}\n                />\n                <MenuItem text=\"Filters\" iconName=\"graph\">\n                  <MenuItem\n                    text=\"Show All Nodes\"\n                    onClick={() => {\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 PageRank\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                          return n2[\"pagerank\"] - n1[\"pagerank\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 Degree\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"degree\"] && n2[\"degree\"]) {\n                          return n2[\"degree\"] - n1[\"degree\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Hide All Nodes\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                </MenuItem>\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"pt-icon-wrench\"\n            >\n              Tools\n            </Button>\n          </Popover>\n        </div>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          {appState.graph.hasGraph && appState.graph.frame && (\n            <div style={{ display: \"inline\" }}>\n              \n              {/** Smart Pause functionality: pauses graph when no interaction */}\n              {(() => {\n              let self = this;\n              setInterval(function () {\n                  let timeNow = Date.now();\n                  /**stops initial default active layout*/\n                  if(appState.graph.smartPause.defaultActive.isActive) {\n                    if(timeNow - appState.graph.smartPause.defaultActive.startTime > appState.graph.smartPause.defaultActive.duration\n                      || appState.graph.smartPause.interactingWithGraph) {\n                      appState.graph.smartPause.defaultActive.isActive = false;\n                    }\n                  } else {\n                      /**smart pausing*/\n                    if(!appState.graph.frame.paused && \n                      !appState.graph.smartPause.interactingWithGraph){\n                        appState.graph.frame.pauseLayout();\n                        appState.graph.frame.paused = true;\n                        appState.graph.smartPause.smartPaused = true;\n                        self.forceUpdate();\n                    }\n                    /**old code using lastUnpaused:*/\n                    /**\n                     * if(!appState.graph.frame.paused && \n                      appState.graph.smartPause.lastUnpaused && \n                      !appState.graph.smartPause.interactingWithGraph && timeNow - appState.graph.smartPause.lastUnpaused > 300){\n                        appState.graph.frame.pauseLayout();\n                        appState.graph.frame.paused = true;\n                        appState.graph.smartPause.smartPaused = true;\n                        self.forceUpdate();\n                    }\n                     */\n\n                    /**un-smart pausing*/\n                    if(appState.graph.smartPause.smartPaused && appState.graph.smartPause.interactingWithGraph) {\n                        appState.graph.frame.resumeLayout();\n                        appState.graph.frame.paused = false;\n                        appState.graph.smartPause.smartPaused = false;\n                        self.forceUpdate();\n                    }\n                  }\n                }, 10)})()}\n\n             {<Tooltip\n                content={(appState.graph.frame.paused) ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\n                position={Position.BOTTOM}\n              >\n                <Button\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n                  iconName={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"play\" : \"pause\"}\n                  text={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"Resume Layout\" : \"Pause Layout\"}\n                  onClick={() => {\n                    if (appState.graph.frame.paused && !appState.graph.smartPause.smartPaused) {\n                      /**graph is going from \"pause layout\" mode to \"resume layout\"*/\n                      \n                      /** graph runs for default duration when unpaused */\n                      appState.graph.runActiveLayout();\n\n                      appState.graph.frame.resumeLayout();\n                      this.forceUpdate();\n                      /**appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused*/\n                    } else if(appState.graph.smartPause.smartPaused) {\n                      /**graph is going from smart paused \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.paused = true;\n                      appState.graph.smartPause.smartPaused = false;\n                    } else {\n                      /**graph is going from in \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.pauseLayout();\n                      this.forceUpdate();\n                    }\n                  }}\n                />\n              </Tooltip>\n          }\n            </div>\n          )}\n\n        </div>\n        <div\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\n        >\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"graph\"\n            onClick={() => {\n              appState.project.isRenameSnapshotDialogOpen = true;\n            }}\n          >\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\n          </Button>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"cog\"\n            onClick={() => {\n              appState.preferences.dialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"help\"\n            onClick={() => {\n              appState.preferences.helpDialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"minimize\"\n            onClick={() => {\n              appState.preferences.turnOnMinimalMode()\n            }}\n          />\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <a\n            href={GITHUB_URL}\n            target='_blank'\n            style={{\n              color: appState.preferences.darkMode ? 'white' : 'black',\n              fontSize: '120%',\n              textDecoration: 'none'\n            }}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\n@observer\nclass MinimalNavbar extends React.Component {\n  render() {\n    return appState.graph.frame && (\n      <div>\n        <div\n          className={classnames(\"minimal-navbar-left\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a\n              className={classnames(\"pt-button pt-icon-maximize\", appState.graph.frame.paused ? \"pt-icon-play\" : \"pt-icon-pause\")}\n              role=\"button\"\n              onClick={() => {\n                if (appState.graph.frame.paused) {\n                  appState.graph.frame.resumeLayout();\n                  this.forceUpdate();\n                } else {\n                  appState.graph.frame.pauseLayout();\n                  this.forceUpdate();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className={classnames(\"minimal-navbar-right\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a className=\"pt-button pt-icon-maximize\" role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\n            <a className=\"pt-button pt-icon-help\" role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\n            <a className=\"pt-button pt-icon-document-open\" role=\"button\" href={window.location} target=\"_blank\"></a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass Navbar extends React.Component {\n  render() {\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Icon,\n  Card,\n  Classes,\n  Spinner,\n  NonIdealState,\n  FocusStyleManager\n} from \"@blueprintjs/core\";\nimport appState from \"../stores/index\";\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\n\n// Argo-lite: In lite, home screen is replaced by a loading screen\n// since there will always be a default graph showing.\n@observer\nclass WorkspaceView extends React.Component {\n  render() {\n    return (\n      <div className=\"workspace\">\n        {/* <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            appState.project.isNewProjectDialogOpen = true;\n          }}\n        >\n          <Icon iconName=\"plus\" /> Create New Project\n        </Card>\n        <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            requestOpenWorkspaceFolder();\n          }}\n        >\n          <Icon iconName=\"cog\" /> Manage Workspace\n        </Card>\n        <hr />\n        <div className=\"argo-menu-list-header\">My Projects</div>\n        <div style={{ paddingBottom: '100px' }}>\n          {appState.project.isFetching ? (\n            <div style={{ textAlign: \"center\" }}>\n              <Spinner />\n            </div>\n          ) : appState.project.projects.length > 0 ? (\n            appState.project.projects.map(project => {\n              return (\n                <div key={project.name}>\n                  <Card\n                    interactive={true}\n                    elevation={Card.ELEVATION_TWO}\n                    onClick={() => {\n                      appState.project.currentProject = project;\n                      appState.project.isProjectDetailDialogOpen = true;\n                    }}\n                  >\n                    <h5>{project.name}</h5>\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\n                  </Card>\n                </div>\n              );\n            })\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              Workspace is empty. Start by creating a new project.\n            </div>\n          )}\n        </div> */}\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\n          <Spinner />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkspaceView;","import React from \"react\";\nimport appState from \"../stores\";\n\nexport default class ThreeJSVis extends React.Component {\n  componentDidMount() {\n    appState.graph.setUpFrame();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"graph-container\"\n        style={{\n          width: \"100vw\",\n          height: \"90vh\",\n          flex: \"1\",\n          position: \"absolute\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass GlobalPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeOutRef: null,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      shapeOptionOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Collapsable Option: Color */}\n        <Collapsable\n          name=\"Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() =>\n            this.setState({\n              colorOptionOpen: !this.state.colorOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Color By: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect  \n                    items={appState.graph.allPropertiesKeyList}\n                    onSelect={it => (appState.graph.nodes.colorBy = it)}\n                    value={appState.graph.nodes.colorBy}\n                  />\n                </span>\n              </div>\n            \n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect\n                    items={Object.keys(scales)}\n                    onSelect={it => (appState.graph.nodes.color.scale = it)}\n                    value={appState.graph.nodes.color.scale}\n                  />\n                </span>\n              </div>\n          \n            <div>\n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Gradient: &nbsp;</p>\n                <span style={{float:\"right\"}}>\n                    <Popover2\n                        placement=\"bottom\"\n                        modifiers={{\n                            preventOverflow: {\n                              enabled: false,\n                            },\n                          }}\n                    >\n                      <Button                  \n                        text=\"  \"\n                        style={{\n                          backgroundImage: \"inherit\",\n                          backgroundColor: appState.graph.nodes.color.from\n                        }}\n                      />\n                      <SketchPicker\n                        color={appState.graph.nodes.color.from}\n                        onChange={it => (appState.graph.nodes.color.from = it.hex)}\n                      />\n                    </Popover2>\n                    &nbsp; &#8594; &nbsp;\n                    <Popover2 \n                    placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}\n                                  >\n                    <Button\n                      text=\"  \"\n                      style={{\n                        backgroundImage: \"inherit\",\n                        backgroundColor: appState.graph.nodes.color.to\n                      }}\n                    />\n                    <SketchPicker\n                      color={appState.graph.nodes.color.to}\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\n                    />\n                  </Popover2>\n                </span>\n              </div>\n            </div>\n            <div style={{marginTop:\"-1em\"}}>\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\n              <defs>\n                <linearGradient\n                  x1=\"0%\"\n                  y1=\"50%\"\n                  x2=\"100%\"\n                  y2=\"50%\"\n                  id=\"theGradient\"\n                >\n                  <stop\n                    stopColor={appState.graph.nodes.color.from}\n                    stopOpacity=\"1\"\n                    offset=\"0%\"\n                  />\n                  <stop\n                    stopColor={appState.graph.nodes.color.to}\n                    stopOpacity=\"1\"\n                    offset=\"100%\"\n                  />\n                </linearGradient>\n              </defs>\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"100%\"\n                height=\"50\"\n                fill=\"url(#theGradient)\"\n              />\n            </svg>\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Size */}\n        <Collapsable\n          name=\"Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              sizeOptionOpen: !this.state.sizeOptionOpen\n            })\n          }\n        >\n         \n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Scale By:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                    items={appState.graph.allPropertiesKeyList}\n                    itemRenderer={CommonItemRenderer}\n                    filterable={false}\n                    onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\n                  >\n                    <Button text={appState.graph.nodes.sizeBy} />\n                  </Select>\n                </span>\n              \n            </div>\n            <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                  items={Object.keys(scales)}\n                  itemRenderer={CommonItemRenderer}\n                  filterable={false}\n                  onItemSelect={it => (appState.graph.nodes.size.scale = it)}\n                  >\n                    <Button text={appState.graph.nodes.size.scale} />\n                  </Select>\n                </span>\n            </div>\n         \n            <div style={{marginTop:\"10px\"}}> \n              <p style={{display: \"inline\"}}>Size Range:</p>\n            <br />\n            <RangeSlider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={([a, b]) => {\n                runInAction(\"update scale\", () => {\n                  appState.graph.nodes.size.min = a;\n                  appState.graph.nodes.size.max = b;\n                });\n              }}\n              value={[\n                appState.graph.nodes.size.min,\n                appState.graph.nodes.size.max\n              ]}\n            />\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Shape */}\n        <Collapsable\n          name=\"Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              shapeOptionOpen: !this.state.shapeOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <div>\n          <p style={{display: \"inline\"}}>Node Shape:</p>\n          <span style={{float:\"right\"}}>\n            <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => (appState.graph.nodes.shape = it)}\n              >\n                <Button  text={appState.graph.nodes.shape} />\n              </Select>\n              </span>\n            </div>        \n          </div>\n        </Collapsable>\n        <br/>\n        <small>\n          \n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\n          have override styles.  &nbsp;  \n          <Button className={\"pt-small\"} text=\"Clear\" onClick={() => (appState.graph.overrides = new Map())} />\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default GlobalPanel;","import React from \"react\";\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Switch\n      label={name}\n      checked={isOpen}\n      onChange={onToggle}\n      className={Classes.ALIGN_RIGHT}\n    />\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass SelectionPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeOptionOpen: false,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      labelOptionOpen: false\n    };\n  }\n\n  twoLayerUpdate = (nodeId, key, value) => {\n    if (!appState.graph.overrides.has(nodeId)) {\n      appState.graph.overrides.set(nodeId, new Map());\n    }\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\n    if (value !== null) {\n      nodeAttrs.set(key, value);\n    } else {\n      nodeAttrs.delete(key);\n      if (nodeAttrs.size === 0) {\n        appState.graph.overrides.delete(nodeId);\n      }\n    }\n  };\n\n  batchTwoLayerUpdate = (nodes, key, value) => {\n    runInAction(\"update entire selection\", () => {\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n            if (this.state.sizeOptionOpen) {\n              this.setState(\n                {\n                  sizeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  sizeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    appState.graph.overrideConfig.size\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <Slider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={it => {\n                appState.graph.overrideConfig.size = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"size\",\n                  it\n                );\n              }}\n              value={appState.graph.overrideConfig.size}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n            if (this.state.colorOptionOpen) {\n              this.setState(\n                {\n                  colorOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  colorOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    appState.graph.overrideConfig.color\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div>\n              <p style={{display: \"inline\"}}>Choose Color:</p>\n              <span style={{float:\"right\"}}>\n            <Popover2\n              placement=\"bottom\"\n              modifiers={{\n                preventOverflow: {\n                  enabled: false,\n                },\n              }}>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.overrideConfig.color\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.overrideConfig.color}\n                onChange={it => {\n                  appState.graph.overrideConfig.color = it.hex;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    it.hex\n                  );\n                }}\n              />\n            </Popover2>\n            </span>\n            </div>\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Label\"\n          isOpen={this.state.labelOptionOpen}\n          onToggle={() => {\n            if (this.state.labelOptionOpen) {\n              this.setState(\n                {\n                  labelOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  labelOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    appState.graph.overrideConfig.label\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <p style={{display: \"inline\"}}>Custom Label:</p>\n            <input\n              value={appState.graph.overrideConfig.label}\n              onChange={it => {\n                appState.graph.overrideConfig.label = it.target.value;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"label\",\n                  it.target.value\n                );\n              }}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n            if (this.state.shapeOptionOpen) {\n              this.setState(\n                {\n                  shapeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  shapeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    appState.graph.overrideConfig.shape\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n              <p style={{display: \"inline\"}}>Node Shape:</p>\n              <span style={{float:\"right\"}}>\n                <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => {\n                  appState.graph.overrideConfig.shape = it;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    it\n                  );\n                }}\n              >\n                <Button text={appState.graph.overrideConfig.shape} />\n              </Select>\n              </span>        \n            </div>\n          </div>\n        </SwitchCollapsable>\n      </div>\n    );\n  }\n}\n\nexport default SelectionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\n\n@observer\nclass NodesPanel extends React.Component {\n  getRenderedNodes = () => {\n    if (appState.graph.selectedNodes.length === 0) {\n      return (\n        <div>\n          <p>Modifying All Nodes</p>\n        </div>\n      );\n    }\n    return (\n      <p>{`Modifying ${pluralize(\n        \"Node\",\n        appState.graph.selectedNodes.length,\n        true\n      )}`}</p>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getRenderedNodes()}\n        {appState.graph.selectedNodes.length === 0 ? (\n          <GlobalPanel />\n        ) : (\n          <SelectionPanel />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NodesPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport { Button, Checkbox, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport mouse from \"../../graph-frontend/src/select\";\n\n@observer\nclass EdgesPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          timeOutRef: null,\n        //   sizeOptionOpen: false,\n          colorOptionOpen:false,\n          directionOptionOpen:false,\n        //   colorOptionOpen:false,\n        //   thicknessOptionOpen: false,\n        };\n      }\n\n    render() {\n        let graph = appState.graph.graph;\n        return (\n            <div>\n                <p>{`Modifying All Edges`}</p>\n\n\n                {/* Collapsable Option: Color */}\n                <Collapsable\n                    name=\"Color\"\n                    isOpen={this.state.colorOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                        colorOptionOpen: !this.state.colorOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <div> \n                            <p style={{display: \"inline\"}}>Select Edge Color: </p>\n                            <span style={{float:\"right\"}}>\n                                <Popover2 \n                                placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}>\n                                    <Button\n                                    text=\"  \"\n                                    style={{\n                                        backgroundImage: \"inherit\",\n                                        backgroundColor: appState.graph.edges.color\n                                    }}\n                                    />\n                                    <SketchPicker\n                                    color={appState.graph.edges.color}\n                                    onChange={(it) => {\n                                        appState.graph.process.graph.forEachNode(n => {\n                                             \n                                             let red = new THREE.Color(appState.graph.edges.color).r;\n                                             let blue = new THREE.Color(appState.graph.edges.color).g;\n                                             let green = new THREE.Color(appState.graph.edges.color).b;\n                                             n.renderData.linecolor.r = red;\n                                             n.renderData.linecolor.g = blue;\n                                             n.renderData.linecolor.b = green;\n                                           });\n                                        (appState.graph.edges.color = it.hex);\n                                        /**update edge color in real time*/\n                                        appState.graph.process.onHover(); \n                                    }}\n                                    />\n                                </Popover2>\n                            </span>\n                            </div>\n                        \n                    </div>\n                </Collapsable>\n            \n                <Collapsable\n                    name=\"Direction\"\n                    isOpen={this.state.directionOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                        directionOptionOpen: !this.state.directionOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <div> \n                            <p style={{display: \"inline\"}}>Show Edge Direction: </p>\n                            <span style={{float:\"right\"}}>\n                            <label class=\".pt-large\">\n                            <input \n                                 type=\"checkbox\"\n                                 onChange={it => {\n                                     console.log(appState.graph.directedOrNot);\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                 }\n                                 }\n                               />\n                            </label>\n                            </span>\n                            </div>\n                        \n                    </div>\n                </Collapsable>\n{/* \n                <div>\n                     <section style = {{marginTop: \"15px\"}}>\n                         <p style={{display: \"inline\"}}>Show Edge Direction: </p>\n                         <div style={{display: \"inline\", float: \"right\"}}>\n                               <input \n                                 type=\"checkbox\"\n                                 onChange={it => {\n                                     console.log(appState.graph.directedOrNot);\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                 }\n                                 }\n                               />\n                         </div>\n                     </section>\n                 </div> */}\n\n                {/* Collapsable Option: Thickness */}\n                {/* <Collapsable\n                    name=\"Thickness\"\n                    isOpen={this.state.thicknessOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                            thicknessOptionOpen: !this.state.thicknessOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <section>\n                            <p>Select Edge Thickness: </p>\n                            <div style={{display: \"inline\", float: \"right\"}}>\n                               \n                            </div>\n                        </section>\n                    </div>\n                </Collapsable> */}\n            </div>\n        );\n    }\n}\n\nexport default EdgesPanel;","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass LabelsPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <span style={{display: \"inline-block\"}}>\n        <Button\n          style={{width:\"100px\"}}\n          id=\"hideAll\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideAllLabels()}\n        >\n          Hide All\n        </Button>\n        <Button\n          style={{width:\"100px\",display:\"none\"}}\n          id=\"showAll\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showAllLabels()}\n        >\n          Show All\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\"}}\n          id=\"hideSelected\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\n        >\n          Hide Selected\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\",display:\"none\"}}\n          id=\"showSelected\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showSelectedLabels()}\n        >\n          Show Selected\n        </Button>\n        </span>\n        <div style={{height: '20px'}} />\n        <h6>Label Size</h6>\n        <Slider\n          min={0.5}\n          max={3}\n          stepSize={0.1}\n          onChange={value => {\n            appState.graph.nodes.labelSize = value;\n          }}\n          value={appState.graph.nodes.labelSize}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label Length</h6>\n        <Slider\n          min={1}\n          max={32}\n          stepSize={0.1}\n          labelStepSize={5}\n          onChange={value => {\n            appState.graph.nodes.labelLength = value;\n          }}\n          value={appState.graph.nodes.labelLength}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label By</h6> \n        <Select\n          items={appState.graph.allPropertiesKeyList}\n          itemRenderer={CommonItemRenderer}\n          filterable={false}\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\n        >\n          <Button text={appState.graph.nodes.labelBy} />\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default LabelsPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\n@observer\nclass NodeDetail extends React.Component {\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    const formatLongFloat = (nodeAttributeValue) => {\n      const num = Number(nodeAttributeValue);\n      if (Number.isNaN(num) || num > 1 || num < 0) {\n        // Do not format just return original\n        return nodeAttributeValue;\n      }\n      // Format to no more than 3 significant digit.\n      return Number.parseFloat(num).toPrecision(3);\n    };\n\n    return (\n      <div\n        className={classnames(\n          // 'overlay-card',\n          \"right-overlay-card\",\n          \"transparent-frame\"\n        )}\n      >\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\n          <table\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\n            style={{\n              width: \"100%\",\n              padding: '0',\n            }}\n          >\n            \n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\n                <tr key={`${it}-${i}`}>\n                  <td style={{ padding: '5px 10px' }}>{it}</td>\n                  <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeDetail;","import React from \"react\";\n\nimport { format } from \"d3-format\";\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\nimport appState from \"../stores\";\nimport { observer } from \"mobx-react\";\n\nfunction Legends() {\n  return (\n    <div className=\"legends\" style={{visibility: appState.preferences.isLegendShowing ? 'visible' : 'hidden'}}>\n      <LegendSize\n        className=\"scale-legend\"\n        direction=\"row\"\n        itemDirection=\"column\"\n        itemMargin=\"0\"\n        shapeMargin=\"5px 0\"\n        labelFormat={format(\".4f\")}\n        scale={appState.graph.nodeSizeScale}\n        shape={props => {\n          const { size } = props;\n          return (\n            <svg width={size} height={size}>\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\n            </svg>\n          );\n        }}\n      />\n      <LegendLinear\n        direction=\"row\"\n        itemDirection=\"column\"\n        shape=\"circle\"\n        scale={appState.graph.nodeColorScale}\n        labelFormat={format(\".4f\")}\n      />\n    </div>\n  );\n}\n\nexport default observer(Legends);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges && `Total Nodes: ${appState.graph.metadata.fullNodes}, Total Edges: ${appState.graph.metadata.fullEdges},`} Hidden Nodes: {appState.graph.numHiddenNodes}</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\n\n@observer\nclass SelectionActionPanel extends React.Component {\n  render() {\n      // Only relevant when there's exact 1 node selected.\n      // To display number of hidden nodes if exists\n      let numHiddenNeighbor = 0;\n      if (appState.graph.selectedNodes.length === 1) {\n        if (appState.graph.lastSelectedSingleNode) {\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\n        }\n      }\n\n      return (\n        <div\n            className=\"argo-selection-action-panel\"\n            style={{\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n            }}\n        >\n            <Tooltip\n                content=\"Pin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"pin\"\n                    text=\"Pin\"\n                    intent={Intent.PRIMARY}\n                    onClick={() => {\n                    appState.graph.frame.pinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Unpin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"unpin\"\n                    text=\"Unpin\"\n                    intent={Intent.WARNING}\n                    onClick={() => {\n                    appState.graph.frame.unpinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Hide Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"delete\"\n                    text=\"Hide\"\n                    intent={Intent.DANGER}\n                    onClick={() => {\n                    appState.graph.hideNodes(\n                        appState.graph.frame.getSelectedIds()\n                    );\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            {// This menu only shows when there's exactly 1 node selected\n              appState.graph.selectedNodes.length === 1 && (\n                <div style={{ display: \"inline\" }}>\n                  <Tooltip\n                    content=\"Open Neighbor Dialog\"\n                    position={Position.BOTTOM}\n                  >\n                    <Button\n                      className={classnames([\n                        Classes.BUTTON,\n                        Classes.MINIMAL\n                      ])}\n                      iconName=\"graph\"\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\n                      intent={Intent.PRIMARY}\n                      onClick={() => {\n                        appState.graph.frame.pauseLayout();\n                        appState.preferences.neighborDialogOpen = true;\n                        this.forceUpdate();\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n            )}\n        </div>\n      );\n  }\n}\n\nexport default SelectionActionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient } from \"../../services/AlgorithmUtils\";\n\n\n@observer\nclass ZoomPanel extends React.Component {\n  render() {\n    return (\n      <div className={classnames(\n        \"zoom-buttons\"\n      )}>\n          <Button\n            style={{marginBottom: \"5px\"}}\n            className={classnames([Classes.BUTTON])} \n            iconName=\"plus\"\n            onClick={() => {\n              let controls = appState.controls\n              controls.dollyIn(1.5)\n            }}\n            ></Button>\n            \n            \n            <br></br>\n            \n            \n            <Button \n            style={{marginBottom: \"5px\"}}\n            className={classnames([Classes.BUTTON])} \n            iconName=\"minus\"\n            onClick={() => {\n              let controls = appState.controls\n              controls.dollyIn(0.5)\n            }}></Button>\n\n\n            <br></br>\n            \n            \n            <Button\n            style={{marginBottom: \"5px\"}} \n            className={classnames([Classes.BUTTON])} \n            iconName=\"home\"\n            onClick={() => {\n              let controls = appState.controls\n              controls.reset()\n\n              //reset to center of graph code:\n              // let xVal = 0\n              // let yVal = 0\n              // let pos = appState.graph.frame.getPositions();\n              // for(let n in pos) {\n              //   xVal = pos[n][0]\n              //   yVal = pos[n][1]\n              // }\n              // let len = Object.keys(pos).length\n              // appState.panToMousePosition(xVal,yVal);\n            }}></Button>\n      </div>\n    );\n  }\n}\n\nexport default ZoomPanel;","import React from \"react\";\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../stores\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { addNode } from \"../ipc/client\";\nimport NodesPanel from \"./panels/NodesPanel\";\nimport EdgesPanel from \"./panels/EdgesPanel\";\nimport LabelsPanel from \"./panels/LabelsPanel\";\nimport NodeDetail from \"./panels/NodeDetailPanel\";\nimport Legends from \"./Legends\";\nimport StatusBar from './StatusBar';\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\nimport ZoomPanel from \"./panels/ZoomPanel\";\n\n// TODO: migrate to simple select\n\n@observer\nclass RenderOptionsCard extends React.Component {\n  render() {\n    return (\n      <div>\n        <h4>Graph Options</h4>\n        <Tabs2 animate id=\"graph-options\">\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\n          <Tabs2.Expander />\n        </Tabs2>\n      </div>\n    );\n  }\n}\n\n//\n\n@observer\nclass FloatingCards extends React.Component {\n  optionsVisible = {\n    left: '0em'\n  }\n  optionsInvisible = {\n    left: '-22em'\n  }\n  sideButtonVis = {\n    marginLeft: '50px'\n  }\n  sideButtonInv = {\n    marginLeft: '-15px'\n  }\n  toggleOptions = () => {\n    appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\n  };\n  render() {\n    return (\n      <div className=\"floating-overlay\">\n        <div className=\"left-cards\">\n          {appState.search.panelOpen && (\n            <div\n              className={classnames(\n                Classes.CARD,\n                Classes.ELEVATION_2,\n                \"overlay-card\",\n                \"left-overlay-card\"\n              )}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"left\",\n                  alignItems: \"left\"\n                }}\n              >\n                <h4 style={{ width: 140 }}>\n                  {appState.search.numCandidates} results\n                </h4>\n                <div style={{ width: 20 }} />\n                <h4>Order</h4>\n                <div style={{ width: 5 }} />\n                <SimpleSelect\n                  style={{ \"margin-bottom\": 10 }}\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\n                  onSelect={it => (appState.graph.searchOrder = it)}\n                  value={appState.graph.searchOrder}\n                />\n              </div>\n              <table\n                className={classnames(\n                  Classes.TABLE,\n                  Classes.TABLE_STRIPED,\n                  Classes.INTERACTIVE\n                )}\n                style={{\n                  width: \"100%\",\n                  userSelect: \"none\"\n                }}\n              >\n                <tbody>\n                  {appState.search.candidates.map((node, i) => (\n                    <tr\n                      key={i}\n                      onMouseOver={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          true\n                        )\n                      }\n                      onMouseDown={() => addNode(node.node_id)}\n                      onMouseLeave={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          false\n                        )\n                      }\n                    >\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <center>\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum > 0) {\n                      appState.search.pageNum -= 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Prev&nbsp;\n                </a>\n                &nbsp;\n                {appState.search.pageNum !== 0 ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = 0;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    1&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}&nbsp;\n                    </a>\n                  )}\n                ...<b>&nbsp;</b>\n                {appState.search.pages.map(i => {\n                  if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    i == appState.search.pageNum\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        style={{\n                          color: \"#111111\",\n                          pointerEvents: \"none\",\n                          cursor: \"default\"\n                        }}\n                      >\n                        {appState.search.pageNum + 1}&nbsp;\n                      </a>\n                    );\n                  } else if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    ((i > appState.search.pageNum - 4 &&\n                      i < appState.search.pageNum + 4) ||\n                      (appState.search.pageNum < 4 && i < 8) ||\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\n                        i > appState.search.maxPage - 8))\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        onMouseDown={() => {\n                          appState.search.pageNum = i;\n                          appState.search.candidates = appState.search.allCands.slice(\n                            appState.search.pageNum * appState.search.nPerPage,\n                            (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                          );\n                        }}\n                      >\n                        {i + 1}&nbsp;\n                      </a>\n                    );\n                  }\n                })}\n                ...&nbsp;\n                {appState.search.pageNum !== appState.search.maxPage ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = appState.search.maxPage;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    {appState.search.maxPage + 1}&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}\n                    </a>\n                  )}\n                &nbsp;\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum < appState.search.maxPage) {\n                      appState.search.pageNum += 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Next\n                </a>\n                <br />\n                <br />\n                <h5>Page {appState.search.pageNum + 1}</h5>\n              </center>\n            </div>\n          )}\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_2,\n              \"overlay-card\",\n              \"left-overlay-card\",\n              \"transparent-frame\",\n              \"left-cards\"\n            )}\n            style={appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\n          >\n            <button className=\"openbtn2\" onClick={this.toggleOptions}> &#8249;\n            </button>\n            <br />\n            <RenderOptionsCard />\n          </div>\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\n            \"transparent-frame\")} style={{ width: \"1em\", paddingTop: \"1em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\" }}>\n            <button className=\"openbtn\" onClick={this.toggleOptions} style={appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\n              &#9776;\n              </button>\n          </div>\n        </div>\n        {appState.graph.selectedNodes.length === 1 && (\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\n        )}\n\n        {appState.graph.selectedNodes.length !== 1 && appState.graph.currentlyHovered && (\n          <NodeDetail node={appState.graph.currentlyHovered.data.ref} />\n        )}\n\n       \n\n        <Legends />\n        <StatusBar />\n        {// This menu only shows when there are nodes selected\n          appState.graph.selectedNodes.length > 0 && !appState.preferences.isNavbarInMinimalMode && <SelectionActionPanel />\n        }\n\n        <ZoomPanel/>\n      </div>\n    );\n  }\n}\n\n\nexport default FloatingCards;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  FocusStyleManager,\n  NonIdealState\n} from \"@blueprintjs/core\";\nimport Dialogs from \"./components/Dialogs\";\nimport Navbar from \"./components/Navbar\";\nimport WorkspaceView from \"./components/WorkspaceView\";\nimport appState from \"./stores/index\";\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\nimport FloatingCards from \"./components/FloatingCards\";\nimport registerIPC from \"./ipc/client\";\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\n\nimport keydown, { Keys } from \"react-keydown\";\n\nregisterIPC();\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfetchWorkspaceProjects();\n\nappState.preferences.loadUserConfig();\n\nconst { DELETE, BACKSPACE, P, U } = Keys;\n\n// Respond to window resize, also triggered after frame is loaded.\nfunction respondToResize() {\n  if (!appState.graph.frame) {\n    window.setTimeout(respondToResize, 1000);\n    return;\n  }\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\n    appState.preferences.turnOnMinimalMode();\n  }\n}\n\nrespondToResize();\n\nwindow.addEventListener('resize', respondToResize);\n\n@keydown\n@observer\nclass App extends React.Component {\n  componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\n          this.forceUpdate();\n        }\n      } else if (keydown.event.which === P) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.pinSelectedNodes();\n        }\n      } else if (keydown.event.which === U) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.unpinSelectedNodes();\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div\n        className={classnames({\n          \"app-wrapper\": true,\n          [Classes.DARK]: appState.preferences.darkMode\n        })}>\n        <Navbar />\n        <main className=\"main\">\n          {appState.graph.hasGraph ? (\n            <ThreeJSVis />\n          ) : (\n              <WorkspaceView />\n            )}\n        </main>\n        {appState.graph.hasGraph && <FloatingCards />}\n        <Dialogs />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","const jsnx = require('jsnetworkx');\nconst jsgraphs = require('js-graph-algorithms');\n\n/**\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJsnx(snapshot) {\n    const jsnxGraph = new jsnx.Graph();\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\n    return jsnxGraph;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the ngraph library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToNGraph(snapshot) {\n    return null;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraph(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraphWeightedDi(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot to the GEXF format.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToGexf(snapshot) {\n    return null;\n}\n\n/**\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function averageClusteringCoefficient(snapshot) {\n    const jsnxGraph = convertToJsnx(snapshot);\n    const result = jsnx.averageClustering(jsnxGraph);\n    console.log('Computing Clustering Coefficient');\n    return result;\n}\n\n/**\n * Calculate the number of connected components in a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function connectedComponents(snapshot) {\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\n    return cc.componentCount();\n}\n\n/**\n * Calculate the density of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function graphDensity(snapshot) {\n    const nodeCount = snapshot.rawGraph.nodes.length;\n    const edgeCount = snapshot.rawGraph.edges.length / 2;\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\n}\n\n/**\n * Calculate the average degree of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function averageDegree(snapshot) {\n    let sum = 0;\n    snapshot.rawGraph.nodes.forEach(e => {\n            sum += e.degree;\n        }\n    )\n    return sum / snapshot.rawGraph.nodes.length;\n}\n\n/**\n * Calculate the diameter of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function exactGraphDiameter(snapshot) {\n    let temp = convertToJSGraphWeightedDi(snapshot);\n    let jsg = temp[0];\n    let idDict = temp[1]\n    let dia = -1;\n    snapshot.rawGraph.nodes.forEach(e => {\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\n        snapshot.rawGraph.nodes.forEach(f => {\n            if(dijkstra.hasPathTo(idDict[f.id])){\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\n                dia = Math.max(dia, pathLength);\n            }\n        })\n    });\n    return dia;\n}\n ","import * as scale from \"d3-scale\";\n\n// Argo-lite Iframe widget mode\n// Build the app separately and host it on a different URL\n// If set to true, the app will begin in widget mode\n// hiding certain panels, logo, and minimap\n// and show a minimalist Navbar.\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\n\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-graph-lite\";\nexport const LOGO_URL = \"https://github.com/poloclub/argo-graph-lite\";\nexport const GITHUB_URL = \"https://github.com/poloclub/argo-graph-lite\";\n// Argo-lite Graph Sharing backend Strapi Server:\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\n  [\"Les Miserables\", \"31d8fb5a-b540-4db6-a2df-9c0158e152f0\"],\n  [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"]\n];\n\n// When resizing window or running on mobile,\n// used to determine whether screen\n// is considered small.\nexport const MOBILE_WIDTH_CUTOFF = 800;\nexport const MOBILE_HEIGHT_CUTOFF = 480;\n\nexport const SCALE_LINEAR = \"Linear Scale\";\nexport const SCALE_LOG = \"Log Scale\";\n\nexport const scales = {\n  [SCALE_LINEAR]: scale.scaleLinear,\n  [SCALE_LOG]: scale.scaleLog\n};\n\nexport const LOAD_USER_CONFIG = \"load-user-config\";\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\nexport const SAVE_USER_CONFIG = \"save-user-config\";\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\n\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\n\nexport const DELETE_FILE = \"delete-file\";\nexport const RENAME_FILE = \"rename-file\";\n\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\n\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\nexport const SAVE_TOAST_KEY = \"save-const-key\";\n\nexport const MENU_LOAD = \"menu-load\";\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\n  \"menu-save-graph-state-to-project\";\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\n\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\n\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\n\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\n\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\nexport const ONLY_EDGE_FILE = \"only edges file\";\n\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\nexport const ONLY_GRAPH_FILE = \"only graph file\";\nexport const IMPORT_GRAPH = \"import-graph\";\nexport const IMPORTED_GRAPH = \"imported-graph\";\nexport const OPEN_GRAPH = \"open-graph\";\nexport const OPENED_GRAPH = \"opened-graph\";\n\nexport const SEARCH_REQUEST = \"search-request\";\nexport const SEARCH_RESPONSE = \"search-response\";\n\nexport const ADD_NODES = \"add-nodes\";\nexport const ADD_SELECT_NODE = \"add-select-node\";\nexport const ADD_NODE = \"add-node\";\nexport const GET_NEIGHBORS = \"get-neighbors\";\n","import { runInAction, toJS } from 'mobx';\nimport { Intent } from '@blueprintjs/core';\nimport { demapify } from 'es6-mapify';\n\nimport appState from '../stores/index';\nimport {\n  ADD_NODE,\n  ADD_NODES,\n  ADD_SELECT_NODE,\n  CHOOSE_EDGE_FILE,\n  CHOOSE_GRAPH_FILE,\n  CHOOSE_NODE_FILE,\n  CHOOSE_STATE_FILE,\n  CHOSEN_EDGE_FILE,\n  CHOSEN_GRAPH_FILE,\n  CHOSEN_NODE_FILE,\n  CHOSEN_STATE_FILE,\n  GET_NEIGHBORS,\n  IMPORT_GRAPH,\n  IMPORTED_GRAPH,\n  LOAD_GRAPH_SQLITE,\n  LOADED_GRAPH_SQLITE,\n  LOADED_GRAPH_STATE,\n  MENU_IMPORT_CSV,\n  MENU_LOAD,\n  MENU_NEW_PROJECT,\n  MENU_SAVE_GRAPH_SQLITE,\n  MENU_SAVE_GRAPH_STATE,\n  CREATE_NEW_PROJECT,\n  CREATED_NEW_PROJECT,\n  OPEN_GRAPH,\n  OPENED_GRAPH,\n  FETCH_WORKSPACE_PROJECTS,\n  FETCHED_WORKSPACE_PROJECTS,\n  SAVE_GRAPH_SQLITE,\n  SAVE_GRAPH_STATE,\n  SAVED_GRAPH_JSON,\n  SAVED_GRAPH_STATE,\n  SEARCH_REQUEST,\n  SEARCH_RESPONSE,\n  SHOW_ITEM_IN_FOLDER,\n  SAVED_GRAPH_STATE_TO_PROJECT,\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\n  SAVE_GRAPH_STATE_TO_PROJECT,\n  DELETE_FILE,\n  RENAME_FILE,\n  SHOW_WORKSPACE_FOLDER,\n  LOAD_USER_CONFIG,\n  LOADED_USER_CONFIG,\n  SAVED_USER_CONFIG,\n  SAVE_USER_CONFIG,\n  CHANGE_WORKSPACE_FOLDER,\n  CHANGED_WORKSPACE_FOLDER,\n} from '../constants/index';\nimport { toaster } from '../notifications/client';\n\nimport createGraph from 'ngraph.graph';\nimport pageRank from 'ngraph.pagerank';\nimport parse from \"csv-parse/lib/sync\";\n// import worker from './worker';\n\n// TODO: Register web worker used by Argo-lite.\n\n// Argo-lite replacement for electron ipc.\nconst ipcRenderer = {\n  send: (eventString) => {\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\n  }\n}\n\nexport default function registerIPC() {\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\n  //   // Overwrite PreferenceStore values according to user config values,\n  //   // if present.\n  //   if (loadedObject.darkMode) {\n  //     appState.preferences.darkMode = true;\n  //   }\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\n  //     appState.preferences.workspacePath = loadedObject.workspace;\n  //   }\n  // });\n\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\n  //   toaster.show({\n  //     message: \"User configuration saved\",\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\n  //   runInAction('load saved graph', () => {\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //   });\n  // });\n\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\n  //   runInAction('load saved graph and state', () => {\n  //     console.log(loadedObject);\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //     if (loadedObject.state) {\n  //       appState.graph.loadImmediateStates(loadedObject.state);\n  //     }\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\n  //   appState.graph.loadImmediateStates(loadedObject);\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\n  //   toaster.show({\n  //     message: `Saved to snapshot ${snapshotName}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\n  //   appState.import.importConfig.nodeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\n  //   appState.import.importConfig.edgeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\n  //   appState.import.graphFile = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\n  //   appState.import.stateFile = path;\n  // });\n\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\n  //   appState.import.loading = false;\n  //   appState.import.dialogOpen = false;\n  //   appState.project.isFetching = true;\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n  // });\n\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\n  //   appState.graph.frame.dragLastNode();\n  // });\n\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\n  //   var cands = JSON.parse(candidates);\n  //   var ckeys = cands.map(x => x.node_id);\n  //   appState.search.allCands = Object.values(cands);\n  //   appState.search.pageNum = 0;\n  //   appState.search.nPerPage = 10;\n  //   appState.search.numCandidates = appState.search.allCands.length;\n  //   appState.search.maxPage = parseInt(\n  //     appState.search.allCands.length / appState.search.nPerPage,\n  //   );\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\n  //   appState.search.panelOpen = true;\n  //   if (appState.graph.frame) {\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\n  //   }\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\n  //   appState.graph.loadImmediateStates(stateStr);\n  // });\n\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\n  //   appState.project.isFetching = false;\n  //   appState.project.projects = projects;\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\n  //   if (appState.project.currentProject !== null) {\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\n  //     // This fetch needs to update the dialog also\n  //     const temp = appState.project.projects.filter((project) => {\n  //       return project.projectPath === appState.project.currentProject.projectPath;\n  //     });\n  //     if (temp.length === 1) {\n  //       appState.project.currentProject = temp[0];\n  //     } else {\n  //       appState.project.currentProject = null;\n  //     }\n      \n  //   }\n  // });\n\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\n  //   appState.preferences.saveUserConfig();\n  // });\n\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\n  //   appState.project.isNewProjectDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_LOAD, () => {\n  //   appState.preferences.openDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\n  //   appState.import.dialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\n  //   // Original implementation for opening a traditional system-level save file dialog\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\n    \n  //   // New implementation opening a dialog that saves snapshot to project\n  //   appState.project.isSaveSnapshotDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\n  //   requestSaveSnapshot();\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\n}\n\nexport function requestLoadSQLite() {\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\n}\n\nexport function addNode(node_id) {\n  ipcRenderer.send(ADD_NODE, node_id);\n}\n\nexport function requestNeighbors(\n  node_id,\n  attr = 'degree',\n  num = '10',\n  order = 'desc',\n) {\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\n}\n\nfunction requestSaveSQLite() {\n  ipcRenderer.send(\n    SAVE_GRAPH_SQLITE,\n    JSON.stringify({\n      graph: toJS(appState.graph.rawGraph),\n      metadata: toJS(appState.graph.metadata),\n      nodes: toJS(appState.graph.nodes),\n      overrides: toJS(demapify(appState.graph.overrides)),\n      nodePositions: appState.graph.frame.getPositions(),\n    }),\n  );\n}\n\nexport function requestChooseNodeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\n}\n\nexport function requestChooseEdgeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\n}\n\nexport function requestChooseGraphFile() {\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\n}\n\nexport function requestChooseStateFile() {\n  ipcRenderer.send(CHOOSE_STATE_FILE);\n}\n\nexport function requestOpen() {\n  ipcRenderer.send(\n    OPEN_GRAPH,\n    appState.import.graphFile,\n    appState.import.stateFile,\n  );\n}\n\n// Request to delete a file specified at filePath\nexport function requestDelete(filePath) {\n  ipcRenderer.send(DELETE_FILE, filePath);\n}\n\n/**\n * Request to rename a file specified at filePath\n * @param filePath where the file to be renamed is located\n * @param newName new file name with extension\n */\nexport function requestRename(filePath, newName) {\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\n}\n\nexport function requestSaveSnapshot(snapshotName) {\n  if (!snapshotName) {\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\n  } else {\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\n  }\n}\n\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n  const importConfig = {\n    hasNodeFile,\n    nodes: {\n      path: appState.import.importConfig.nodeFile.path,\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\n    },\n    edges: {\n      path: appState.import.importConfig.edgeFile.path,\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\n    },\n    delimiter,\n    newProjectName\n  };\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\n\n  // TODO: Potentially separate this out to web worker.\n  importGraphFromCSV(importConfig).then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nexport function requestImportGraphFromGexf() {\n  importGraphFromGexf().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.gexfDialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nasync function readCSV(fileObject, hasHeader, delimiter) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      const content = reader.result;\n      try {\n        if (hasHeader) {\n          resolve(parse(content, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: hasHeader,\n            delimiter\n          }));\n        }\n        resolve(parse(content, {\n          comment: \"#\",\n          trim: true,\n          auto_parse: true,\n          skip_empty_lines: true,\n          columns: undefined,\n          delimiter\n        }));\n      } catch(err) {\n        let msg =  err.message\n        let mismatch = msg.indexOf(\"Invalid Record Length:\") == 0\n        if (mismatch) {\n          msg = msg.replace(\"is\", \"set to\")\n          msg = msg.replace(\"got\", \"but detected\")\n        } \n        toaster.show({\n          message: \"Error: \" + msg,\n          intent: Intent.DANGER,\n          timeout: -1\n      });\n        appState.import.loading = false;\n      }\n    }\n  });\n}\n\nasync function parseGEXF(content) {\n  const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(content,\"text/xml\");\n      const xmlEdges = xmlDoc.getElementsByTagName('edge');\n      const xmlNodes = xmlDoc.getElementsByTagName('node');\n      const xmlAttri = xmlDoc.getElementsByTagName('attributes')\n      \n      let nodeAttri = [];\n      let edgeAttri = [];\n      const edgesArr = [];\n      const nodesArr = [];\n      const nodeAttriOrdered = {};\n      \n      for (let i = 0, l = xmlAttri.length; i < l; i++) {\n        const curr = xmlAttri[i];\n        if (curr.getAttribute('class') === 'node') {\n          nodeAttri = curr.getElementsByTagName('attribute');\n        }\n        else if (curr.getAttribute('class') === 'edge') {\n          edgeAttri = curr.getElementsByTagName('attribute');\n        }\n      }\n      \n      for (let i = 0, l = nodeAttri.length; i < l; i++) {\n        const curr = nodeAttri[i];\n        nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\n      }\n\n      for (let i = 0, l = xmlEdges.length; i < l; i++) {\n        const currEdge = xmlEdges[i];\n        const s = currEdge.getAttribute('source').toString();\n        const t = currEdge.getAttribute('target').toString();\n        edgesArr.push({\n          source_id: s,\n          target_id: t,\n        });\n      }\n      for (let i = 0, l = xmlNodes.length; i < l; i++) {\n        const currNode = xmlNodes[i];\n        const id = currNode.getAttribute('id').toString();\n        const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\n        const nodeAttvalue = [];\n        if (nodeAttvalues.length != 0) {\n          nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\n        }\n        let node = { id: id, degree: 0, pagerank: 0, node_id: id};\n        for (let j = 0; j < nodeAttvalue.length; j++){\n          const value = nodeAttvalue[j].attributes[\"value\"].value;\n          const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\n          const attributeId = attributeIdElementAttribute.value;\n          node[nodeAttriOrdered[attributeId]] = value;\n        }\n        for (let j = 0; j < currNode.attributes.length; j++) {\n          const currAttri = currNode.attributes[j];\n            node[currAttri.name] = currAttri.value;\n        }\n        node[\"id\"] = id;\n        node[\"node_id\"] = id;\n        nodesArr.push(node);\n      }\n      return [nodesArr, edgesArr];\n}\n\nasync function readGEXF(fileObject) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  \n  return new Promise((resolve, reject) => {\n      reader.onload = () => {\n      const content = reader.result;\n      resolve(parseGEXF(content));\n    }\n  });\n}\n\nasync function importGraphFromCSV(config) {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  const graph = createGraph();\n  const degreeDict = {};\n  if (config.hasNodeFile) {\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\n    nodesArr =\n      nodesArr.map(\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\n  }\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\n  if (config.edges.createMissing) {\n    edges.forEach((it) => {\n      const from = it[fromId].toString();\n      const to = it[toId].toString();\n      if (!graph.hasNode(from)) {\n        graph.addNode(from, { id: from, degree: 0 });\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\n        degreeDict[from] = 0;\n      }\n      if (!graph.hasNode(to)) {\n        graph.addNode(to, { id: to, degree: 0 });\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\n        degreeDict[to] = 0;\n      }\n    });\n  }\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[fromId].toString();\n    const to = it[toId].toString();\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport async function importGraphFromGexf() {\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\n  let nodesArr = gexfParsed[0];\n  const edges = gexfParsed[1];\n  const graph = createGraph();\n  const degreeDict = {};\n\n  nodesArr.forEach((it) => {\n    const currNode = it[\"id\"].toString();\n    if (!graph.hasNode(currNode)) {\n      graph.addNode(currNode, it);\n      degreeDict[currNode] = 0;\n    }\n  });\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[\"source_id\"].toString();\n    const to = it[\"target_id\"].toString();\n\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport function runSearch(searchStr) {\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\n}\n\nexport function fetchWorkspaceProjects() {\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\n}\n\nexport function requestCreateNewProject(projectMetadata) {\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\n}\n\nexport function requestOpenWorkspaceFolder() {\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\n}\n\nexport function requestLoadUserConfig() {\n  ipcRenderer.send(LOAD_USER_CONFIG);\n}\n\nexport function requestSaveUserConfig(userConfig) {\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\n}\n\nexport function requestChangeWorkspace() {\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\n}","var $ = require(\"jquery\");\nfunction Edge(source, target) {\n  this.source = source;\n  this.target = target;\n  this.renderData = {};\n}\n\nfunction Node(id, size = 0.5) {\n  this.id = id;\n  this.index = id;\n  this.in = [];\n  this.out = [];\n  this.size = size;\n  this.renderData = {};\n  this.domainData = {};\n  this.x = 1;\n  this.y = 1;\n  this.vx = 1;\n  this.vy = 1;\n\n  /**\n   * Tells if a node is connected to a node of a certain id\n   */\n  this.connectedTo = function(id) {\n    outNodeIds = this.out.map(function(outNode) {\n      return outNode.id;\n    });\n    return $.inArray(id, outNodeIds) >= 0;\n  };\n}\n\nNode.prototype.connectNode = function(node) {\n  if (!this.connectedTo(node.id)) {\n    this.out.push(node);\n    return true;\n  }\n  return false;\n};\n\nexports.Edge = Edge;\nexports.Node = Node;\n","var THREE = require(\"three\");\n\nTHREE.MeshLine = function() {\n  this.positions = [];\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n  this.counters = [];\n  this.geometry = new THREE.BufferGeometry();\n\n  this.widthCallback = null;\n};\n\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\n  this.widthCallback = c;\n\n  this.positions = [];\n  this.counters = [];\n\n  if (g instanceof THREE.Geometry) {\n    for (var j = 0; j < g.vertices.length; j++) {\n      var v = g.vertices[j];\n      var c = j / g.vertices.length;\n      this.positions.push(v.x, v.y, v.z);\n      this.positions.push(v.x, v.y, v.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  if (g instanceof THREE.BufferGeometry) {\n    // read attribute positions ?\n  }\n\n  if (g instanceof Float32Array || g instanceof Array) {\n    for (var j = 0; j < g.length; j += 3) {\n      var c = j / g.length;\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  this.process();\n};\n\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\n  var aa = a * 6;\n  var ab = b * 6;\n  return (\n    this.positions[aa] === this.positions[ab] &&\n    this.positions[aa + 1] === this.positions[ab + 1] &&\n    this.positions[aa + 2] === this.positions[ab + 2]\n  );\n};\n\nTHREE.MeshLine.prototype.copyV3 = function(a) {\n  var aa = a * 6;\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n};\n\nTHREE.MeshLine.prototype.process = function() {\n  var l = this.positions.length / 6;\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n\n  for (var j = 0; j < l; j++) {\n    this.side.push(1);\n    this.side.push(-1);\n  }\n\n  var w;\n  for (var j = 0; j < l; j++) {\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n    else w = 1;\n    this.width.push(w);\n    this.width.push(w);\n  }\n\n  for (var j = 0; j < l; j++) {\n    this.uvs.push(j / (l - 1), 0);\n    this.uvs.push(j / (l - 1), 1);\n  }\n\n  var v;\n\n  if (this.compareV3(0, l - 1)) {\n    v = this.copyV3(l - 2);\n  } else {\n    v = this.copyV3(0);\n  }\n  this.previous.push(v[0], v[1], v[2]);\n  this.previous.push(v[0], v[1], v[2]);\n  for (var j = 0; j < l - 1; j++) {\n    v = this.copyV3(j);\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n  }\n\n  for (var j = 1; j < l; j++) {\n    v = this.copyV3(j);\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n  }\n\n  if (this.compareV3(l - 1, 0)) {\n    v = this.copyV3(1);\n  } else {\n    v = this.copyV3(l - 1);\n  }\n  this.next.push(v[0], v[1], v[2]);\n  this.next.push(v[0], v[1], v[2]);\n\n  for (var j = 0; j < l - 1; j++) {\n    var n = j * 2;\n    this.indices_array.push(n, n + 1, n + 2);\n    this.indices_array.push(n + 2, n + 1, n + 3);\n  }\n\n  if (!this.attributes) {\n    this.attributes = {\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n    };\n  } else {\n    this.attributes.position.copyArray(new Float32Array(this.positions));\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.copyArray(new Float32Array(this.next));\n    this.attributes.next.needsUpdate = true;\n    this.attributes.side.copyArray(new Float32Array(this.side));\n    this.attributes.side.needsUpdate = true;\n    this.attributes.width.copyArray(new Float32Array(this.width));\n    this.attributes.width.needsUpdate = true;\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\n    this.attributes.uv.needsUpdate = true;\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\n    this.attributes.index.needsUpdate = true;\n  }\n\n  this.geometry.addAttribute(\"position\", this.attributes.position);\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\n  this.geometry.addAttribute(\"next\", this.attributes.next);\n  this.geometry.addAttribute(\"side\", this.attributes.side);\n  this.geometry.addAttribute(\"width\", this.attributes.width);\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\n\n  this.geometry.setIndex(this.attributes.index);\n};\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nTHREE.MeshLine.prototype.advance = function(position) {\n  var positions = this.attributes.position.array;\n  var previous = this.attributes.previous.array;\n  var next = this.attributes.next.array;\n  var l = positions.length;\n\n  // PREVIOUS\n  memcpy(positions, 0, previous, 0, l);\n\n  // POSITIONS\n  memcpy(positions, 6, positions, 0, l - 6);\n\n  positions[l - 6] = position.x;\n  positions[l - 5] = position.y;\n  positions[l - 4] = position.z;\n  positions[l - 3] = position.x;\n  positions[l - 2] = position.y;\n  positions[l - 1] = position.z;\n\n  // NEXT\n  memcpy(positions, 6, next, 0, l - 6);\n\n  next[l - 6] = position.x;\n  next[l - 5] = position.y;\n  next[l - 4] = position.z;\n  next[l - 3] = position.x;\n  next[l - 2] = position.y;\n  next[l - 1] = position.z;\n\n  this.attributes.position.needsUpdate = true;\n  this.attributes.previous.needsUpdate = true;\n  this.attributes.next.needsUpdate = true;\n};\n\nTHREE.MeshLineMaterial = function(parameters) {\n  var vertexShaderSource = [\n    \"precision highp float;\",\n    \"\",\n    \"attribute vec3 position;\",\n    \"attribute vec3 previous;\",\n    \"attribute vec3 next;\",\n    \"attribute float side;\",\n    \"attribute float width;\",\n    \"attribute vec2 uv;\",\n    \"attribute float counters;\",\n    \"\",\n    \"uniform mat4 projectionMatrix;\",\n    \"uniform mat4 modelViewMatrix;\",\n    \"uniform vec2 resolution;\",\n    \"uniform float lineWidth;\",\n    \"uniform vec3 color;\",\n    \"uniform float opacity;\",\n    \"uniform float near;\",\n    \"uniform float far;\",\n    \"uniform float sizeAttenuation;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"vec2 fix( vec4 i, float aspect ) {\",\n    \"\",\n    \"    vec2 res = i.xy / i.w;\",\n    \"    res.x *= aspect;\",\n    \"\t vCounters = counters;\",\n    \"    return res;\",\n    \"\",\n    \"}\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    float aspect = resolution.x / resolution.y;\",\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\n    \"\",\n    \"    vColor = vec4( color, opacity );\",\n    \"    vUV = uv;\",\n    \"\",\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\n    \"\",\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\n    \"    vec2 prevP = fix( prevPos, aspect );\",\n    \"    vec2 nextP = fix( nextPos, aspect );\",\n    \"\",\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\n    \"\",\n    \"    if( sizeAttenuation == 1. ) {\",\n    \"        w = 1.8 * lineWidth * width;\",\n    \"    }\",\n    \"\",\n    \"    vec2 dir;\",\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\n    \"    else {\",\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\n    \"        dir = normalize( dir1 + dir2 );\",\n    \"\",\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\n    \"\",\n    \"    }\",\n    \"\",\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\n    \"    normal.x /= aspect;\",\n    \"    normal *= .5 * w;\",\n    \"\",\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\n    \"    finalPosition.xy += offset.xy;\",\n    \"\",\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\n    \"    gl_Position = finalPosition;\",\n    \"\",\n    \"}\"\n  ];\n\n  var fragmentShaderSource = [\n    \"#extension GL_OES_standard_derivatives : enable\",\n    \"precision mediump float;\",\n    \"\",\n    \"uniform sampler2D map;\",\n    \"uniform float useMap;\",\n    \"uniform float useDash;\",\n    \"uniform vec2 dashArray;\",\n    \"uniform float visibility;\",\n    \"uniform float alphaTest;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    vec4 c = vColor;\",\n    \"\t if( c.a < alphaTest ) discard;\",\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\n    \"\t if( useDash == 1. ){\",\n    \"\t \t \",\n    \"\t }\",\n    \"    gl_FragColor = c;\",\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\n    \"}\"\n  ];\n\n  function check(v, d) {\n    if (v === undefined) return d;\n    return v;\n  }\n\n  THREE.Material.call(this);\n\n  parameters = parameters || {};\n\n  this.lineWidth = check(parameters.lineWidth, 1);\n  this.map = check(parameters.map, null);\n  this.useMap = check(parameters.useMap, 0);\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\n  this.opacity = check(parameters.opacity, 1);\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n  this.near = check(parameters.near, 1);\n  this.far = check(parameters.far, 1);\n  this.dashArray = check(parameters.dashArray, []);\n  this.useDash = this.dashArray !== [] ? 1 : 0;\n  this.visibility = check(parameters.visibility, 1);\n  this.alphaTest = check(parameters.alphaTest, 0);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      lineWidth: { type: \"f\", value: this.lineWidth },\n      map: { type: \"t\", value: this.map },\n      useMap: { type: \"f\", value: this.useMap },\n      color: { type: \"c\", value: this.color },\n      opacity: { type: \"f\", value: this.opacity },\n      resolution: { type: \"v2\", value: this.resolution },\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\n      near: { type: \"f\", value: this.near },\n      far: { type: \"f\", value: this.far },\n      dashArray: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\n      },\n      useDash: { type: \"f\", value: this.useDash },\n      visibility: { type: \"f\", value: this.visibility },\n      alphaTest: { type: \"f\", value: this.alphaTest }\n    },\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\n  });\n\n  delete parameters.lineWidth;\n  delete parameters.map;\n  delete parameters.useMap;\n  delete parameters.color;\n  delete parameters.opacity;\n  delete parameters.resolution;\n  delete parameters.sizeAttenuation;\n  delete parameters.near;\n  delete parameters.far;\n  delete parameters.dashArray;\n  delete parameters.visibility;\n  delete parameters.alphaTest;\n\n  material.type = \"MeshLineMaterial\";\n\n  material.setValues(parameters);\n\n  return material;\n};\n\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\n\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\n  THREE.Material.prototype.copy.call(this, source);\n\n  this.lineWidth = source.lineWidth;\n  this.map = source.map;\n  this.useMap = source.useMap;\n  this.color.copy(source.color);\n  this.opacity = source.opacity;\n  this.resolution.copy(source.resolution);\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.near = source.near;\n  this.far = source.far;\n\n  return this;\n};\n\nexports.MeshLine = THREE.MeshLine;\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.selectNode = function(node) {\n    self.dragging = node;\n    self.selection = [node];\n    node.renderData.isSelected = true;\n    self.updateSelection(self.mouseX, self.mouseY);\n  };\n\n  /**\n   * Deselect nodes in selection list\n   */\n  self.clearSelection = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.selection[i].renderData.isSelected = false;\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = false;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.color)\n        );\n      }\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\n    }\n    self.selection = [];\n  };\n\n  /**\n   *  Update positions of all objects in self.selection\n   *  based on diff between mouse position and self.dragging position\n   */\n  self.updateSelection = function(mouseX, mouseY, selection) {\n    if (self.dragging) {\n      var diffx = mouseX - self.dragging.x;\n      var diffy = mouseY - self.dragging.y;\n    }\n\n    //'selection' only passed if a single node is double clicked\n    let clickedNode = selection;\n    //if not already pinned, then pin the node upon double-click\n    if(clickedNode && !clickedNode.pinnedx) {\n      clickedNode.pinnedx = true;\n      clickedNode.pinnedy = true;\n    } else if (clickedNode && clickedNode.pinnedx) {\n      //if already pinned, then unpin upon double-click\n      clickedNode.pinnedx = false;\n      clickedNode.pinnedy = false;\n    }\n    \n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.dragging) {\n        self.selection[i].x += diffx;\n        self.selection[i].y += diffy;\n        self.selection[i].fx = self.selection[i].x;\n        self.selection[i].fy = self.selection[i].y;\n        //pins multiple nodes when dragging\n        if(!clickedNode) {\n          self.selection[i].pinnedx = true;\n          self.selection[i].pinnedy = true;\n        }\n      }\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = true;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.hcolor)\n        );\n      }\n      self.selection[\n        i\n      ].renderData.textHolder.children[0].element.hideme = false;\n    }\n  };\n\n  /**\n   *  Find any objects within the current box selection and add it to self.selection\n   */\n  self.checkSelection = function(mouseX, mouseY) {\n    if (!self.dragging) {\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\n      if (self.mouseStart.x < self.mouseEnd.x) {\n        var left = self.mouseStart;\n        var right = self.mouseEnd;\n      } else {\n        var left = self.mouseEnd;\n        var right = self.mouseStart;\n      }\n\n      self.graph.forEachNode(function(node) {\n        let npos;\n        if (self.options.layout == \"ngraph\") {\n          npos = self.force.getNodePosition(node.id);\n        } else if (self.options.layout == \"d3\") {\n          npos = node;\n        }\n        if (self.insideBox(left, right, npos.x, npos.y)) {\n          self.selection.push(node);\n          //indicates nodes were in selection box \n          //when mouse is lifted\n          //self.multNodesHighlighted = true;\n        }\n      });\n    }\n  };\n\n  /**\n   *  returns true if pos is in box with top left l and bottom right r\n   */\n  self.insideBox = function(l, r, posx, posy) {\n    return (\n      posx < r.x &&\n      posx > l.x &&\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\n    );\n  };\n};","var Frame = require(\"./src/process\").Frame;\n\nexports.Frame = Frame;\n\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\n\nexports.graph = graph;\n\nif (window) {\n  window.Argo = exports;\n}\n","module.exports = __webpack_public_path__ + \"static/media/new_argologo_dark.e4370730.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_argologo_light.9cbe3f92.svg\";","import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const toaster = Toaster.create({\n  position: Position.TOP\n});\n\nexport default toaster;\n","var THREE = require(\"three\");\nvar STATS = require(\"stats.js\");\nwindow.THREE = THREE;\nrequire(\"../include/QuickHull\");\nrequire(\"../include/ConvexGeometry\");\nrequire(\"../include/CSS3DRenderer\");\nvar Edge = require(\"./structure/node\").Edge;\nvar Node = require(\"./structure/node\").Node;\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\nvar d3 = require(\"d3\");\nvar ee = require(\"event-emitter\");\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\n\nexports.default = {\n  THREE: THREE,\n  STATS: STATS, // stats.js panel for showing fps and other stats.\n  STATS_SHOW: false,\n  Edge: Edge,\n  Node: Node,\n  OrbitControls: OrbitControls,\n  d3: d3,\n  ee: ee,\n  NODE_COLOR: 0x0055aa,\n  NODE_HIGHLIGHT: 0x3498db,\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\n  SEARCH_HIGHLIGHT: 0xe67e22,\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\n  NODE_NO_HTEX: true,\n  NODE_NO_TEX: true,\n  NODE_NO_HCOLOR: false,\n  NODE_NO_COLOR: false,\n  NODE_NO_HIGHLIGHT: false,\n  NODE_NEIGHBOR_HIGHLIGHT: true,\n  NODE_SHAPE: \"square\",\n  NODE_HSHAPE: \"square\",\n  NODE_SIZE: 5,\n  HIGHLIGHT_SIZE: 1.0,\n  LAYOUT: \"d3\",\n  LINES: \"notfancy\",\n  MAP: !IS_IFRAME_WIDGET,\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\n  TEXT_SCALE: true,\n  TEXT_SIZE: 0.07,\n  TEXT_X_OFFSET: 0.52,\n  TEXT_Y_OFFSET: 0.35,\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\n  TEXT_OPACITY: \"1\",\n  TEXT_WIREFRAME: false,\n  PIN_COLOR: 0xffffff\n};\n","var def = require(\"./imports\").default;\nconst spawn = require(\"threads\").spawn;\nvar THREE = def.THREE;\nvar STATS = def.STATS;\nvar STATS_SHOW = def.STATS_SHOW;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nvar Frame = function(graph, options) {\n  // Needed to reference \"this\" in functions\n  var self = this;\n  appState.graph.process = this;\n  // Options\n  this.inGraph = graph;\n  this.options = options || {\n    layout: def.LAYOUT\n  };\n  this.layout_options = this.options.graphLayout || {};\n\n  this.lineObjects = [];\n  this.lineIndices = [];\n  this.MAX_LINES = 100000;\n  this.textureLoader = new THREE.TextureLoader();\n  this.textureLoader.crossOrigin = true;\n  this.oldIntersect = -1;\n  this.selection = [];\n  this.fov = 60;\n  this.near = 1;\n  this.far = 5000;\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\n  this.dragging = null;\n  this.showBox = false;\n  this.renderWidth = 1000;\n  this.renderHeight = 1000;\n  this.maxZoom = 1000;\n  this.paused = false;\n  this.mouseDown = false;\n  this.ee = ee({});\n  this.layoutInit = true;\n  this.labelSize = 6;\n  this.relativeFontSize = 1;\n  this.mapShowing = def.MAP;\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\n  this.darkMode = true;\n  this.lastNode = null;\n  this.rightClickedNode = null;\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\n  this.prevHighlights = [];\n  this.hull = null;\n\n  require(\"./utils/utils\")(this);\n  require(\"./setup\")(this);\n  require(\"./addremove\")(this);\n  require(\"./highlighting\")(this);\n  require(\"./select\")(this);\n  require(\"./mouse\")(this);\n  require(\"./modify\")(this);\n  require(\"./draw\")(this);\n  require(\"./api\")(this);\n  require(\"./update\")(this);\n\n  /**\n   *  Starting point, run once to create scene\n   */\n  let stats = new STATS();\n  this.display = function() {\n    if (STATS_SHOW) {\n      stats.showPanel(0); // show fps panel\n      document.body.appendChild(stats.dom);\n    }\n    this.animate();\n  };\n\n  /**\n   *  Creates loop called on every animation frame\n   */\n  \n  let fps = 30;\n  // let now;\n  // let then = Date.now();\n  // let interval = 1000 / fps;\n  // let delta;\n  this.animate = function() {\n    if (STATS_SHOW) {\n      stats.begin(); // Begin stats.js panel timing\n    }\n    \n    self.controls.update();\n    self.render();\n\n    if (STATS_SHOW) {\n      stats.end(); // End stats.js panel timing\n    }\n    \n    // now = Date.now();\n    // delta = now - then;\n    // if (delta > interval) {\n    //   then = now;\n    //   self.controls.update();\n    //   self.render();\n    // }\n    requestAnimationFrame(self.animate);\n  };\n\n  /**\n   *  Set initial properties\n   */\n  this.init = function(aa = true) {\n    self.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    self.minimapRenderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\n    //self.renderer.setPixelRatio(0.1);\n    self.setDisplayParams();\n    self.setRendererParams();\n\n    self.setupCamera();\n    self.setupMinimap();\n    self.setupGeometry();\n    self.setupSelect();\n\n    // Make sure to clear children before setting up new frame.\n    self.element.innerHTML = \"\";\n    self.element.appendChild(self.renderer.domElement);\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.element.appendChild(self.minimapRenderer.domElement);\n\n    self.setupLayout();\n\n    self.setupGraph();\n\n    window.addEventListener(\n      \"resize\",\n      function(e) {\n        e.preventDefault();\n        self.onWindowResize();\n      },\n      false\n    );\n  };\n\n  /**\n   * Change camera on window resize\n   */\n  self.onWindowResize = function() {\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.minimap.width = 0.2 * self.height;\n    self.minimap.height = 0.2 * self.height;\n    self.aspect = self.width / self.height;\n    self.ccamera.aspect = self.aspect;\n    self.ccamera.updateProjectionMatrix();\n\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer.setSize(self.width, self.height);\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n  };\n\n  /**\n   *  Draws graphics\n   */\n  var stage = 0;\n  var numberOfFrameSinceMiniMapRerender = 1;\n  this.render = function() {\n    self.updateCamera();\n    self.updateNodes();\n    if (stage == 1) {\n      self.updateLabels();\n      self.updateEdges();\n      stage = 0;\n    }\n    stage += 1;\n    numberOfFrameSinceMiniMapRerender += 1;\n    if (self.options.layout == \"d3\") {\n      if (self.layoutInit == true) {\n        var nodes = [];\n        self.graph.forEachNode(function(node) {\n          nodes.push(node);\n        });\n        self.force.nodes(nodes);\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\n        self.force.restart();\n        self.force.stop();\n        if (self.tickToStatic && !self.paused) {\n          // We don't tick and pause for now\n          for (\n            var i = 0,\n              n = Math.ceil(\n                Math.log(self.force.alphaMin()) /\n                  Math.log(1 - self.force.alphaDecay())\n              );\n            i < n;\n            ++i\n          ) {\n            self.force.tick();\n          }\n          //self.pauseLayout();\n        }\n        self.layoutInit = false;\n      }\n    }\n    self.renderer.setViewport(0, 0, self.width, self.height);\n    self.renderer.setScissor(0, 0, self.width, self.height);\n    self.renderer.setScissorTest(true);\n    self.renderer.render(self.scene, self.ccamera);\n    self.cssRenderer.render(self.scene, self.ccamera);\n\n    // Render MiniMap at a lower framerate.\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\n      numberOfFrameSinceMiniMapRerender = 0;\n\n      if (self.mapShowing) {\n        self.minimap.width = 0.2 * self.height;\n        self.minimap.height = 0.2 * self.height;\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissorTest(true);\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\n      }\n    }\n  };\n};\n\nexports.Frame = Frame;\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n *\n */\n\n(function() {\n  var Visible = 0;\n  var Deleted = 1;\n\n  function QuickHull() {\n    this.tolerance = -1;\n\n    this.faces = []; // the generated faces of the convex hull\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  Object.assign(QuickHull.prototype, {\n    setFromPoints: function(points) {\n      if (Array.isArray(points) !== true) {\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\n      }\n\n      if (points.length < 4) {\n        console.error(\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\n        );\n      }\n\n      this.makeEmpty();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n\n      this.compute();\n\n      return this;\n    },\n\n    setFromObject: function(object) {\n      var points = [];\n\n      object.updateMatrixWorld(true);\n\n      object.traverse(function(node) {\n        var i, l, point;\n\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              point = vertices[i].clone();\n              point.applyMatrix4(node.matrixWorld);\n\n              points.push(point);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                point = new THREE.Vector3();\n\n                point\n                  .fromBufferAttribute(attribute, i)\n                  .applyMatrix4(node.matrixWorld);\n\n                points.push(point);\n              }\n            }\n          }\n        }\n      });\n\n      return this.setFromPoints(points);\n    },\n\n    makeEmpty: function() {\n      this.faces = [];\n      this.vertices = [];\n\n      return this;\n    },\n\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n    addVertexToFace: function(vertex, face) {\n      vertex.face = face;\n\n      if (face.outside === null) {\n        this.assigned.append(vertex);\n      } else {\n        this.assigned.insertBefore(face.outside, vertex);\n      }\n\n      face.outside = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n    removeVertexFromFace: function(vertex, face) {\n      if (vertex === face.outside) {\n        // fix face.outside link\n\n        if (vertex.next !== null && vertex.next.face === face) {\n          // face has at least 2 outside vertices, move the 'outside' reference\n\n          face.outside = vertex.next;\n        } else {\n          // vertex was the only outside vertex that face had\n\n          face.outside = null;\n        }\n      }\n\n      this.assigned.remove(vertex);\n\n      return this;\n    },\n\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n    removeAllVerticesFromFace: function(face) {\n      if (face.outside !== null) {\n        // reference to the first and last vertex of this face\n\n        var start = face.outside;\n        var end = face.outside;\n\n        while (end.next !== null && end.next.face === face) {\n          end = end.next;\n        }\n\n        this.assigned.removeSubList(start, end);\n\n        // fix references\n\n        start.prev = end.next = null;\n        face.outside = null;\n\n        return start;\n      }\n    },\n\n    // Removes all the visible vertices that 'face' is able to see\n\n    deleteFaceVertices: function(face, absorbingFace) {\n      var faceVertices = this.removeAllVerticesFromFace(face);\n\n      if (faceVertices !== undefined) {\n        if (absorbingFace === undefined) {\n          // mark the vertices to be reassigned to some other face\n\n          this.unassigned.appendChain(faceVertices);\n        } else {\n          // if there's an absorbing face try to assign as many vertices as possible to it\n\n          var vertex = faceVertices;\n\n          do {\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n            // will be changed by upcoming method calls\n\n            var nextVertex = vertex.next;\n\n            var distance = absorbingFace.distanceToPoint(vertex.point);\n\n            // check if 'vertex' is able to see 'absorbingFace'\n\n            if (distance > this.tolerance) {\n              this.addVertexToFace(vertex, absorbingFace);\n            } else {\n              this.unassigned.append(vertex);\n            }\n\n            // now assign next vertex\n\n            vertex = nextVertex;\n          } while (vertex !== null);\n        }\n      }\n\n      return this;\n    },\n\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n    resolveUnassignedPoints: function(newFaces) {\n      if (this.unassigned.isEmpty() === false) {\n        var vertex = this.unassigned.first();\n\n        do {\n          // buffer 'next' reference, see .deleteFaceVertices()\n\n          var nextVertex = vertex.next;\n\n          var maxDistance = this.tolerance;\n\n          var maxFace = null;\n\n          for (var i = 0; i < newFaces.length; i++) {\n            var face = newFaces[i];\n\n            if (face.mark === Visible) {\n              var distance = face.distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = face;\n              }\n\n              if (maxDistance > 1000 * this.tolerance) break;\n            }\n          }\n\n          // 'maxFace' can be null e.g. if there are identical vertices\n\n          if (maxFace !== null) {\n            this.addVertexToFace(vertex, maxFace);\n          }\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n\n      return this;\n    },\n\n    // Computes the extremes of a simplex which will be the initial hull\n\n    computeExtremes: function() {\n      var min = new THREE.Vector3();\n      var max = new THREE.Vector3();\n\n      var minVertices = [];\n      var maxVertices = [];\n\n      var i, l, j;\n\n      // initially assume that the first vertex is the min/max\n\n      for (i = 0; i < 3; i++) {\n        minVertices[i] = maxVertices[i] = this.vertices[0];\n      }\n\n      min.copy(this.vertices[0].point);\n      max.copy(this.vertices[0].point);\n\n      // compute the min/max vertex on all six directions\n\n      for (i = 0, l = this.vertices.length; i < l; i++) {\n        var vertex = this.vertices[i];\n        var point = vertex.point;\n\n        // update the min coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) < min.getComponent(j)) {\n            min.setComponent(j, point.getComponent(j));\n            minVertices[j] = vertex;\n          }\n        }\n\n        // update the max coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) > max.getComponent(j)) {\n            max.setComponent(j, point.getComponent(j));\n            maxVertices[j] = vertex;\n          }\n        }\n      }\n\n      // use min/max vectors to compute an optimal epsilon\n\n      this.tolerance =\n        3 *\n        Number.EPSILON *\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\n\n      return { min: minVertices, max: maxVertices };\n    },\n\n    // Computes the initial simplex assigning to its faces all the points\n    // that are candidates to form part of the hull\n\n    computeInitialHull: (function() {\n      var line3, plane, closestPoint;\n\n      return function computeInitialHull() {\n        if (line3 === undefined) {\n          line3 = new THREE.Line3();\n          plane = new THREE.Plane();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var vertex,\n          vertices = this.vertices;\n        var extremes = this.computeExtremes();\n        var min = extremes.min;\n        var max = extremes.max;\n\n        var v0, v1, v2, v3;\n        var i, l, j;\n\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n        // (max.x - min.x)\n        // (max.y - min.y)\n        // (max.z - min.z)\n\n        var distance,\n          maxDistance = 0;\n        var index = 0;\n\n        for (i = 0; i < 3; i++) {\n          distance =\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n          }\n        }\n\n        v0 = min[index];\n        v1 = max[index];\n\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n        maxDistance = 0;\n        line3.set(v0.point, v1.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1) {\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\n\n            distance = closestPoint.distanceToSquared(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v2 = vertex;\n            }\n          }\n        }\n\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n        maxDistance = 0;\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v3 = vertex;\n            }\n          }\n        }\n\n        var faces = [];\n\n        if (plane.distanceToPoint(v3.point) < 0) {\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v1, v2),\n            Face.create(v3, v1, v0),\n            Face.create(v3, v2, v1),\n            Face.create(v3, v0, v2)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n          }\n        } else {\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v2, v1),\n            Face.create(v3, v0, v1),\n            Face.create(v3, v1, v2),\n            Face.create(v3, v2, v0)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n\n            // join face[ i ] with face[ i + 1 ]\n\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n          }\n        }\n\n        // the initial hull is the tetrahedron\n\n        for (i = 0; i < 4; i++) {\n          this.faces.push(faces[i]);\n        }\n\n        // initial assignment of vertices to the faces of the tetrahedron\n\n        for (i = 0, l = vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (\n            vertex !== v0 &&\n            vertex !== v1 &&\n            vertex !== v2 &&\n            vertex !== v3\n          ) {\n            maxDistance = this.tolerance;\n            var maxFace = null;\n\n            for (j = 0; j < 4; j++) {\n              distance = this.faces[j].distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = this.faces[j];\n              }\n            }\n\n            if (maxFace !== null) {\n              this.addVertexToFace(vertex, maxFace);\n            }\n          }\n        }\n\n        return this;\n      };\n    })(),\n\n    // Removes inactive faces\n\n    reindexFaces: function() {\n      var activeFaces = [];\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n\n        if (face.mark === Visible) {\n          activeFaces.push(face);\n        }\n      }\n\n      this.faces = activeFaces;\n\n      return this;\n    },\n\n    // Finds the next vertex to create faces with the current hull\n\n    nextVertexToAdd: function() {\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n      if (this.assigned.isEmpty() === false) {\n        var eyeVertex,\n          maxDistance = 0;\n\n        // grap the first available face and start with the first visible vertex of that face\n\n        var eyeFace = this.assigned.first().face;\n        var vertex = eyeFace.outside;\n\n        // now calculate the farthest vertex that face can see\n\n        do {\n          var distance = eyeFace.distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            eyeVertex = vertex;\n          }\n\n          vertex = vertex.next;\n        } while (vertex !== null && vertex.face === eyeFace);\n\n        return eyeVertex;\n      }\n    },\n\n    // Computes a chain of half edges in CCW order called the 'horizon'.\n    // For an edge to be part of the horizon it must join a face that can see\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\n      // moves face's vertices to the 'unassigned' vertex list\n\n      this.deleteFaceVertices(face);\n\n      face.mark = Deleted;\n\n      var edge;\n\n      if (crossEdge === null) {\n        edge = crossEdge = face.getEdge(0);\n      } else {\n        // start from the next edge since 'crossEdge' was already analyzed\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n        edge = crossEdge.next;\n      }\n\n      do {\n        var twinEdge = edge.twin;\n        var oppositeFace = twinEdge.face;\n\n        if (oppositeFace.mark === Visible) {\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n            // the opposite face can see the vertex, so proceed with next edge\n\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n          } else {\n            // the opposite face can't see the vertex, so this edge is part of the horizon\n\n            horizon.push(edge);\n          }\n        }\n\n        edge = edge.next;\n      } while (edge !== crossEdge);\n\n      return this;\n    },\n\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n\n      this.faces.push(face);\n\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n      face.getEdge(-1).setTwin(horizonEdge.twin);\n\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n    },\n\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n    //  horizon opposite face and the face on the left/right\n\n    addNewFaces: function(eyeVertex, horizon) {\n      this.newFaces = [];\n\n      var firstSideEdge = null;\n      var previousSideEdge = null;\n\n      for (var i = 0; i < horizon.length; i++) {\n        var horizonEdge = horizon[i];\n\n        // returns the right side edge\n\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n        if (firstSideEdge === null) {\n          firstSideEdge = sideEdge;\n        } else {\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n          sideEdge.next.setTwin(previousSideEdge);\n        }\n\n        this.newFaces.push(sideEdge.face);\n        previousSideEdge = sideEdge;\n      }\n\n      // perform final join of new faces\n\n      firstSideEdge.next.setTwin(previousSideEdge);\n\n      return this;\n    },\n\n    // Adds a vertex to the hull\n\n    addVertexToHull: function(eyeVertex) {\n      var horizon = [];\n      var i, face;\n\n      this.unassigned.clear();\n\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n\n      this.addNewFaces(eyeVertex, horizon);\n\n      // reassign 'unassigned' vertices to the new faces\n\n      this.resolveUnassignedPoints(this.newFaces);\n\n      return this;\n    },\n\n    cleanup: function() {\n      this.assigned.clear();\n      this.unassigned.clear();\n      this.newFaces = [];\n\n      return this;\n    },\n\n    compute: function() {\n      var vertex;\n\n      this.computeInitialHull();\n\n      // add all available vertices gradually to the hull\n\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\n        this.addVertexToHull(vertex);\n      }\n\n      this.reindexFaces();\n\n      this.cleanup();\n\n      return this;\n    }\n  });\n\n  //\n\n  function Face() {\n    this.normal = new THREE.Vector3();\n    this.midpoint = new THREE.Vector3();\n    this.area = 0;\n\n    this.constant = 0; // signed distance from face to the origin\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  Object.assign(Face, {\n    create: function(a, b, c) {\n      var face = new Face();\n\n      var e0 = new HalfEdge(a, face);\n      var e1 = new HalfEdge(b, face);\n      var e2 = new HalfEdge(c, face);\n\n      // join edges\n\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n\n      // main half edge reference\n\n      face.edge = e0;\n\n      return face.compute();\n    }\n  });\n\n  Object.assign(Face.prototype, {\n    getEdge: function(i) {\n      var edge = this.edge;\n\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n\n      return edge;\n    },\n\n    compute: (function() {\n      var triangle;\n\n      return function compute() {\n        if (triangle === undefined) triangle = new THREE.Triangle();\n\n        var a = this.edge.tail();\n        var b = this.edge.head();\n        var c = this.edge.next.head();\n\n        triangle.set(a.point, b.point, c.point);\n\n        triangle.normal(this.normal);\n        triangle.midpoint(this.midpoint);\n        this.area = triangle.area();\n\n        this.constant = this.normal.dot(this.midpoint);\n\n        return this;\n      };\n    })(),\n\n    distanceToPoint: function(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  });\n\n  // Entity for a Doubly-Connected Edge List (DCEL).\n\n  function HalfEdge(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  Object.assign(HalfEdge.prototype, {\n    head: function() {\n      return this.vertex;\n    },\n\n    tail: function() {\n      return this.prev ? this.prev.vertex : null;\n    },\n\n    length: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceTo(head.point);\n      }\n\n      return -1;\n    },\n\n    lengthSquared: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceToSquared(head.point);\n      }\n\n      return -1;\n    },\n\n    setTwin: function(edge) {\n      this.twin = edge;\n      edge.twin = this;\n\n      return this;\n    }\n  });\n\n  // A vertex as a double linked list node.\n\n  function VertexNode(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n  // A double linked list that contains vertex nodes.\n\n  function VertexList() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  Object.assign(VertexList.prototype, {\n    first: function() {\n      return this.head;\n    },\n\n    last: function() {\n      return this.tail;\n    },\n\n    clear: function() {\n      this.head = this.tail = null;\n\n      return this;\n    },\n\n    // Inserts a vertex before the target vertex\n\n    insertBefore: function(target, vertex) {\n      vertex.prev = target.prev;\n      vertex.next = target;\n\n      if (vertex.prev === null) {\n        this.head = vertex;\n      } else {\n        vertex.prev.next = vertex;\n      }\n\n      target.prev = vertex;\n\n      return this;\n    },\n\n    // Inserts a vertex after the target vertex\n\n    insertAfter: function(target, vertex) {\n      vertex.prev = target;\n      vertex.next = target.next;\n\n      if (vertex.next === null) {\n        this.tail = vertex;\n      } else {\n        vertex.next.prev = vertex;\n      }\n\n      target.next = vertex;\n\n      return this;\n    },\n\n    // Appends a vertex to the end of the linked list\n\n    append: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n      vertex.next = null; // the tail has no subsequent vertex\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Appends a chain of vertices where 'vertex' is the head.\n\n    appendChain: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n\n      // ensure that the 'tail' reference points to the last vertex of the chain\n\n      while (vertex.next !== null) {\n        vertex = vertex.next;\n      }\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the linked list\n\n    remove: function(vertex) {\n      if (vertex.prev === null) {\n        this.head = vertex.next;\n      } else {\n        vertex.prev.next = vertex.next;\n      }\n\n      if (vertex.next === null) {\n        this.tail = vertex.prev;\n      } else {\n        vertex.next.prev = vertex.prev;\n      }\n\n      return this;\n    },\n\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n    removeSubList: function(a, b) {\n      if (a.prev === null) {\n        this.head = b.next;\n      } else {\n        a.prev.next = b.next;\n      }\n\n      if (b.next === null) {\n        this.tail = a.prev;\n      } else {\n        b.next.prev = a.prev;\n      }\n\n      return this;\n    },\n\n    isEmpty: function() {\n      return this.head === null;\n    }\n  });\n\n  // export\n\n  THREE.QuickHull = QuickHull;\n})();\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n(function() {\n  // ConvexGeometry\n\n  function ConvexGeometry(points) {\n    THREE.Geometry.call(this);\n\n    this.type = \"ConvexGeometry\";\n\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\n    this.mergeVertices();\n  }\n\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\n\n  // ConvexBufferGeometry\n\n  function ConvexBufferGeometry(points) {\n    THREE.BufferGeometry.call(this);\n\n    this.type = \"ConvexBufferGeometry\";\n\n    // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    // execute QuickHull\n\n    if (THREE.QuickHull === undefined) {\n      console.error(\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\n      );\n    }\n\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\n\n    // generate vertices and normals\n\n    var faces = quickHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    // build geometry\n\n    this.addAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\n  }\n\n  ConvexBufferGeometry.prototype = Object.create(\n    THREE.BufferGeometry.prototype\n  );\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\n  // export\n\n  THREE.ConvexGeometry = ConvexGeometry;\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\n})();\n","/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = require(\"three\");\n\nTHREE.CSS3DObject = function(element) {\n  THREE.Object3D.call(this);\n\n  this.element = element;\n  this.element.style.position = \"absolute\";\n\n  this.addEventListener(\"removed\", function() {\n    if (this.element.parentNode !== null) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  });\n};\n\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\n\nTHREE.CSS3DSprite = function(element) {\n  THREE.CSS3DObject.call(this, element);\n};\n\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\n\n//\n\nTHREE.CSS3DRenderer = function() {\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\n\n  var _width, _height;\n\n  var matrix = new THREE.Matrix4();\n\n  var cache = {\n    camera: { fov: 0, style: \"\" },\n    objects: {}\n  };\n\n  var domElement = document.createElement(\"div\");\n  domElement.style.overflow = \"hidden\";\n\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\n  domElement.style.MozTransformStyle = \"preserve-3d\";\n  domElement.style.oTransformStyle = \"preserve-3d\";\n  domElement.style.transformStyle = \"preserve-3d\";\n\n  this.domElement = domElement;\n\n  var cameraElement = document.createElement(\"div\");\n\n  cameraElement.style.position = \"absolute\";\n  cameraElement.style.left = \"50%\";\n  cameraElement.style.top = \"50%\";\n\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\n  cameraElement.style.transformStyle = \"preserve-3d\";\n\n  domElement.appendChild(cameraElement);\n\n  this.setClearColor = function() {};\n\n  // Added by Argo-lite, for optimization\n  this.isPaused = false;\n\n  this.getSize = function() {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function(width, height) {\n    _width = width;\n    _height = height;\n\n    domElement.style.width = width + \"px\";\n    domElement.style.height = height + \"px\";\n  };\n\n  function epsilon(value) {\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\n  }\n\n  function getCameraCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(-elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(elements[6]) +\n      \",\" +\n      epsilon(elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(-elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(-elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function getObjectCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(-elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(-elements[6]) +\n      \",\" +\n      epsilon(-elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function renderObject(object, camera) {\n    if (object instanceof THREE.CSS3DObject) {\n      var style;\n\n      if (object instanceof THREE.CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse);\n        matrix.transpose();\n        matrix.copyPosition(object.matrixWorld);\n        matrix.scale(object.scale);\n\n        matrix.elements[3] = 0;\n        matrix.elements[7] = 0;\n        matrix.elements[11] = 0;\n        matrix.elements[15] = 1;\n\n        style = getObjectCSSMatrix(matrix);\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld);\n      }\n\n      var element = object.element;\n      var cachedStyle = cache.objects[object.id];\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style;\n        element.style.MozTransform = style;\n        element.style.oTransform = style;\n        element.style.transform = style;\n\n        cache.objects[object.id] = style;\n      }\n\n      if (element.parentNode !== cameraElement) {\n        cameraElement.appendChild(element);\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], camera);\n    }\n  }\n\n  this.render = function(scene, camera) {\n    if (this.isPaused) {\n      return;\n    }\n    var fov =\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\n      _height;\n\n    if (cache.camera.fov !== fov) {\n      domElement.style.WebkitPerspective = fov + \"px\";\n      domElement.style.MozPerspective = fov + \"px\";\n      domElement.style.oPerspective = fov + \"px\";\n      domElement.style.perspective = fov + \"px\";\n\n      cache.camera.fov = fov;\n    }\n\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    var style =\n      \"translateZ(\" +\n      fov +\n      \"px)\" +\n      getCameraCSSMatrix(camera.matrixWorldInverse);\n\n    if (cache.camera.style !== style) {\n      cameraElement.style.WebkitTransform = style;\n      cameraElement.style.MozTransform = style;\n      cameraElement.style.oTransform = style;\n      cameraElement.style.transform = style;\n\n      cache.camera.style = style;\n    }\n\n    renderObject(scene, camera);\n  };\n};\n","var $ = require(\"jquery\");\n\nmodule.exports = function(THREE) {\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n\n  // This set of controls performs orbiting, dollying (zooming), and panning.\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls(object, domElement, appState) {\n\n    \n    this.appState = appState;\n\n    this.object = object;\n\n    this.domElement = domElement !== undefined ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // for space panning\n    this.spacePan = false;\n    this.bothPan = false;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function() {\n      return spherical.theta;\n    };\n\n    this.reset = function() {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function() {\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors(\n        object.up,\n        new THREE.Vector3(0, 1, 0)\n      );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function update() {\n        var position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(\n          scope.minAzimuthAngle,\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n        } else {\n          sphericalDelta.set(0, 0, 0);\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function() {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      window.removeEventListener(\"keydown\", onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function() {\n      var v = new THREE.Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    var panUp = (function() {\n      var v = new THREE.Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function() {\n      var offset = new THREE.Vector3();\n\n      return function pan(deltaX, deltaY) {\n        var element =\n          scope.domElement === document\n            ? scope.domElement.body\n            : scope.domElement;\n\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(\n            ((scope.object.fov / 2) * Math.PI) / 180.0\n          );\n\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          );\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    // Expose panning for external usage\n    this.pan = pan;\n\n\n    function dollyIn(dollyScale, mousePos, event) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyOut(dollyScale, mousePos) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    //public zoom in function, used when zoom in button clicked\n    this.dollyIn = function(scale) {\n      dollyIn(scale);\n      scope.update()\n    }\n    //public zoom out function, used when zoom out button clicked\n    this.dollyOut = function(scale) {\n      dollyOut(scale);\n      scope.update()\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      //console.log( 'handleMouseDownDolly' );\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      //console.log( 'handleMouseMoveRotate' );\n    \n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      //console.log( 'handleMouseMoveDolly' );\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyIn(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyOut(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(event) {\n      //console.log( 'handleMouseUp' );\n    }\n\n    function handleMouseWheel(event) {\n      \n      mousePos = {x: event.clientX, y: event.clientY}\n\n      if (event.deltaY < 0) {\n        dollyOut(getZoomScale(), mousePos, event);\n      } else if (event.deltaY > 0) {\n        dollyIn(getZoomScale(), mousePos, event);\n      }\n\n      scope.update();\n    }\n\n    function handleKeyUp(event) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = false;\n            state = STATE.NONE;\n          }\n          break;\n      }\n    }\n\n    function handleKeyDown(event) {\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = true;\n            state = STATE.PAN;\n          }\n          break;\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchStartDolly(event) {\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartPan(event) {\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchMoveRotate(event) {\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMoveDolly(event) {\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMovePan(event) {\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleTouchEnd(event) {\n      //console.log( 'handleTouchEnd' );\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (!scope.spacePan || scope.bothPan) {\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        }\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", onMouseMove, false);\n        document.addEventListener(\"mouseup\", onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (scope.spacePan == true) {\n          if (scope.spacePanStart == true) {\n            handleMouseDownPan(event);\n            scope.spacePanStart = false;\n          }\n        }\n\n        handleMouseMovePan(event);\n      }\n    }\n\n    function onMouseUp(event) {\n      if (scope.enabled === false) return;\n\n      handleMouseUp(event);\n\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n\n      handleKeyDown(event);\n    }\n\n    function onKeyUp(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      handleKeyUp(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    window.addEventListener(\"keydown\", onKeyDown, false);\n    window.addEventListener(\"keyup\", onKeyUp, false);\n\n    // force an update at start\n\n    this.update();\n\n    \n    \n  }\n\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n\n  Object.defineProperties(OrbitControls.prototype, {\n    center: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .center has been renamed to .target\"\n        );\n        return this.target;\n      }\n    },\n\n    // backward compatibility\n\n    noZoom: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        return !this.enableZoom;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        this.enableZoom = !value;\n      }\n    },\n\n    noRotate: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        return !this.enableRotate;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        this.enableRotate = !value;\n      }\n    },\n\n    noPan: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        return !this.enablePan;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        this.enablePan = !value;\n      }\n    },\n\n    noKeys: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        return !this.enableKeys;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        this.enableKeys = !value;\n      }\n    },\n\n    staticMoving: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        return !this.enableDamping;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        this.enableDamping = !value;\n      }\n    },\n\n    dynamicDampingFactor: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        return this.dampingFactor;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        this.dampingFactor = value;\n      }\n    }\n  });\n\n  \n\n  return OrbitControls;\n};\n","var def = require(\"../imports\").default;\nvar appState = require(\"../../../stores\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Calculates coordinates of mouse on canvas adjusted for padding\n   * @param {*} event\n   * @param {*} currentElement\n   */\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\n    var totalOffsetX = 0;\n    var totalOffsetY = 0;\n    var canvasX = 0;\n    var canvasY = 0;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while ((currentElement = currentElement.offsetParent));\n\n    canvasX = pageX - totalOffsetX;\n    canvasY = pageY - totalOffsetY;\n\n    return { x: canvasX, y: canvasY };\n  };\n\n  /**\n   * Add metadata to node\n   * @param {*} node\n   */\n  self.prepNode = function(node) {\n    let nodeToAdd = node;\n    if (!node.data) {\n      node.data = {};\n    }\n\n    let hexToRGB = (hex) => {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \n      new THREE.Color(appState.graph.edges.color)\n      : null;\n  }\n    nodeToAdd.renderData = {\n      label: node.data.label || \"No Label\",\n      color: node.data.color || def.NODE_COLOR,\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\n      shape: node.data.shape || def.NODE_SHAPE,\n      linecolor:  hexToRGB(appState.graph.edges.color),\n      numYeast: Math.ceil(Math.random() * 8),\n      size: node.data.size,\n      tsize: node.data.tsize || def.TEXT_SIZE,\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    return nodeToAdd;\n  };\n\n  /**\n   * Creates a generic rectangle shape to use for selection and boundaries\n   */\n  self.make1x1Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, 0);\n    rectShape.lineTo(0, 0);\n    rectShape.lineTo(0, 1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   * Creates a centered 2x2 Rectangle\n   */\n  self.make2x2Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(-1, -1);\n    rectShape.lineTo(-1, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, -1);\n    rectShape.lineTo(-1, -1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   *  find radius of circle given the volume\n   * @param {*} volume\n   */\n  self.volToRadius = function(volume) {\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nconst { default: appState } = require(\"../../stores\");\n\n\nmodule.exports = function(self) {\n  /**\n   * Creates or converts ngraph or d3 graph\n   */\n  self.setupGraph = function() {\n    var createNGraph = require(\"ngraph.graph\");\n    self.graph = createNGraph();\n    if (self.inGraph) {\n      self.updateGraph(self.inGraph);\n    }\n  };\n\n  /**\n   *  Create layout using d3\n   */\n  self.setupLayout = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.setupNgraphLayout();\n    } else if (self.options.layout == \"d3\") {\n      self.setupD3Layout();\n    }\n  };\n\n  /**\n   * Set graph layout to ngraph\n   */\n  self.setupNgraphLayout = function() {\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\n  };\n\n  /**\n   * Set graph layout to D3 Force Directed and set decay parameters\n   */\n  self.setupD3Layout = function() {\n    self.force = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody().strength(-1))\n      .force(\"link\", d3.forceLink())\n      .force(\"y\", d3.forceY(0).strength(0.001))\n      .force(\"x\", d3.forceX(0).strength(0.001))\n      .stop();\n\n    // set alpha decay to be lower than the default 0.0228\n    // so force layout does not prematurely stop\n    self.force.alphaDecay(0.005);\n\n    // set velocity decay to be lower than the default 0.4\n    // so nodes move to their final locations\n    self.force.velocityDecay(0.1);\n  };\n\n  self.setDisplayParams = function() {\n    self.element = document.getElementById(\"graph-container\");\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.aspect = self.width / self.height;\n    self.resolution = new THREE.Vector2(self.width, self.height);\n  };\n\n  self.setRendererParams = function() {\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer = new THREE.CSS3DRenderer();\n    self.cssRenderer.setSize(self.width, self.height);\n    self.cssRenderer.domElement.style.position = \"absolute\";\n    self.cssRenderer.domElement.style.top = 0;\n    self.minimapRenderer.domElement.style.position = \"absolute\";\n    self.minimapRenderer.domElement.style.bottom = 0;\n    self.minimapRenderer.domElement.style.left = 0;\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n    self.minimapRenderer.zIndex = 1000;\n    self.renderer.setPixelRatio(window.devicePixelRatio);\n  };\n\n  /**\n   *  Create initial camera and parameters\n   */\n  self.setupCamera = function() {\n    self.ccamera = new THREE.PerspectiveCamera(\n      self.fov,\n      self.width / self.height,\n      self.near,\n      self.far\n    );\n    self.ccamera.position.z = 200;\n    var controls = new OrbitControls(self.ccamera, self.element, appState);\n    \n    //add orbitcontrols to appstate\n    appState.controls = controls\n\n    controls.spacePan = true; // Space bar panning\n    controls.bothPan = true; // Space bar and right click panning\n    controls.minDistance = 10;\n    controls.maxDistance = self.renderWidth * 2;\n    controls.target.set(0, 0, 0);\n    controls.enableRotate = false;\n    self.controls = controls;\n  };\n\n  /**\n   *  Create minimap\n   */\n  self.setupMinimap = function() {\n    self.minimap = {};\n    self.minimap.camera = new THREE.PerspectiveCamera(\n      self.fov,\n      1,\n      self.near,\n      self.far\n    );\n    self.minimap.camera.position.z = self.renderWidth * 2;\n\n    (self.oldCoords = {\n      x: null,\n      y: null,\n      z: null\n    }),\n      /**\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\n       * @param coordX mouse position on screen returned by relMouseCoords\n       * @param coordY mouse position on screen returned by relMouseCoords\n       */\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\n        // ensures that the camera position is updated from the last pan.\n        if (\n          self.ccamera.position.x == self.oldCoords.x &&\n          self.ccamera.position.y == self.oldCoords.y &&\n          self.ccamera.position.z == self.oldCoords.z\n        ) {\n          return;\n        }\n\n        self.oldCoords.x = self.ccamera.position.x;\n        self.oldCoords.y = self.ccamera.position.y;\n        self.oldCoords.z = self.ccamera.position.z;\n\n        // 850 is an approximation\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\n\n        self.controls.pan(\n          ((coordX / self.minimap.width) * 4000 -\n            2000 -\n            self.ccamera.position.x) *\n            -coefficient,\n          (((self.height - coordY) / self.minimap.height) * 4000 -\n            2000 -\n            self.ccamera.position.y) *\n            coefficient\n        );\n      });\n\n      appState.panToMousePosition = self.minimap.panToMousePosition;\n  };\n\n  /**\n   *  Create initial scene geometry and attributes\n   */\n  self.setupGeometry = function() {\n    self.scene = new THREE.Scene();\n\n    self.points = new THREE.BufferGeometry();\n    self.nodes = new THREE.Group();\n    self.scene.add(self.nodes);\n\n    if (def.LINES == \"fancy\") {\n      self.setupFancyEdges();\n    } else {\n      self.setUpSimpleEdges();\n    }\n\n    var rect = self.make1x1Rect();\n\n    self.setupSelectionBox(rect);\n    self.setupBoundaries(rect);\n    self.setupViewPort(rect);\n  };\n\n  /**\n   * Setup data structures for fancy edges\n   */\n  self.setupFancyEdges = function() {\n    self.edges = [];\n    self.edgeCount = 0;\n  };\n\n  /**\n   * Sets up data structures for simple edges\n   */\n  self.setUpSimpleEdges = function() {\n    self.edges = new THREE.BufferGeometry();\n    var material = new THREE.LineBasicMaterial({\n      linewidth: 2,\n      color: 0xffffff,\n      vertexColors: THREE.VertexColors,\n      shading: THREE.FlatShading\n    });\n    self.line = new THREE.LineSegments(self.edges, material);\n    self.line.frustumCulled = false;\n    self.scene.add(self.line);\n\n    var positions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var colors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.edges.addAttribute(\"position\", positions);\n    self.edges.addAttribute(\"color\", colors);\n\n    /**Adding triangles for directed edges update*/\n    self.directedArrows = new THREE.BufferGeometry();\n    var arrowMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n    });\n    self.arrow = new THREE.Mesh(self.directedArrows, arrowMaterial);\n    self.arrow.frustumCulled = false;\n    self.scene.add(self.arrow)\n    var arrowPositions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var arrowColors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.directedArrows.addAttribute(\"position\", arrowPositions);\n    self.directedArrows.addAttribute(\"color\", arrowColors);\n    \n    self.drawCount = 0;\n  };\n\n  /**\n   * Adds box to screen that is displayed when selecting groups of nodes\n   */\n  self.setupSelectionBox = function(rect) {\n    self.selectBox = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\n    );\n    self.selectBox.visible = false;\n    self.scene.add(self.selectBox);\n  };\n\n  /**\n   * Sets boundaries for max edges of graph\n   */\n  self.setupBoundaries = function(rect) {\n    self.boundaries = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\n    ); \n    self.scene.add(self.boundaries);\n    self.setBoundarySize(self.renderWidth * 2);\n  };\n\n  /**\n   * Sets viewport to match size of display\n   */\n  self.setupViewPort = function(rect) {\n    self.viewPort = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\n    );\n    self.scene.add(self.viewPort);\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   *  Creates listeners and events for selecting nodes\n   */\n  self.setupSelect = function() {\n    self.points.addAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\n    );\n    self.points.computeBoundingSphere();\n    self.nodeCount = 0;\n    var mouseHandler = function(callback) {\n      return function(event) {\n        event.preventDefault();\n        let pageX, pageY;\n        if (event.touches && event.touches.length > 0) {\n          // for touch events\n          pageX = event.touches.item(0).pageX;\n          pageY = event.touches.item(0).pageY;\n        } else {\n          pageX = event.pageX;\n          pageY = event.pageY;\n        }\n        \n        var coords = self.relMouseCoords(pageX, pageY, this);\n        var mouseX = (coords.x / self.width) * 2 - 1;\n        var mouseY = 1 - (coords.y / self.height) * 2;\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\n        mousePosition.unproject(self.ccamera);\n        var dir = mousePosition.sub(self.ccamera.position).clone();\n        mousePosition.normalize();\n        // Determine whether mouse is on minimap\n        self.isMouseCoordinatesOnMinimap =\n          coords.x <= self.minimap.width &&\n          self.height - coords.y <= self.minimap.height;\n        if (self.isMouseCoordinatesOnMinimap) {\n          self.minimap.mouseX = coords.x;\n          self.minimap.mouseY = coords.y;\n        }\n\n        // Determine intersects\n        var raycaster = new THREE.Raycaster(\n          self.ccamera.position,\n          mousePosition\n        );\n\n        // Find real location of mouse\n        var distance = -self.ccamera.position.z / dir.z;\n        var pos = self.ccamera.position\n          .clone()\n          .add(dir.multiplyScalar(distance));\n\n        if (callback == self.onRightClick && event.which != 3) {\n          return;\n        }\n\n        if (\n          callback == self.onRightClick &&\n          event.target.getAttribute(\"contenteditable\")\n        ) {\n          event.target.focus();\n        } else {\n          event.preventDefault();\n          if (callback == self.onRightClick) {\n            self.onRightClickCoords(event);\n          }\n          self.callMouseHandler(event, raycaster, pos, callback);\n        }\n      };\n    };\n\n    //Add listeners to web page\n    self.setupMouseHandlers(mouseHandler);\n  };\n\n  /**\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\n   */\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\n    var intersects = raycaster.intersectObjects(self.nodes.children);\n    if (intersects.length) {\n      // If a node has been clicked\n      var nodeIndex = intersects[0].object.index;\n      self.oldIntersect = nodeIndex;\n      callback(\n        self.graph.getNode(nodeIndex),\n        pos.x,\n        pos.y,\n        event.button,\n        event.ctrlKey\n      );\n    } else {\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\n    }\n  };\n\n  /**\n   * Add Mouse Event Listeners to page\n   */\n  self.setupMouseHandlers = function(mouseHandler) {\n    self.element.addEventListener(\n      \"mousemove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"mousedown\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onRightClick),\n      false\n    );\n    self.element.addEventListener(\n      \"touchstart\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"touchmove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"touchend\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"touchcancel\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.addNode = function(node) {\n    self.graph.addNode(node.id, node.data);\n    var graphNode = self.graph.getNode(node.id);\n    graphNode.x = node.x;\n    graphNode.y = node.y;\n    graphNode.fx = node.fx;\n    graphNode.fy = node.fy;\n    graphNode.pinnedx = node.fx != undefined;\n    graphNode.pinnedy = node.fy != undefined;\n    self.prepNode(graphNode);\n    self.drawNode(graphNode);\n    graphNode.links = [];\n    self.layoutInit = true;\n    return graphNode;\n  };\n\n  self.removeNode = function(node) {\n    if (!node || !node.id) {\n      return;\n    }\n    self.removeGraphEdges(node);\n    self.undrawEdges(node);\n    self.nodes.remove(node.renderData.draw_object);\n    self.graph.removeNode(node.id);\n    self.undrawNode(node);\n    self.nodeCount -= 1;\n  };\n\n  self.removeGraphEdges = function(node) {\n    var nodeLinks = self.graph.getLinks(node.id);\n    if (nodeLinks) {\n      nodeLinks.forEach(function(edge) {\n        self.graph.removeLink(edge);\n      });\n    }\n  };\n\n  self.undrawNode = function(node) {\n    var nodes = self.force.nodes();\n    if (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id == node.id) {\n          self.scene.remove(nodes[i].renderData.draw_object);\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\n          nodes.splice(i, 1);\n        }\n      }\n    }\n  };\n\n  self.undrawEdges = function(node) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    var killed = 0;\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\n      if (\n        self.lineIndices[i - killed].source.id == node.id ||\n        self.lineIndices[i - killed].target.id == node.id\n      ) {\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\n          var k = j + 1;\n          if (k == self.lineIndices.length) {\n            positions[j * 6] = 0;\n            positions[j * 6 + 1] = 0;\n            positions[j * 6 + 3] = 0;\n            positions[j * 6 + 4] = 0;\n            colors[j * 6] = 255;\n            colors[j * 6 + 1] = 160;\n            colors[j * 6 + 2] = 80;\n            colors[j * 6 + 3] = 255;\n            colors[j * 6 + 4] = 160;\n            colors[j * 6 + 5] = 80;\n          } else {\n            self.lineIndices[j] = self.lineIndices[k];\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\n            positions[j * 6] = positions[k * 6];\n            positions[j * 6 + 1] = positions[k * 6 + 1];\n            positions[j * 6 + 3] = positions[k * 6 + 3];\n            positions[j * 6 + 4] = positions[k * 6 + 4];\n            colors[j * 6] = colors[k * 6];\n            colors[j * 6 + 1] = colors[k * 6 + 1];\n            colors[j * 6 + 2] = colors[k * 6 + 2];\n            colors[j * 6 + 3] = colors[k * 6 + 3];\n            colors[j * 6 + 4] = colors[k * 6 + 4];\n            colors[j * 6 + 5] = colors[k * 6 + 5];\n          }\n        }\n        self.lineIndices.pop();\n        self.lineObjects.pop();\n        self.lineObjects.pop();\n        self.drawCount -= 2;\n        killed += 1;\n      }\n    }\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\n  };\n\n  self.getNode = function(node_id) {\n    return self.graph.getNode(node_id);\n  };\n\n  self.addEdge = function(source, target, visible = true) {\n    self.graph.addLink(source.id, target.id);\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Change color of node edges\n   */\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\n    if (toggle) {\n      node.renderData.draw_object.children[0].material.color.setHex(color);\n      node.renderData.draw_object.children[0].visible = true;\n    } else {\n      node.renderData.draw_object.children[0].material.color.set(\n        node.renderData.hcolor\n      );\n      node.renderData.draw_object.children[0].visible = false;\n    }\n  };\n\n  /**\n   *  Highlight edges from and to a node and hide others\n   */\n  self.highlightEdges = function(node, toggle) {\n    const froms = [];\n    const tos = [];\n    for (var i = 0; i < self.selection.length; i++) {\n      for (var j = 0; j < self.selection[i].links.length; j++) {\n        froms.push(self.selection[i].links[j].fromId);\n        tos.push(self.selection[i].links[j].toId);\n      }\n    }\n    if (toggle) {\n      for (var i = 0; i < node.links.length; i++) {\n        froms.push(node.links[i].fromId);\n        tos.push(node.links[i].toId);\n      }\n      self.highlightNeighbors(node, froms, tos);\n    } else {\n      self.highlightNeighbors(node, froms, tos);\n    }\n  };\n\n  /**\n   * Highlight adjacent nodes\n   * \n   * Also highlights edges.\n   */\n  self.highlightNeighbors = function(node, froms, tos) {\n    self.graph.forEachNode(n => {\n      if (self.selection.indexOf(n) != -1 || n == node) {\n        // If the node is selected or the node is the node to be highlighted\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, true);\n        for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\n        }\n      } else if (\n        self.doHighlightNeighbors &&\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\n      ) {\n        // If the node is not selected or highlighted and\n        // if the node is present in either froms or tos arrays\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, false);\n      } else if (\n        !self.prevHighlights ||\n        self.prevHighlights.indexOf(n.id) == -1\n      ) {\n        self.colorNodeOpacity(n, 0.5);\n        self.colorNodeEdge(n, false);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      }\n    });\n  };\n\n  /**\n   *  Change color of node edges\n   */\n  self.colorNodeEdge = function(node, isHighlighted) {\n    let red = new THREE.Color(appState.graph.edges.color).r;\n    let blue = new THREE.Color(appState.graph.edges.color).g;\n    let green = new THREE.Color(appState.graph.edges.color).b;\n    if(isHighlighted) {\n      node.renderData.linecolor.r = red;\n      node.renderData.linecolor.g = blue;\n      node.renderData.linecolor.b = green;\n      self.arrow.material.color.setRGB(red, blue, green);\n    } else {\n      node.renderData.linecolor.r =  self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.g = self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.b = self.darkMode ? 0.25 : .75;\n    }\n    \n  };\n\n  /**\n   *  Change node opacity\n   */\n  self.colorNodeOpacity = function(node, op) {\n    node.renderData.draw_object.material.opacity = op;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\nconst { default: appState } = require(\"../../stores\");\n\nmodule.exports = function (self) {\n  \n\n\n  /**\n   * Mouse move event that selections nodes in selection box\n   */\n  self.onMouseMove = function (selection, mouseX, mouseY, button, ctrl) {  \n    // check if left button is not down\n    self.mouseX = mouseX;\n    self.mouseY = mouseY;\n    if (self.leftMouseDown && self.mouseDown) {\n      \n      // left-clicked empty space (i.e., not clicking a node)\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\n        self.clearSelection();\n      }\n\n\n      if (!self.dragging) {\n        // add nodes enclosed by selection box into node selection\n        self.checkSelection(mouseX, mouseY);\n      }\n    }\n\n    \n\n\n    if (self.selection.length > 0) {\n      // reactivate (in D3's terminology: reheat) the force layout\n      if (self.dragging) {\n        self.force.alpha(1);\n      }\n      // update position of nodes in selection\n      self.updateSelection(mouseX, mouseY);\n    }\n\n    if (!self.mouseDown) {\n      self.onHover(selection);\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n    } else {\n      // if mouse is in minimap, do nothing else\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n        self.minimap.panToMousePosition(\n          self.minimap.mouseX,\n          self.minimap.mouseY\n        );\n        return;\n      }\n\n\n\n      // update selection box size/position\n      if (self.leftMouseDown && !self.dragging) {\n        if (self.showBox) {\n          self.selectBox.visible = true;\n          self.showBox = false;\n        }\n        self.selectBox.position.x = mouseX;\n        self.selectBox.position.y = mouseY;\n        var diffx = self.mouseStart.x - mouseX;\n        var diffy = self.mouseStart.y - mouseY;\n        self.selectBox.scale.set(diffx, diffy, 1);\n      } else {\n        self.selectBox.visible = false;\n      }\n    }\n  };\n\n  /**\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\n   */\n  self.onHover = function (node) {\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\n      self.highlightNode(self.lastHover, false);\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\n      self.highlightEdges(node, false);\n    }\n    self.lastHover = node;\n    if (node) {\n      self.highlightNode(node, true);\n      node.renderData.textHolder.children[0].element.hideme = false;\n      self.highlightEdges(node, true);\n      //set currently hovered node\n      appState.graph.currentlyHovered = node;\n    } else if (self.selection.length == 0) {\n      self.graph.forEachNode(n => {\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      });\n    }\n    if (self.prevHighlights != undefined) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\n      }\n    }\n  };\n  \n\n\n\n\n  // vars to get time at mouse press and time at mouse release\n  var startTime = 0;\n  var endTime = 0;\n  /**\n   * Mouse down event to start a selection box or start dragging a node\n   */\n  self.onMouseDown = function (selection, mouseX, mouseY, button, ctrl) {\n    // if mouse is in minimap, do nothing else\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n      self.mouseDown = true;\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\n      return;\n    }\n\n    \n\n    self.leftMouseDown = true;\n    if (self.leftMouseDown) {\n      self.mouseDown = true;\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n      if (button == 0 && !self.dragging) {\n        self.showBox = true;\n      }\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\n        for (var i = 0; i < self.selection.length; i++) {\n          self.selection[i].renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            self.selection[\n              i\n            ].renderData.draw_object.children[0].visible = false;\n          } else {\n            self.selection[i].renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          self.selection[\n            i\n          ].renderData.textHolder.children[0].element.hideme = true;\n        }\n        self.selection = [];\n      }\n\n\n      if(selection) {\n        //when any node is clicked, un-smartpause if smartpaused\n        //appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused\n        appState.graph.smartPause.interactingWithGraph = true;\n      }\n\n\n      //captures click times to measure time distance between clicks\n      oldStartTime = startTime;\n      startTime = Date.now();\n\n      //keeps track of time difference\n      clickDifference = startTime - oldStartTime;\n\n      //sets whether or not last click was \n      //double click or not\n      if (clickDifference < 225) {\n        self.doubleClicked = true;\n      } else {\n        self.doubleClicked = false;\n      }\n\n      \n\n      //selects single node when dragged\n      if (selection) {\n        self.dragging = selection;\n        if (self.selection.indexOf(selection) == -1) {\n          self.selection.push(selection);\n          selection.renderData.isSelected = false;\n        }\n      }\n\n      if (selection) {\n        self.dragging = selection;\n        //only pins node if double-clicked\n        if (self.doubleClicked) {\n          //passing in 'selection' node to pass information for node to pin\n          self.updateSelection(self.dragging.x, self.dragging.y, selection);\n        } else if (ctrl) {\n          self.selection.splice(self.selection.indexOf(selection), 1);\n          selection.renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            selection.renderData.draw_object.children[0].visible = false;\n          } else {\n            selection.renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          selection.renderData.textHolder.children[0].element.hideme = true;\n          self.dragging = null;\n        }\n      } else {\n        if (self.newNodeIds) {\n          self.highlightNodeIds([], true);\n          self.newNodeIds = undefined;\n        }\n      }\n    }\n  };\n\n  /**\n   * Mouse up event that closes selection flags and emits selection to Argo\n   */\n  self.onMouseUp = function (selection, mouseX, mouseY, button) {\n    endTime = Date.now();\n    self.mouseDown = false;\n\n    //when not clicking, nodes aren't being interacted with\n    appState.graph.smartPause.interactingWithGraph = false;\n\n    // Left or right mouse button\n    if (true) {\n      self.showBox = false;\n      self.dragging = null;\n      self.selectBox.visible = false;\n\n      self.ee.emit(\"select-nodes\", self.selection);\n    }\n\n  };\n\n\n\n  /**\n   * Right click event to save right clicked node\n   */\n  self.onRightClick = function (selection) {\n    if (selection) {\n      self.rightClickedNode = selection;\n    } else {\n      self.rightClickedNode = null;\n    }\n  };\n\n  /**\n   * Right click event that emits context menu event to Argo\n   */\n  self.onRightClickCoords = function (event) {\n    // Don't show menu if dragging camera\n    if (endTime - startTime < 200) {\n      self.ee.emit(\"right-click\", {\n        pageX: event.pageX,\n        pageY: event.pageY\n      });\n    }\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Set all nodes to a size\n   */\n  self.setUniformNodeSize = function(s) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.scale.set(s, s, 1);\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n    });\n  };\n\n  /**\n   * Set all nodes to a size based on a value in the node's data\n   */\n  self.setNodeDataSize = function(dataValue) {\n    self.graph.forEachNode(function(node) {\n      dataVal = node.renderData[dataValue];\n      if (!dataVal) {\n        console.log(\"Data value does not exist\");\n      } else {\n        dataVal = Math.log(dataVal + 1);\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color\n   */\n  self.setUniformNodeColor = function(hsvDegree) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color based on a value in the node's data\n   */\n  self.setNodeDataColor = function(dataValue) {\n    var i = 0;\n    values = [];\n    min = null;\n    max = null;\n\n    self.graph.forEachNode(function(node) {\n      if ((dataVal = node.renderData[dataValue])) {\n        if (min == null) min = dataVal;\n        if (max == null) max = dataVal;\n        if (dataVal < min) min = dataVal;\n        else if (dataVal > max) max = dataVal;\n        values[i] = dataVal;\n        i += 1;\n      } else {\n        values[i] = -1;\n      }\n    });\n\n    i = 0;\n    self.graph.forEachNode(function(node) {\n      var hsvDegree;\n      if (values[i] == -1) {\n        hsvDegree = 0;\n      } else {\n        values[i] = (values[i] - min) / (max - min);\n        hsvDegree = values[i] * 120;\n      }\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n      i++;\n    });\n  };\n\n  /**\n   * Map a node attribute based on some mapping function\n   */\n  self.mapNodeAttributes = function(mapping, nodes = null) {\n    let val;\n    if (mapping[0] == \"degree\") {\n      val = node => (node.links ? node.links.length + 2 : 2);\n    } else if (mapping[0] == \"scalex\") {\n      val = node => node.renderData.draw_object.scale.x;\n    } else {\n      val = node => mapping[0];\n    }\n\n    let mod;\n    if (mapping[1] == \"volume\") {\n      mod = val => self.volToRadius(val);\n    } else if (mapping[1] == \"mult\") {\n      mod = val => val * mapping[3](val);\n    } else if (mapping[1] == \"add\") {\n      mod = val => val + mapping[3](val);\n    } else if (mapping[1] == \"log\") {\n      mod = val => Math.log(val);\n    } else {\n      mod = val => val;\n    }\n\n    let attr;\n    if (mapping[2] == \"scalexy\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.scale.set(val, val, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      };\n    } else if (mapping[2] == \"edgeColorRed\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.r = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.b = 1;\n        node.renderData.linecolor.r = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorGreen\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.g = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.r = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"nodeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.material.color.b = 1;\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"pinned\") {\n      attr = (node, val) => {\n        node.pinnedx = val;\n        node.pinnedy = val;\n      };\n    } else if (mapping[2] == \"labelSize\") {\n      attr = (node, val) => {\n        self.changeLabelFontSize(node, val);\n      };\n    } else if (mapping[2] == \"labelLength\") {\n      attr = (node, val) => {\n        self.changeLabelLength(node, val);\n      };\n    }\n\n    self.changeNodes(val, mod, attr, nodes);\n  };\n\n  /**\n   *  get attribute from node using function val\n   *  modify result with function mode\n   *  set node attribute with attr\n   */\n  self.changeNode = function(val, mod, attr, node) {\n    var v = val(node);\n    if (v != undefined) {\n      var r = mod(v);\n      if (r != undefined) {\n        attr(node, r);\n      }\n    }\n  };\n\n  /**\n   *  perform changeNode on many nodes\n   */\n  self.changeNodes = function(val, mod, attr, nodes = null) {\n    if (nodes == null) {\n      self.graph.forEachNode(function(node) {\n        self.changeNode(val, mod, attr, node);\n      });\n    } else {\n      for (var i = 0; i < nodes.length; i++) {\n        self.changeNode(val, mod, attr, nodes[i]);\n      }\n    }\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelLength = function(node, numChars) {\n    node.renderData.textHolder.children[0].element.children[0].style.width =\n      numChars.toString() + \"ch\";\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\n    size = size * relativeSize;\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\n      size.toString() + \"rem\";\n  };\n\n  /**\n   * Change boundary size\n   */\n  self.setBoundarySize = function(size) {\n    self.renderWidth = size;\n    self.renderHeight = size;\n    self.boundaries.scale.set(size * 2, size * 2, 1);\n    self.boundaries.position.x = -size;\n    self.boundaries.position.y = -size;\n    self.controls.maxDistance = size * 2;\n    self.minimap.camera.position.z = self.renderWidth * 2;\n  };\n\n  /**\n   * Change viewport size\n   */\n  self.setViewPortSize = function(camera) {\n    var distance = self.ccamera.position.z;\n    var height =\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\n    var width = height * camera.aspect + 5;\n    self.viewPort.scale.set(width, height, 1);\n    self.viewPort.position.x = camera.position.x - width / 2;\n    self.viewPort.position.y = camera.position.y - height / 2;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n\nmodule.exports = function(self) {\n  /**\n   *  Create highlight mesh\n   */\n  self.createHighlightMesh = function(node, texture) {\n    var shape =\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\n    if (shape == \"square\") {\n      var hgeometry = self.make2x2Rect();\n    } else {\n      var hgeometry = new THREE.CircleGeometry(1, 32);\n    }\n\n    return self.createHighlightDrawObject(hgeometry, node, texture);\n  };\n\n  /**\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\n   */\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\n    var size = self.getNodeSize(node);\n    var hsize = def.HIGHLIGHT_SIZE;\n\n    texture = def.NODE_NO_HTEX ? null : texture;\n    var color = def.NODE_NO_HCOLOR\n      ? null\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    hmaterial.transparent = true;\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\n    highlight.visible = true;\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\n    highlight.position.z = -0.01;\n    return highlight;\n  };\n\n  /**\n   *  Create node mesh\n   */\n  self.createNodeMesh = function(node, texture) {\n    var shape = node.renderData.shape || def.NODE_SHAPE;\n    if (shape == \"square\") {\n      var geometry = self.make2x2Rect();\n    } else {\n      var geometry = new THREE.CircleGeometry(1, 32);\n    }\n    return self.createNodeDrawObject(geometry, node, texture);\n  };\n\n  /**\n   * Create mesh to visual show pinning\n   */\n  self.createPinMesh = function(size) {\n    var geometry = self.make2x2Rect();\n    var color = new THREE.Color(def.PIN_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color });\n    var pinMesh = new THREE.Mesh(geometry, material);\n    pinMesh.scale.set(0.1, 0.1, 1);\n    pinMesh.position.z = 0.01;\n    pinMesh.visible = false;\n    return pinMesh;\n  };\n\n  /**\n   * Create the drawing information for a node\n   */\n  self.createNodeDrawObject = function(geometry, node, texture) {\n    var size = self.getNodeSize(node);\n\n    texture = def.NODE_NO_TEX ? null : texture;\n    var color = def.NODE_NO_COLOR\n      ? null\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    material.transparent = true;\n    var draw_object = new THREE.Mesh(geometry, material);\n    draw_object.scale.set(size, size, 1);\n    return draw_object;\n  };\n\n  /**\n   * Get the size of a node if it exists, otherwise get it from the render data.\n   */\n  self.getNodeSize = function(node) {\n    var size;\n    if (node.renderData.size != undefined) size = node.renderData.size;\n    else size = node.renderData[\"size\"];\n    return size;\n  };\n\n  self.createNodeLabel = function(node) {\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      wireframeLinewidth: 1,\n      side: THREE.DoubleSide\n    });\n    var geometry = new THREE.PlaneGeometry(1000, 200);\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\n    var label = self.createAndSetupLabelDiv(node, textMesh);\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\n    node.renderData.textHolder = textHolder;\n    self.scene.add(textHolder);\n  };\n\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\n    var textMesh = new THREE.Mesh(geometry, material);\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\n    var bbox = new THREE.Box3().setFromObject(textMesh);\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\n    textMesh.visible = def.TEXT_WIREFRAME;\n    return textMesh;\n  };\n\n  self.createAndSetupLabelDiv = function(node, textMesh) {\n    var label = self.createLabelDiv(node);\n    label.element.hidden = true;\n    label.position.copy(textMesh.position);\n    label.scale.copy(textMesh.scale);\n    return label;\n  };\n\n  self.createAndSetupTextHolder = function(label, textMesh) {\n    var textHolder = new THREE.Object3D();\n    textHolder.add(label);\n    textHolder.add(textMesh);\n    return textHolder;\n  };\n\n  /**\n   *  Create label div\n   */\n  self.createLabelDiv = function(node) {\n    // Create canvas to draw text label onto sprite image\n    var element = self.createLabelDivElement();\n    var content = document.createTextNode(node.renderData.label);\n    var textElement = self.createLabelTextElement();\n    textElement.appendChild(content);\n    element.appendChild(textElement);\n    var labelObj = new THREE.CSS3DObject(element);\n    return labelObj;\n  };\n\n  /**\n   * Creates the Label Div Element for a node's label\n   */\n  self.createLabelDivElement = function() {\n    var element = document.createElement(\"div\");\n    element.style.width = \"1000px\";\n    element.style.height = \"200px\";\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\n    element.style.opacity = def.TEXT_OPACITY;\n    return element;\n  };\n\n  /**\n   * Creates the text element to add to the label div for a node.\n   */\n  self.createLabelTextElement = function() {\n    var textElement = document.createElement(\"div\");\n    textElement.style.width = \"1000px\";\n    textElement.style.height = \"2ch\";\n    textElement.style.fontSize = \"96px\";\n    textElement.style.textOverflow = \"ellipsis\";\n    textElement.style.overflow = \"hidden\";\n    textElement.style.userSelect = \"all\";\n    textElement.style.whiteSpace = \"nowrap\";\n    //textElement.setAttribute('contenteditable', 'true');\n    return textElement;\n  };\n\n  /**\n   * Instantiates, sets highlight for, and sets position for the actual THREE\n   * drawing of a node\n   */\n  self.setupNodeDrawObject = function(node, htexture, texture) {\n    var draw_object = self.createNodeMesh(node, texture);\n\n    // Create highlight\n    if (!def.NODE_NO_HIGHLIGHT) {\n      var highlight = self.createHighlightMesh(node, htexture);\n      draw_object.add(highlight);\n    }\n\n    var pinMesh = self.createPinMesh();\n    draw_object.add(pinMesh);\n\n    draw_object.position.x = node.renderData.x;\n    draw_object.position.y = node.renderData.y;\n    draw_object.index = node.id;\n    draw_object.name = node.id;\n    node.renderData.draw_object = draw_object;\n\n    return draw_object;\n  };\n\n  /**\n   *  Create a node object and add it to the scene.\n   */\n  self.drawNode = function(node) {\n    function onHTextureLoad(node, htexture) {\n      // Load node texture\n      self.textureLoader.load(\n        node.renderData.image || def.NODE_TEXTURE,\n        onTextureLoad.bind(null, node, htexture)\n      );\n    }\n\n    function onTextureLoad(node, htexture, texture) {\n      // Create mesh for node\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\n\n      // Create div for label\n      self.createNodeLabel(node);\n\n      self.nodeCount += 1;\n      self.nodes.add(draw_object);\n    }\n\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\n      onTextureLoad(node, null, null);\n    } else {\n      // Load highlight texture\n      self.textureLoader.load(\n        node.renderData.himage || def.NODE_HTEXTURE,\n        onHTextureLoad.bind(null, node)\n      );\n    }\n  };\n\n  /**\n   *  Create an edge and add it to the lineSegments.\n   */\n  self.drawEdge = function(source, target, visible = true) {\n    if (\n      source.renderData.draw_object === undefined ||\n      target.renderData.draw_object === undefined\n    ) {\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\n      return;\n    }\n    var index = self.drawCount * 3;\n    self.lineObjects[index / 3] = source;\n    self.lineObjects[index / 3 + 1] = target;\n    if (!source.linkObjs) {\n      source.linkObjs = [];\n    }\n    if (!target.linkObjs) {\n      target.linkObjs = [];\n    }\n\n    self.lineIndices.push({\n      source: source,\n      target: target,\n      hide: !visible,\n      linecolor: source.renderData.linecolor, \n    });\n\n    source.linkObjs.push(self.lineIndices[index / 6]);\n    target.linkObjs.push(self.lineIndices[index / 6]);\n    self.updateColorsAndPositions(source, target, index);\n    self.drawCount += 2;\n  };\n\n  /**\n   * Update the colors and positions of the edges between source and target\n   */\n  self.updateColorsAndPositions = function(source, target, index) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n    var v1pos = source.renderData.draw_object.position;\n    var v2pos = target.renderData.draw_object.position;\n    var v1color = self.lineIndices[index / 6].linecolor;\n    var v2color = self.lineIndices[index / 6].linecolor;\n    colors[index] = v1color.b;\n    positions[index++] = v1pos.x;\n    colors[index] = v1color.g;\n    positions[index++] = v1pos.y;\n    colors[index] = v1color.r;\n    positions[index++] = v1pos.z - 0.02;\n    colors[index] = v2color.b;\n    positions[index++] = v2pos.x;\n    colors[index] = v2color.g;\n    positions[index++] = v2pos.y;\n    colors[index] = v2color.r;\n    positions[index++] = v2pos.z - 0.02;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n/**\n * These functions are endpoints revealed to Argo frontend\n */\nmodule.exports = function(self) {\n  /**\n   * Set frame.mouseMode to the specified mode\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\n   */\n  self.setMouseMode = mode => {\n    if (mode === \"select\") {\n      // This is the default mode, where users can select one or multiple nodes\n      self.mouseMode = \"select\";\n      self.isMouseModeMove = false;\n    } else if (mode === \"move\") {\n      // move mode, where user can drag the screen to achieve panning\n      self.mouseMode = \"move\";\n      self.isMouseModeMove = true;\n    }\n  };\n\n  self.pauseLayout = () => {\n    self.paused = true;\n  };\n  window.pause = self.pauseLayout;\n\n  self.resumeLayout = () => {\n    self.paused = false;\n  };\n\n  self.mapSelectedNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\n  };\n\n  self.mapAllNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\n  };\n\n  self.pinSelectedNodes = () => {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\n  };\n\n  self.unpinSelectedNodes = () => {\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\n  };\n\n  self.setLabelFontSize = size => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\n    });\n  };\n\n  self.setLabelRelativeSize = size => {\n    self.relativeFontSize = size;\n    self.setLabelFontSize(self.labelSize);\n  };\n\n  self.setLabelLength = numChars => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelLength(node, numChars);\n    });\n  };\n\n  self.toggleMiniMap = () => {\n    if (self.mapShowing) {\n      self.hideMiniMap();\n    } else {\n      self.showMiniMap();\n    }\n  };\n\n  self.showMiniMap = () => {\n    if (self.mapShowing) {\n      return;\n    }\n    self.mapShowing = true;\n    self.element.appendChild(self.minimapRenderer.domElement);\n  };\n\n  self.hideMiniMap = () => {\n    if (!self.mapShowing) {\n      return;\n    }\n    self.mapShowing = false;\n    self.element.removeChild(self.minimapRenderer.domElement);\n  };\n\n  // The CSS Renderer for rendering labels is the most expensive\n  // renderer. For 300+ nodes it's recommended to turn it off by\n  // default and only use it when no node is moving to prevent\n  // visible lagging (during layout, dragging etc.)\n  self.turnOffLabelCSSRenderer = () => {\n    if (self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.removeChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = true;\n  };\n\n  // See turnOffLabelCSSRenderer.\n  self.turnOnLabelCSSRenderer = () => {\n    if (!self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = false;\n  };\n\n  // Emits id of every node with label being displayed at this moment.\n  // Used to keep mobx state in sync since GraphStore and snapshot\n  // needs to save what nodes have labels shown and what not.\n  // Also turns off label CSSRenderer when no node is showing label.\n  self.updateNodesShowingLabels = () => {\n    var nodes = [];\n    self.graph.forEachNode(n => {\n      var node = self.graph.getNode(n.id);\n      if (node.renderData.textHolder.children[0].element.override) {\n        nodes.push(n.id);\n      }\n    });\n\n    // Turns off label CSSRenderer when no node is showing label.\n    // This is because CSSRenderer is slow.\n    if (nodes.length == 0) {\n      self.turnOffLabelCSSRenderer();\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \n      //Only turns on when no node is moving\n      self.turnOnLabelCSSRenderer();\n    }\n\n    self.ee.emit(\"show-node-label\", nodes);\n  };\n\n  self.toggleSelectedLabels = () => {\n    self.toggleLabels(self.selection.map(n => n.id));\n  };\n\n  self.showSelectedLabels = () => {\n    document.getElementById(\"showSelected\").style.display=\"none\";\n    document.getElementById(\"hideSelected\").style.display=\"inline\";\n    self.showLabels(self.selection.map(n => n.id));\n  };\n\n  self.hideSelectedLabels = () => {\n    document.getElementById(\"hideSelected\").style.display=\"none\";\n    document.getElementById(\"showSelected\").style.display=\"inline\";\n    self.hideLabels(self.selection.map(n => n.id));\n  };\n\n  self.toggleLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        if (\n          node.renderData.textHolder.children[0].element.override == undefined\n        ) {\n          node.renderData.textHolder.children[0].element.override = false;\n        }\n        node.renderData.textHolder.children[0].element.override = !node\n          .renderData.textHolder.children[0].element.override;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = true;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = false;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideAllLabels = () => {\n    document.getElementById(\"hideAll\").style.display=\"none\";\n    document.getElementById(\"showAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = false;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showAllLabels = () => {\n    document.getElementById(\"showAll\").style.display=\"none\";\n    document.getElementById(\"hideAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = true;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.setCanvasSize = function(size) {\n    self.setBoundarySize(size);\n  };\n\n  self.setAllNodesShape = function(shape) {\n    if (self.selection.length == 0) {\n      self.graph.forEachNode(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    } else {\n      self.selection.forEach(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    }\n  };\n\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\n    self.graph.forEachNode(function(node) {\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\n      } else {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      }\n    });\n  }\n\n  self.setNodeShape = function(node, shape) {\n    if (shape == \"square\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = self.make2x2Rect();\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\n    } else if (shape == \"circle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        32\n      );\n    } else if (shape == \"triangle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        3\n      );\n    } else if (shape == \"pentagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        5\n      );\n    } else if (shape == \"hexagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        6\n      );\n    } else if (shape == \"octagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        8\n      );\n    }\n  };\n\n  self.getNumSelected = function() {\n    if (self.selection.length == self.graph.getNodesCount()) {\n      return 0;\n    }\n    return self.selection.length;\n  };\n\n  self.toggleDark = function() {\n    self.darkMode = !self.darkMode;\n    self.updateViewPortEdgeColor();\n  };\n\n  self.updateViewPortEdgeColor = function() {\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \n  }\n\n  self.getGraph = function() {\n    return self.graph;\n  };\n\n  self.getNodeList = function() {\n    var nodes = [];\n    self.graph.forEachNode(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  };\n\n  self.getPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.x, node.y];\n    });\n    return poses;\n  };\n\n  self.getPinPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.fx, node.fy];\n    });\n    return poses;\n  };\n\n  // retrieves current graph's pinned nodes \n  self.getPinnedNodes = function() {\n    var poses = new Set();\n    self.graph.forEachNode(function(node) {\n      if(node.pinnedx && node.pinnedy) {\n        poses.add(node.id);\n      }\n    });\n    return poses;\n  }\n\n  //pins nodes that were pinned from a graph loaded in\n  self.setPinnedNodes = function(nodesToPin) {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], nodesToPin);\n  }\n\n  var alias = false;\n  self.toggleAlias = () => {\n    // TODO: recreate renderer with new antialias\n    // self.init(alias);\n    // self.display();\n    alias = !alias;\n  };\n\n  self.setLastNode = id => {\n    self.lastNode = self.graph.getNode(id);\n  };\n\n  self.dragLastNode = () => {\n    self.selectNode(self.lastNode);\n  };\n\n  var x = 1.0;\n  self.lowerRes = () => {\n    x -= 0.1;\n    self.renderer.setPixelRatio(x);\n    self.onWindowResize();\n  };\n\n  self.toggleNeighborHighlight = function() {\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\n  };\n\n  self.highlightNodeIds = function(nodeids, toggle) {\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\n      nodeids = nodeids[0];\n    }\n    if (self.prevHighlights) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.highlightNode(\n          self.prevHighlights[i],\n          !toggle,\n          def.SEARCH_HIGHLIGHT\n        );\n      }\n    }\n    self.prevHighlights = [];\n    self.graph.forEachNode(function(node) {\n      if (nodeids.indexOf(node.id) != -1) {\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\n        self.prevHighlights.push(node);\n      }\n    });\n  };\n\n  self.removeSelected = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.removeNode(self.selection[i]);\n    }\n    self.selection = [];\n  };\n\n  self.removeNodesByIds = function(nodeids) {\n    for (var i = 0; i < nodeids.length; i++) {\n      const node = self.graph.getNode(nodeids[i]);\n      if (node) {\n        self.removeNode(node);\n      }\n    }\n    self.selection = [];\n  };\n\n  self.getSelected = function() {\n    return self.selection;\n  };\n\n  self.getSelectedIds = function() {\n    return self.selection.map(n => n.id);\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateEdges = function() {\n    self.edges.setDrawRange(0, self.drawCount + 6);\n    var total = self.drawCount + 6;\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n     //directed arrows\n     self.directedArrows.attributes.position.array = new Float32Array(self.MAX_LINES * 3);\n     var arrowPosition = self.directedArrows.attributes.position.array;\n     var arrowColor = self.directedArrows.attributes.color.array;\n\n    for (var i = 0; i < total; i += 2) {\n      if (self.lineIndices[i / 2]) {\n        if (self.lineIndices[i / 2].hide) {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = 255;\n          colors[i * 3 + 1] = 255;\n          colors[i * 3 + 2] = 255;\n          colors[i * 3 + 3] = 255;\n          colors[i * 3 + 4] = 255;\n          colors[i * 3 + 5] = 255;\n        } else {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          var v1color = self.lineIndices[i / 2].linecolor;\n          var v2color = self.lineIndices[i / 2].linecolor;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = v1color.r;\n          colors[i * 3 + 1] = v1color.g;\n          colors[i * 3 + 2] = v1color.b;\n          colors[i * 3 + 3] = v2color.r;\n          colors[i * 3 + 4] = v2color.g;\n          colors[i * 3 + 5] = v2color.b;\n\n          //directed edges\n          if (appState.graph.directedOrNot) {\n            self.arrow.visible = true;\n            var midPointX = (v1pos.x + v2pos.x)/2;\n            var midPointY = (v1pos.y + v2pos.y)/2;\n\n            var dX = v2pos.x - v1pos.x;\n            var dY = v2pos.y - v1pos.y;\n\n            if (dX === 0) {\n              dX = 0.001;\n            }\n            var radianDegree = Math.atan(dY / dX);\n            // var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n            // var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n\n            // var degreeDifference = Math.PI/2 - radianDegree\n            arrowPosition[i / 2 * 9] = midPointX;\n            arrowPosition[i / 2 * 9 + 1] = midPointY;\n\n            if (dX >= 0) {\n              var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n\n            } else {\n              var tempXCorner = midPointX + Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY + Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n            }\n          } else {\n            self.arrow.visible = false;\n          } \n        }\n      }\n    }\n    self.edges.attributes.position.needsUpdate = true;\n    self.edges.attributes.color.needsUpdate = true;\n\n    self.directedArrows.attributes.position.needsUpdate = true;\n    self.directedArrows.attributes.color.needsUpdate = true;\n  };\n\n  /**\n   *  Update the position of the labels\n   */\n  self.updateLabels = function() {\n    var nodes = self.force.nodes();\n    for (var i = 0; i < nodes.length; i++) {\n      let thisNode = self.graph.getNode(nodes[i].id);\n      if (thisNode.renderData.textHolder != undefined) {\n        if (\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\n          !thisNode.renderData.textHolder.children[0].element.override\n        ) {\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\n        } else {\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\n        }\n      }\n      thisNode.renderData.textHolder.position.x =\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\n      thisNode.renderData.textHolder.position.y =\n        thisNode.renderData.draw_object.position.y;\n    }\n  };\n\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateNodes = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.graph.forEachNode(function(node) {\n        if (node.renderData) {\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\n            node.id\n          ).x;\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\n            node.id\n          ).y;\n        }\n      });\n      if (!self.paused) {\n        self.force.step();\n      }\n    } else if (self.options.layout == \"d3\") {\n      var nodes = self.force.nodes();\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].x = Math.max(\n          -self.renderWidth,\n          Math.min(self.renderWidth, nodes[i].x)\n        );\n        nodes[i].y = Math.max(\n          -self.renderHeight,\n          Math.min(self.renderHeight, nodes[i].y)\n        );\n        let thisNode = self.graph.getNode(nodes[i].id);\n        if (thisNode && thisNode.renderData.draw_object) {\n          if (!thisNode.pinnedx) {\n            thisNode.fx = null;\n            thisNode.renderData.draw_object.children[1].visible = false;\n          } else {\n            thisNode.fx = thisNode.x;\n            thisNode.renderData.draw_object.children[1].visible = true;\n          }\n          if (!thisNode.pinnedy) {\n            thisNode.fy = null;\n          } else {\n            thisNode.fy = thisNode.y;\n          }\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\n        }\n      }\n\n      if (!self.paused) {\n        self.force.tick();\n      }\n    }\n  };\n\n  /**\n   * Restrict camera translation\n   */\n  self.updateCamera = function() {\n    self.controls.target.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.object.position.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.target.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.controls.object.position.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\n   */\n  self.updateGraph = function(graph) {\n    var numNodesAdded = 0;\n    graph.forEachNode(function(node) {\n      var oldNode = self.graph.getNode(node.id);\n      if (!oldNode) {\n        if (!self.newNodeIds) {\n          self.newNodeIds = [];\n        }\n        self.newNodeIds.push(node.id);\n        self.addNode(node);\n        numNodesAdded += 1;\n        self.lastNode = self.graph.getNode(node.id);\n      } else {\n        self.updateNode(oldNode, node);\n      }\n    });\n    graph.forEachLink(function(link) {\n      if (!self.graph.getLink(link.fromId, link.toId)) {\n        self.addEdge(\n          self.graph.getNode(link.fromId),\n          self.graph.getNode(link.toId)\n        );\n      }\n    });\n\n    self.graph.forEachNode(function(node) {\n      var oldNode = graph.getNode(node.id);\n      if (!oldNode) {\n        self.removeNode(node);\n      }\n    });\n\n    self.force.alpha(1);\n    self.force.stop();\n\n    if (numNodesAdded > 10) {\n      // This seems unnecessary for now\n      // self.tickToStatic = true;\n      self.tickToStatic = false;\n    } else {\n      self.tickToStatic = false;\n    }\n\n    if (self.newNodeIds) {\n      // Highlight every new node.\n      self.highlightNodeIds(self.newNodeIds, true);\n\n      // Select every new node if there aren't too many of them.\n      if (self.newNodeIds.length < 10) {\n        for (let i = 0; i < self.newNodeIds.length; i++) {\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\n        }\n        self.ee.emit(\"select-nodes\", self.selection);\n      }\n    }\n  };\n\n  /**\n   * update positions in the ngraph given a list of positions\n   */\n  self.updatePositions = function(positions) {\n    self.graph.forEachNode(function(node) {\n      var pos = positions[node.id];\n      if (pos) {\n        node.x = pos[0];\n        node.y = pos[1];\n        if (node.pinnedx) {\n          node.fx = pos[0];\n        }\n        if (node.pinnedy) {\n          node.fy = pos[1];\n        }\n      }\n    });\n  };\n\n  /**\n   * Update a node given a new node\n   */\n  self.updateNode = function(node, newNode) {\n    if (newNode.data) {\n      if (node.data.color && newNode.data.color) {\n        node.data.color = newNode.data.color;\n        node.renderData.color = node.data.color;\n        node.renderData.draw_object.material.color.set(\n          new THREE.Color(node.data.color)\n        );\n      }\n      if (newNode.data.size && newNode.data.size > 0) {\n        node.data.size = newNode.data.size;\n        node.renderData.size = newNode.data.size;\n        node.renderData.draw_object.scale.set(\n          newNode.data.size,\n          newNode.data.size,\n          1\n        );\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n      if (newNode.data.label) {\n        node.data.label = newNode.data.label;\n        node.renderData.label = node.data.label;\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\n          node.data.label;\n      }\n      if (newNode.data.shape) {\n        node.data.shape = newNode.data.shape;\n        node.renderData.shape = node.data.shape;\n        self.setNodeShape(node, node.data.shape);\n      }\n    }\n  };\n};\n"],"sourceRoot":""}